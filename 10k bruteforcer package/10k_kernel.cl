__constant float cTable[4096] = {
    // cosine
    1.000000000f, 0.999998808f, 0.999995291f, 0.999989390f,
    0.999981165f, 0.999970615f, 0.999957621f, 0.999942362f,
    0.999924719f, 0.999904692f, 0.999882340f, 0.999857664f,
    0.999830604f, 0.999801159f, 0.999769390f, 0.999735296f,
    0.999698818f, 0.999660015f, 0.999618828f, 0.999575317f,
    0.999529421f, 0.999481201f, 0.999430597f, 0.999377668f,
    0.999322355f, 0.999264777f, 0.999204755f, 0.999142408f,
    0.999077737f, 0.999010682f, 0.998941302f, 0.998869538f,
    0.998795450f, 0.998719037f, 0.998640239f, 0.998559058f,
    0.998475552f, 0.998389721f, 0.998301566f, 0.998211026f,
    0.998118103f, 0.998022854f, 0.997925282f, 0.997825325f,
    0.997723043f, 0.997618437f, 0.997511446f, 0.997402132f,
    0.997290432f, 0.997176409f, 0.997060061f, 0.996941328f,
    0.996820271f, 0.996696889f, 0.996571124f, 0.996443033f,
    0.996312618f, 0.996179819f, 0.996044695f, 0.995907247f,
    0.995767415f, 0.995625257f, 0.995480776f, 0.995333910f,
    0.995184720f, 0.995033205f, 0.994879305f, 0.994723141f,
    0.994564593f, 0.994403660f, 0.994240463f, 0.994074881f,
    0.993906975f, 0.993736744f, 0.993564129f, 0.993389189f,
    0.993211925f, 0.993032336f, 0.992850423f, 0.992666125f,
    0.992479563f, 0.992290616f, 0.992099285f, 0.991905689f,
    0.991709769f, 0.991511464f, 0.991310835f, 0.991107941f,
    0.990902662f, 0.990695000f, 0.990485072f, 0.990272820f,
    0.990058184f, 0.989841282f, 0.989621997f, 0.989400446f,
    0.989176512f, 0.988950253f, 0.988721669f, 0.988490820f,
    0.988257587f, 0.988022029f, 0.987784147f, 0.987543941f,
    0.987301409f, 0.987056553f, 0.986809373f, 0.986559927f,
    0.986308098f, 0.986053944f, 0.985797524f, 0.985538721f,
    0.985277653f, 0.985014260f, 0.984748483f, 0.984480441f,
    0.984210074f, 0.983937442f, 0.983662426f, 0.983385086f,
    0.983105481f, 0.982823551f, 0.982539296f, 0.982252717f,
    0.981963873f, 0.981672704f, 0.981379211f, 0.981083393f,
    0.980785251f, 0.980484843f, 0.980182111f, 0.979877114f,
    0.979569793f, 0.979260147f, 0.978948176f, 0.978633940f,
    0.978317380f, 0.977998495f, 0.977677345f, 0.977353871f,
    0.977028131f, 0.976700068f, 0.976369739f, 0.976037085f,
    0.975702107f, 0.975364864f, 0.975025356f, 0.974683523f,
    0.974339366f, 0.973992944f, 0.973644257f, 0.973293245f,
    0.972939968f, 0.972584367f, 0.972226501f, 0.971866310f,
    0.971503913f, 0.971139133f, 0.970772147f, 0.970402837f,
    0.970031261f, 0.969657362f, 0.969281256f, 0.968902826f,
    0.968522072f, 0.968139112f, 0.967753828f, 0.967366278f,
    0.966976464f, 0.966584384f, 0.966189981f, 0.965793371f,
    0.965394437f, 0.964993238f, 0.964589775f, 0.964184046f,
    0.963776052f, 0.963365793f, 0.962953269f, 0.962538481f,
    0.962121427f, 0.961702049f, 0.961280465f, 0.960856616f,
    0.960430503f, 0.960002124f, 0.959571540f, 0.959138632f,
    0.958703458f, 0.958266079f, 0.957826436f, 0.957384527f,
    0.956940353f, 0.956493914f, 0.956045270f, 0.955594361f,
    0.955141187f, 0.954685748f, 0.954228103f, 0.953768194f,
    0.953306019f, 0.952841640f, 0.952374995f, 0.951906145f,
    0.951435030f, 0.950961649f, 0.950486064f, 0.950008273f,
    0.949528158f, 0.949045897f, 0.948561370f, 0.948074579f,
    0.947585583f, 0.947094381f, 0.946600914f, 0.946105242f,
    0.945607305f, 0.945107222f, 0.944604814f, 0.944100261f,
    0.943593442f, 0.943084419f, 0.942573190f, 0.942059755f,
    0.941544056f, 0.941026151f, 0.940506041f, 0.939983726f,
    0.939459205f, 0.938932478f, 0.938403547f, 0.937872350f,
    0.937339008f, 0.936803460f, 0.936265647f, 0.935725689f,
    0.935183525f, 0.934639156f, 0.934092522f, 0.933543801f,
    0.932992816f, 0.932439625f, 0.931884289f, 0.931326687f,
    0.930766940f, 0.930205047f, 0.929640889f, 0.929074585f,
    0.928506076f, 0.927935421f, 0.927362502f, 0.926787496f,
    0.926210225f, 0.925630808f, 0.925049245f, 0.924465477f,
    0.923879504f, 0.923291445f, 0.922701120f, 0.922108650f,
    0.921514034f, 0.920917213f, 0.920318305f, 0.919717133f,
    0.919113874f, 0.918508410f, 0.917900801f, 0.917290986f,
    0.916679084f, 0.916064978f, 0.915448725f, 0.914830327f,
    0.914209783f, 0.913587034f, 0.912962198f, 0.912335157f,
    0.911706030f, 0.911074758f, 0.910441279f, 0.909805715f,
    0.909168005f, 0.908528090f, 0.907886088f, 0.907242000f,
    0.906595707f, 0.905947268f, 0.905296743f, 0.904644072f,
    0.903989315f, 0.903332353f, 0.902673304f, 0.902012169f,
    0.901348829f, 0.900683403f, 0.900015891f, 0.899346232f,
    0.898674488f, 0.898000598f, 0.897324562f, 0.896646500f,
    0.895966232f, 0.895283937f, 0.894599497f, 0.893912971f,
    0.893224299f, 0.892533541f, 0.891840696f, 0.891145766f,
    0.890448749f, 0.889749587f, 0.889048338f, 0.888345063f,
    0.887639642f, 0.886932135f, 0.886222541f, 0.885510862f,
    0.884797096f, 0.884081244f, 0.883363366f, 0.882643342f,
    0.881921291f, 0.881197095f, 0.880470872f, 0.879742622f,
    0.879012227f, 0.878279805f, 0.877545297f, 0.876808703f,
    0.876070082f, 0.875329375f, 0.874586642f, 0.873841822f,
    0.873094976f, 0.872346044f, 0.871595085f, 0.870842040f,
    0.870086968f, 0.869329870f, 0.868570685f, 0.867809474f,
    0.867046237f, 0.866280973f, 0.865513623f, 0.864744246f,
    0.863972843f, 0.863199413f, 0.862423956f, 0.861646473f,
    0.860866964f, 0.860085368f, 0.859301805f, 0.858516216f,
    0.857728601f, 0.856938958f, 0.856147349f, 0.855353653f,
    0.854557991f, 0.853760302f, 0.852960587f, 0.852158904f,
    0.851355195f, 0.850549459f, 0.849741757f, 0.848932028f,
    0.848120332f, 0.847306609f, 0.846490920f, 0.845673263f,
    0.844853580f, 0.844031870f, 0.843208253f, 0.842382610f,
    0.841554999f, 0.840725362f, 0.839893818f, 0.839060247f,
    0.838224709f, 0.837387204f, 0.836547732f, 0.835706294f,
    0.834862888f, 0.834017515f, 0.833170176f, 0.832320869f,
    0.831469595f, 0.830616415f, 0.829761207f, 0.828904092f,
    0.828045070f, 0.827184021f, 0.826321065f, 0.825456142f,
    0.824589312f, 0.823720515f, 0.822849810f, 0.821977139f,
    0.821102500f, 0.820225954f, 0.819347501f, 0.818467140f,
    0.817584813f, 0.816700578f, 0.815814435f, 0.814926326f,
    0.814036310f, 0.813144386f, 0.812250614f, 0.811354876f,
    0.810457170f, 0.809557617f, 0.808656156f, 0.807752848f,
    0.806847572f, 0.805940390f, 0.805031359f, 0.804120362f,
    0.803207517f, 0.802292824f, 0.801376164f, 0.800457656f,
    0.799537241f, 0.798614979f, 0.797690868f, 0.796764791f,
    0.795836926f, 0.794907153f, 0.793975472f, 0.793041945f,
    0.792106569f, 0.791169345f, 0.790230215f, 0.789289236f,
    0.788346410f, 0.787401736f, 0.786455214f, 0.785506845f,
    0.784556568f, 0.783604503f, 0.782650590f, 0.781694829f,
    0.780737221f, 0.779777765f, 0.778816521f, 0.777853429f,
    0.776888490f, 0.775921702f, 0.774953127f, 0.773982704f,
    0.773010433f, 0.772036374f, 0.771060526f, 0.770082831f,
    0.769103348f, 0.768122017f, 0.767138898f, 0.766153991f,
    0.765167236f, 0.764178753f, 0.763188422f, 0.762196302f,
    0.761202395f, 0.760206699f, 0.759209216f, 0.758209884f,
    0.757208824f, 0.756205976f, 0.755201399f, 0.754194975f,
    0.753186822f, 0.752176821f, 0.751165152f, 0.750151634f,
    0.749136388f, 0.748119354f, 0.747100592f, 0.746080101f,
    0.745057762f, 0.744033754f, 0.743007958f, 0.741980433f,
    0.740951121f, 0.739920080f, 0.738887310f, 0.737852812f,
    0.736816585f, 0.735778570f, 0.734738886f, 0.733697414f,
    0.732654274f, 0.731609404f, 0.730562747f, 0.729514420f,
    0.728464365f, 0.727412641f, 0.726359129f, 0.725303948f,
    0.724247098f, 0.723188460f, 0.722128212f, 0.721066177f,
    0.720002532f, 0.718937099f, 0.717870057f, 0.716801286f,
    0.715730846f, 0.714658678f, 0.713584840f, 0.712509394f,
    0.711432219f, 0.710353374f, 0.709272802f, 0.708190620f,
    0.707106769f, 0.706021249f, 0.704934061f, 0.703845263f,
    0.702754736f, 0.701662600f, 0.700568795f, 0.699473321f,
    0.698376238f, 0.697277486f, 0.696177125f, 0.695075095f,
    0.693971455f, 0.692866147f, 0.691759229f, 0.690650702f,
    0.689540565f, 0.688428760f, 0.687315345f, 0.686200321f,
    0.685083687f, 0.683965385f, 0.682845533f, 0.681724072f,
    0.680601001f, 0.679476321f, 0.678350031f, 0.677222192f,
    0.676092684f, 0.674961627f, 0.673829019f, 0.672694743f,
    0.671558976f, 0.670421541f, 0.669282615f, 0.668142021f,
    0.666999936f, 0.665856242f, 0.664710999f, 0.663564146f,
    0.662415802f, 0.661265850f, 0.660114348f, 0.658961296f,
    0.657806695f, 0.656650543f, 0.655492842f, 0.654333591f,
    0.653172851f, 0.652010560f, 0.650846660f, 0.649681330f,
    0.648514390f, 0.647345960f, 0.646176040f, 0.645004511f,
    0.643831551f, 0.642657042f, 0.641481042f, 0.640303493f,
    0.639124453f, 0.637943923f, 0.636761844f, 0.635578334f,
    0.634393275f, 0.633206785f, 0.632018745f, 0.630829215f,
    0.629638255f, 0.628445745f, 0.627251804f, 0.626056373f,
    0.624859512f, 0.623661101f, 0.622461259f, 0.621259987f,
    0.620057225f, 0.618852973f, 0.617647290f, 0.616440177f,
    0.615231574f, 0.614021540f, 0.612810075f, 0.611597180f,
    0.610382795f, 0.609167039f, 0.607949793f, 0.606731117f,
    0.605511069f, 0.604289532f, 0.603066623f, 0.601842225f,
    0.600616455f, 0.599389315f, 0.598160684f, 0.596930683f,
    0.595699310f, 0.594466507f, 0.593232274f, 0.591996670f,
    0.590759695f, 0.589521289f, 0.588281572f, 0.587040365f,
    0.585797846f, 0.584553957f, 0.583308637f, 0.582062006f,
    0.580813944f, 0.579564571f, 0.578313768f, 0.577061653f,
    0.575808167f, 0.574553370f, 0.573297143f, 0.572039604f,
    0.570780754f, 0.569520533f, 0.568258941f, 0.566996038f,
    0.565731823f, 0.564466238f, 0.563199341f, 0.561931133f,
    0.560661554f, 0.559390724f, 0.558118522f, 0.556845009f,
    0.555570245f, 0.554294109f, 0.553016722f, 0.551737964f,
    0.550457954f, 0.549176633f, 0.547894061f, 0.546610177f,
    0.545324981f, 0.544038534f, 0.542750776f, 0.541461766f,
    0.540171444f, 0.538879931f, 0.537587047f, 0.536292970f,
    0.534997642f, 0.533701003f, 0.532403111f, 0.531104028f,
    0.529803634f, 0.528501987f, 0.527199149f, 0.525895000f,
    0.524589658f, 0.523283124f, 0.521975279f, 0.520666242f,
    0.519356012f, 0.518044531f, 0.516731799f, 0.515417874f,
    0.514102757f, 0.512786388f, 0.511468828f, 0.510150075f,
    0.508830130f, 0.507508993f, 0.506186664f, 0.504863083f,
    0.503538370f, 0.502212465f, 0.500885367f, 0.499557108f,
    0.498227656f, 0.496897042f, 0.495565265f, 0.494232297f,
    0.492898196f, 0.491562903f, 0.490226477f, 0.488888890f,
    0.487550169f, 0.486210287f, 0.484869242f, 0.483527064f,
    0.482183784f, 0.480839342f, 0.479493767f, 0.478147060f,
    0.476799220f, 0.475450277f, 0.474100202f, 0.472749025f,
    0.471396744f, 0.470043331f, 0.468688816f, 0.467333198f,
    0.465976506f, 0.464618683f, 0.463259786f, 0.461899787f,
    0.460538715f, 0.459176540f, 0.457813293f, 0.456448972f,
    0.455083579f, 0.453717113f, 0.452349573f, 0.450980991f,
    0.449611336f, 0.448240608f, 0.446868837f, 0.445496023f,
    0.444122136f, 0.442747235f, 0.441371262f, 0.439994276f,
    0.438616246f, 0.437237173f, 0.435857087f, 0.434475958f,
    0.433093816f, 0.431710660f, 0.430326492f, 0.428941280f,
    0.427555084f, 0.426167876f, 0.424779683f, 0.423390478f,
    0.422000259f, 0.420609087f, 0.419216901f, 0.417823702f,
    0.416429549f, 0.415034413f, 0.413638324f, 0.412241220f,
    0.410843164f, 0.409444153f, 0.408044159f, 0.406643212f,
    0.405241311f, 0.403838456f, 0.402434647f, 0.401029885f,
    0.399624199f, 0.398217559f, 0.396809995f, 0.395401478f,
    0.393992037f, 0.392581671f, 0.391170382f, 0.389758170f,
    0.388345033f, 0.386931002f, 0.385516047f, 0.384100199f,
    0.382683426f, 0.381265759f, 0.379847199f, 0.378427744f,
    0.377007425f, 0.375586182f, 0.374164075f, 0.372741073f,
    0.371317208f, 0.369892448f, 0.368466824f, 0.367040336f,
    0.365612984f, 0.364184797f, 0.362755716f, 0.361325800f,
    0.359895051f, 0.358463407f, 0.357030958f, 0.355597675f,
    0.354163527f, 0.352728546f, 0.351292759f, 0.349856138f,
    0.348418683f, 0.346980423f, 0.345541328f, 0.344101429f,
    0.342660725f, 0.341219217f, 0.339776874f, 0.338333756f,
    0.336889863f, 0.335445136f, 0.333999664f, 0.332553357f,
    0.331106305f, 0.329658449f, 0.328209847f, 0.326760441f,
    0.325310290f, 0.323859364f, 0.322407693f, 0.320955247f,
    0.319502026f, 0.318048090f, 0.316593379f, 0.315137923f,
    0.313681751f, 0.312224805f, 0.310767144f, 0.309308767f,
    0.307849646f, 0.306389809f, 0.304929227f, 0.303467959f,
    0.302005947f, 0.300543249f, 0.299079835f, 0.297615707f,
    0.296150893f, 0.294685364f, 0.293219149f, 0.291752249f,
    0.290284663f, 0.288816422f, 0.287347466f, 0.285877824f,
    0.284407526f, 0.282936573f, 0.281464934f, 0.279992640f,
    0.278519690f, 0.277046084f, 0.275571823f, 0.274096906f,
    0.272621363f, 0.271145165f, 0.269668311f, 0.268190861f,
    0.266712755f, 0.265234023f, 0.263754666f, 0.262274712f,
    0.260794103f, 0.259312928f, 0.257831097f, 0.256348670f,
    0.254865646f, 0.253382027f, 0.251897812f, 0.250413001f,
    0.248927608f, 0.247441620f, 0.245955050f, 0.244467899f,
    0.242980182f, 0.241491884f, 0.240003020f, 0.238513589f,
    0.237023607f, 0.235533059f, 0.234041959f, 0.232550308f,
    0.231058106f, 0.229565367f, 0.228072077f, 0.226578265f,
    0.225083917f, 0.223589033f, 0.222093627f, 0.220597684f,
    0.219101235f, 0.217604280f, 0.216106802f, 0.214608818f,
    0.213110313f, 0.211611331f, 0.210111842f, 0.208611846f,
    0.207111374f, 0.205610409f, 0.204108968f, 0.202607036f,
    0.201104641f, 0.199601755f, 0.198098406f, 0.196594596f,
    0.195090324f, 0.193585590f, 0.192080393f, 0.190574750f,
    0.189068660f, 0.187562123f, 0.186055154f, 0.184547737f,
    0.183039889f, 0.181531608f, 0.180022895f, 0.178513765f,
    0.177004218f, 0.175494254f, 0.173983872f, 0.172473088f,
    0.170961887f, 0.169450298f, 0.167938292f, 0.166425899f,
    0.164913118f, 0.163399950f, 0.161886394f, 0.160372451f,
    0.158858150f, 0.157343462f, 0.155828401f, 0.154312968f,
    0.152797192f, 0.151281044f, 0.149764538f, 0.148247674f,
    0.146730468f, 0.145212919f, 0.143695027f, 0.142176807f,
    0.140658244f, 0.139139339f, 0.137620121f, 0.136100575f,
    0.134580702f, 0.133060530f, 0.131540030f, 0.130019218f,
    0.128498107f, 0.126976699f, 0.125454977f, 0.123932973f,
    0.122410677f, 0.120888084f, 0.119365215f, 0.117842063f,
    0.116318628f, 0.114794925f, 0.113270953f, 0.111746714f,
    0.110222206f, 0.108697444f, 0.107172422f, 0.105647154f,
    0.104121633f, 0.102595866f, 0.101069860f, 0.099543616f,
    0.098017141f, 0.096490428f, 0.094963498f, 0.093436338f,
    0.091908954f, 0.090381362f, 0.088853553f, 0.087325536f,
    0.085797310f, 0.084268890f, 0.082740262f, 0.081211448f,
    0.079682440f, 0.078153245f, 0.076623864f, 0.075094298f,
    0.073564567f, 0.072034650f, 0.070504576f, 0.068974331f,
    0.067443922f, 0.065913349f, 0.064382628f, 0.062851757f,
    0.061320737f, 0.059789572f, 0.058258265f, 0.056726821f,
    0.055195246f, 0.053663537f, 0.052131705f, 0.050599750f,
    0.049067676f, 0.047535483f, 0.046003181f, 0.044470772f,
    0.042938258f, 0.041405641f, 0.039872926f, 0.038340122f,
    0.036807224f, 0.035274237f, 0.033741172f, 0.032208025f,
    0.030674804f, 0.029141508f, 0.027608145f, 0.026074719f,
    0.024541229f, 0.023007682f, 0.021474080f, 0.019940428f,
    0.018406730f, 0.016872987f, 0.015339206f, 0.0138053885f,
    0.012271538f, 0.010737659f, 0.009203754f, 0.007669829f,
    0.0061358847f,0.004601926f, 0.0030679568f,0.0015339801f,

    // negative sine
    0.000000000f,  -0.0015339801f,-0.0030679568f,-0.004601926f,
    -0.0061358847f,-0.007669829f, -0.009203754f, -0.010737659f,
    -0.012271538f, -0.0138053885f,-0.015339206f, -0.016872987f,
    -0.018406730f, -0.019940428f, -0.021474080f, -0.023007682f,
    -0.024541229f, -0.026074719f, -0.027608145f, -0.029141508f,
    -0.030674804f, -0.032208025f, -0.033741172f, -0.035274237f,
    -0.036807224f, -0.038340122f, -0.039872926f, -0.041405641f,
    -0.042938258f, -0.044470772f, -0.046003181f, -0.047535483f,
    -0.049067676f, -0.050599750f, -0.052131705f, -0.053663537f,
    -0.055195246f, -0.056726821f, -0.058258265f, -0.059789572f,
    -0.061320737f, -0.062851757f, -0.064382628f, -0.065913349f,
    -0.067443922f, -0.068974331f, -0.070504576f, -0.072034650f,
    -0.073564567f, -0.075094298f, -0.076623864f, -0.078153245f,
    -0.079682440f, -0.081211448f, -0.082740262f, -0.084268890f,
    -0.085797310f, -0.087325536f, -0.088853553f, -0.090381362f,
    -0.091908954f, -0.093436338f, -0.094963498f, -0.096490428f,
    -0.098017141f, -0.099543616f, -0.101069860f, -0.102595866f,
    -0.104121633f, -0.105647154f, -0.107172422f, -0.108697444f,
    -0.110222206f, -0.111746714f, -0.113270953f, -0.114794925f,
    -0.116318628f, -0.117842063f, -0.119365215f, -0.120888084f,
    -0.122410677f, -0.123932973f, -0.125454977f, -0.126976699f,
    -0.128498107f, -0.130019218f, -0.131540030f, -0.133060530f,
    -0.134580702f, -0.136100575f, -0.137620121f, -0.139139339f,
    -0.140658244f, -0.142176807f, -0.143695027f, -0.145212919f,
    -0.146730468f, -0.148247674f, -0.149764538f, -0.151281044f,
    -0.152797192f, -0.154312968f, -0.155828401f, -0.157343462f,
    -0.158858150f, -0.160372451f, -0.161886394f, -0.163399950f,
    -0.164913118f, -0.166425899f, -0.167938292f, -0.169450298f,
    -0.170961887f, -0.172473088f, -0.173983872f, -0.175494254f,
    -0.177004218f, -0.178513765f, -0.180022895f, -0.181531608f,
    -0.183039889f, -0.184547737f, -0.186055154f, -0.187562123f,
    -0.189068660f, -0.190574750f, -0.192080393f, -0.193585590f,
    -0.195090324f, -0.196594596f, -0.198098406f, -0.199601755f,
    -0.201104641f, -0.202607036f, -0.204108968f, -0.205610409f,
    -0.207111374f, -0.208611846f, -0.210111842f, -0.211611331f,
    -0.213110313f, -0.214608818f, -0.216106802f, -0.217604280f,
    -0.219101235f, -0.220597684f, -0.222093627f, -0.223589033f,
    -0.225083917f, -0.226578265f, -0.228072077f, -0.229565367f,
    -0.231058106f, -0.232550308f, -0.234041959f, -0.235533059f,
    -0.237023607f, -0.238513589f, -0.240003020f, -0.241491884f,
    -0.242980182f, -0.244467899f, -0.245955050f, -0.247441620f,
    -0.248927608f, -0.250413001f, -0.251897812f, -0.253382027f,
    -0.254865646f, -0.256348670f, -0.257831097f, -0.259312928f,
    -0.260794103f, -0.262274712f, -0.263754666f, -0.265234023f,
    -0.266712755f, -0.268190861f, -0.269668311f, -0.271145165f,
    -0.272621363f, -0.274096906f, -0.275571823f, -0.277046084f,
    -0.278519690f, -0.279992640f, -0.281464934f, -0.282936573f,
    -0.284407526f, -0.285877824f, -0.287347466f, -0.288816422f,
    -0.290284663f, -0.291752249f, -0.293219149f, -0.294685364f,
    -0.296150893f, -0.297615707f, -0.299079835f, -0.300543249f,
    -0.302005947f, -0.303467959f, -0.304929227f, -0.306389809f,
    -0.307849646f, -0.309308767f, -0.310767144f, -0.312224805f,
    -0.313681751f, -0.315137923f, -0.316593379f, -0.318048090f,
    -0.319502026f, -0.320955247f, -0.322407693f, -0.323859364f,
    -0.325310290f, -0.326760441f, -0.328209847f, -0.329658449f,
    -0.331106305f, -0.332553357f, -0.333999664f, -0.335445136f,
    -0.336889863f, -0.338333756f, -0.339776874f, -0.341219217f,
    -0.342660725f, -0.344101429f, -0.345541328f, -0.346980423f,
    -0.348418683f, -0.349856138f, -0.351292759f, -0.352728546f,
    -0.354163527f, -0.355597675f, -0.357030958f, -0.358463407f,
    -0.359895051f, -0.361325800f, -0.362755716f, -0.364184797f,
    -0.365612984f, -0.367040336f, -0.368466824f, -0.369892448f,
    -0.371317208f, -0.372741073f, -0.374164075f, -0.375586182f,
    -0.377007425f, -0.378427744f, -0.379847199f, -0.381265759f,
    -0.382683426f, -0.384100199f, -0.385516047f, -0.386931002f,
    -0.388345033f, -0.389758170f, -0.391170382f, -0.392581671f,
    -0.393992037f, -0.395401478f, -0.396809995f, -0.398217559f,
    -0.399624199f, -0.401029885f, -0.402434647f, -0.403838456f,
    -0.405241311f, -0.406643212f, -0.408044159f, -0.409444153f,
    -0.410843164f, -0.412241220f, -0.413638324f, -0.415034413f,
    -0.416429549f, -0.417823702f, -0.419216901f, -0.420609087f,
    -0.422000259f, -0.423390478f, -0.424779683f, -0.426167876f,
    -0.427555084f, -0.428941280f, -0.430326492f, -0.431710660f,
    -0.433093816f, -0.434475958f, -0.435857087f, -0.437237173f,
    -0.438616246f, -0.439994276f, -0.441371262f, -0.442747235f,
    -0.444122136f, -0.445496023f, -0.446868837f, -0.448240608f,
    -0.449611336f, -0.450980991f, -0.452349573f, -0.453717113f,
    -0.455083579f, -0.456448972f, -0.457813293f, -0.459176540f,
    -0.460538715f, -0.461899787f, -0.463259786f, -0.464618683f,
    -0.465976506f, -0.467333198f, -0.468688816f, -0.470043331f,
    -0.471396744f, -0.472749025f, -0.474100202f, -0.475450277f,
    -0.476799220f, -0.478147060f, -0.479493767f, -0.480839342f,
    -0.482183784f, -0.483527064f, -0.484869242f, -0.486210287f,
    -0.487550169f, -0.488888890f, -0.490226477f, -0.491562903f,
    -0.492898196f, -0.494232297f, -0.495565265f, -0.496897042f,
    -0.498227656f, -0.499557108f, -0.500885367f, -0.502212465f,
    -0.503538370f, -0.504863083f, -0.506186664f, -0.507508993f,
    -0.508830130f, -0.510150075f, -0.511468828f, -0.512786388f,
    -0.514102757f, -0.515417874f, -0.516731799f, -0.518044531f,
    -0.519356012f, -0.520666242f, -0.521975279f, -0.523283124f,
    -0.524589658f, -0.525895000f, -0.527199149f, -0.528501987f,
    -0.529803634f, -0.531104028f, -0.532403111f, -0.533701003f,
    -0.534997642f, -0.536292970f, -0.537587047f, -0.538879931f,
    -0.540171444f, -0.541461766f, -0.542750776f, -0.544038534f,
    -0.545324981f, -0.546610177f, -0.547894061f, -0.549176633f,
    -0.550457954f, -0.551737964f, -0.553016722f, -0.554294109f,
    -0.555570245f, -0.556845009f, -0.558118522f, -0.559390724f,
    -0.560661554f, -0.561931133f, -0.563199341f, -0.564466238f,
    -0.565731823f, -0.566996038f, -0.568258941f, -0.569520533f,
    -0.570780754f, -0.572039604f, -0.573297143f, -0.574553370f,
    -0.575808167f, -0.577061653f, -0.578313768f, -0.579564571f,
    -0.580813944f, -0.582062006f, -0.583308637f, -0.584553957f,
    -0.585797846f, -0.587040365f, -0.588281572f, -0.589521289f,
    -0.590759695f, -0.591996670f, -0.593232274f, -0.594466507f,
    -0.595699310f, -0.596930683f, -0.598160684f, -0.599389315f,
    -0.600616455f, -0.601842225f, -0.603066623f, -0.604289532f,
    -0.605511069f, -0.606731117f, -0.607949793f, -0.609167039f,
    -0.610382795f, -0.611597180f, -0.612810075f, -0.614021540f,
    -0.615231574f, -0.616440177f, -0.617647290f, -0.618852973f,
    -0.620057225f, -0.621259987f, -0.622461259f, -0.623661101f,
    -0.624859512f, -0.626056373f, -0.627251804f, -0.628445745f,
    -0.629638255f, -0.630829215f, -0.632018745f, -0.633206785f,
    -0.634393275f, -0.635578334f, -0.636761844f, -0.637943923f,
    -0.639124453f, -0.640303493f, -0.641481042f, -0.642657042f,
    -0.643831551f, -0.645004511f, -0.646176040f, -0.647345960f,
    -0.648514390f, -0.649681330f, -0.650846660f, -0.652010560f,
    -0.653172851f, -0.654333591f, -0.655492842f, -0.656650543f,
    -0.657806695f, -0.658961296f, -0.660114348f, -0.661265850f,
    -0.662415802f, -0.663564146f, -0.664710999f, -0.665856242f,
    -0.666999936f, -0.668142021f, -0.669282615f, -0.670421541f,
    -0.671558976f, -0.672694743f, -0.673829019f, -0.674961627f,
    -0.676092684f, -0.677222192f, -0.678350031f, -0.679476321f,
    -0.680601001f, -0.681724072f, -0.682845533f, -0.683965385f,
    -0.685083687f, -0.686200321f, -0.687315345f, -0.688428760f,
    -0.689540565f, -0.690650702f, -0.691759229f, -0.692866147f,
    -0.693971455f, -0.695075095f, -0.696177125f, -0.697277486f,
    -0.698376238f, -0.699473321f, -0.700568795f, -0.701662600f,
    -0.702754736f, -0.703845263f, -0.704934061f, -0.706021249f,
    -0.707106769f, -0.708190620f, -0.709272802f, -0.710353374f,
    -0.711432219f, -0.712509394f, -0.713584840f, -0.714658678f,
    -0.715730846f, -0.716801286f, -0.717870057f, -0.718937099f,
    -0.720002532f, -0.721066177f, -0.722128212f, -0.723188460f,
    -0.724247098f, -0.725303948f, -0.726359129f, -0.727412641f,
    -0.728464365f, -0.729514420f, -0.730562747f, -0.731609404f,
    -0.732654274f, -0.733697414f, -0.734738886f, -0.735778570f,
    -0.736816585f, -0.737852812f, -0.738887310f, -0.739920080f,
    -0.740951121f, -0.741980433f, -0.743007958f, -0.744033754f,
    -0.745057762f, -0.746080101f, -0.747100592f, -0.748119354f,
    -0.749136388f, -0.750151634f, -0.751165152f, -0.752176821f,
    -0.753186822f, -0.754194975f, -0.755201399f, -0.756205976f,
    -0.757208824f, -0.758209884f, -0.759209216f, -0.760206699f,
    -0.761202395f, -0.762196302f, -0.763188422f, -0.764178753f,
    -0.765167236f, -0.766153991f, -0.767138898f, -0.768122017f,
    -0.769103348f, -0.770082831f, -0.771060526f, -0.772036374f,
    -0.773010433f, -0.773982704f, -0.774953127f, -0.775921702f,
    -0.776888490f, -0.777853429f, -0.778816521f, -0.779777765f,
    -0.780737221f, -0.781694829f, -0.782650590f, -0.783604503f,
    -0.784556568f, -0.785506845f, -0.786455214f, -0.787401736f,
    -0.788346410f, -0.789289236f, -0.790230215f, -0.791169345f,
    -0.792106569f, -0.793041945f, -0.793975472f, -0.794907153f,
    -0.795836926f, -0.796764791f, -0.797690868f, -0.798614979f,
    -0.799537241f, -0.800457656f, -0.801376164f, -0.802292824f,
    -0.803207517f, -0.804120362f, -0.805031359f, -0.805940390f,
    -0.806847572f, -0.807752848f, -0.808656156f, -0.809557617f,
    -0.810457170f, -0.811354876f, -0.812250614f, -0.813144386f,
    -0.814036310f, -0.814926326f, -0.815814435f, -0.816700578f,
    -0.817584813f, -0.818467140f, -0.819347501f, -0.820225954f,
    -0.821102500f, -0.821977139f, -0.822849810f, -0.823720515f,
    -0.824589312f, -0.825456142f, -0.826321065f, -0.827184021f,
    -0.828045070f, -0.828904092f, -0.829761207f, -0.830616415f,
    -0.831469595f, -0.832320869f, -0.833170176f, -0.834017515f,
    -0.834862888f, -0.835706294f, -0.836547732f, -0.837387204f,
    -0.838224709f, -0.839060247f, -0.839893818f, -0.840725362f,
    -0.841554999f, -0.842382610f, -0.843208253f, -0.844031870f,
    -0.844853580f, -0.845673263f, -0.846490920f, -0.847306609f,
    -0.848120332f, -0.848932028f, -0.849741757f, -0.850549459f,
    -0.851355195f, -0.852158904f, -0.852960587f, -0.853760302f,
    -0.854557991f, -0.855353653f, -0.856147349f, -0.856938958f,
    -0.857728601f, -0.858516216f, -0.859301805f, -0.860085368f,
    -0.860866964f, -0.861646473f, -0.862423956f, -0.863199413f,
    -0.863972843f, -0.864744246f, -0.865513623f, -0.866280973f,
    -0.867046237f, -0.867809474f, -0.868570685f, -0.869329870f,
    -0.870086968f, -0.870842040f, -0.871595085f, -0.872346044f,
    -0.873094976f, -0.873841822f, -0.874586642f, -0.875329375f,
    -0.876070082f, -0.876808703f, -0.877545297f, -0.878279805f,
    -0.879012227f, -0.879742622f, -0.880470872f, -0.881197095f,
    -0.881921291f, -0.882643342f, -0.883363366f, -0.884081244f,
    -0.884797096f, -0.885510862f, -0.886222541f, -0.886932135f,
    -0.887639642f, -0.888345063f, -0.889048338f, -0.889749587f,
    -0.890448749f, -0.891145766f, -0.891840696f, -0.892533541f,
    -0.893224299f, -0.893912971f, -0.894599497f, -0.895283937f,
    -0.895966232f, -0.896646500f, -0.897324562f, -0.898000598f,
    -0.898674488f, -0.899346232f, -0.900015891f, -0.900683403f,
    -0.901348829f, -0.902012169f, -0.902673304f, -0.903332353f,
    -0.903989315f, -0.904644072f, -0.905296743f, -0.905947268f,
    -0.906595707f, -0.907242000f, -0.907886088f, -0.908528090f,
    -0.909168005f, -0.909805715f, -0.910441279f, -0.911074758f,
    -0.911706030f, -0.912335157f, -0.912962198f, -0.913587034f,
    -0.914209783f, -0.914830327f, -0.915448725f, -0.916064978f,
    -0.916679084f, -0.917290986f, -0.917900801f, -0.918508410f,
    -0.919113874f, -0.919717133f, -0.920318305f, -0.920917213f,
    -0.921514034f, -0.922108650f, -0.922701120f, -0.923291445f,
    -0.923879504f, -0.924465477f, -0.925049245f, -0.925630808f,
    -0.926210225f, -0.926787496f, -0.927362502f, -0.927935421f,
    -0.928506076f, -0.929074585f, -0.929640889f, -0.930205047f,
    -0.930766940f, -0.931326687f, -0.931884289f, -0.932439625f,
    -0.932992816f, -0.933543801f, -0.934092522f, -0.934639156f,
    -0.935183525f, -0.935725689f, -0.936265647f, -0.936803460f,
    -0.937339008f, -0.937872350f, -0.938403547f, -0.938932478f,
    -0.939459205f, -0.939983726f, -0.940506041f, -0.941026151f,
    -0.941544056f, -0.942059755f, -0.942573190f, -0.943084419f,
    -0.943593442f, -0.944100261f, -0.944604814f, -0.945107222f,
    -0.945607305f, -0.946105242f, -0.946600914f, -0.947094381f,
    -0.947585583f, -0.948074579f, -0.948561370f, -0.949045897f,
    -0.949528158f, -0.950008273f, -0.950486064f, -0.950961649f,
    -0.951435030f, -0.951906145f, -0.952374995f, -0.952841640f,
    -0.953306019f, -0.953768194f, -0.954228103f, -0.954685748f,
    -0.955141187f, -0.955594361f, -0.956045270f, -0.956493914f,
    -0.956940353f, -0.957384527f, -0.957826436f, -0.958266079f,
    -0.958703458f, -0.959138632f, -0.959571540f, -0.960002124f,
    -0.960430503f, -0.960856616f, -0.961280465f, -0.961702049f,
    -0.962121427f, -0.962538481f, -0.962953269f, -0.963365793f,
    -0.963776052f, -0.964184046f, -0.964589775f, -0.964993238f,
    -0.965394437f, -0.965793371f, -0.966189981f, -0.966584384f,
    -0.966976464f, -0.967366278f, -0.967753828f, -0.968139112f,
    -0.968522072f, -0.968902826f, -0.969281256f, -0.969657362f,
    -0.970031261f, -0.970402837f, -0.970772147f, -0.971139133f,
    -0.971503913f, -0.971866310f, -0.972226501f, -0.972584367f,
    -0.972939968f, -0.973293245f, -0.973644257f, -0.973992944f,
    -0.974339366f, -0.974683523f, -0.975025356f, -0.975364864f,
    -0.975702107f, -0.976037085f, -0.976369739f, -0.976700068f,
    -0.977028131f, -0.977353871f, -0.977677345f, -0.977998495f,
    -0.978317380f, -0.978633940f, -0.978948176f, -0.979260147f,
    -0.979569793f, -0.979877114f, -0.980182111f, -0.980484843f,
    -0.980785251f, -0.981083393f, -0.981379211f, -0.981672704f,
    -0.981963873f, -0.982252717f, -0.982539296f, -0.982823551f,
    -0.983105481f, -0.983385086f, -0.983662426f, -0.983937442f,
    -0.984210074f, -0.984480441f, -0.984748483f, -0.985014260f,
    -0.985277653f, -0.985538721f, -0.985797524f, -0.986053944f,
    -0.986308098f, -0.986559927f, -0.986809373f, -0.987056553f,
    -0.987301409f, -0.987543941f, -0.987784147f, -0.988022029f,
    -0.988257587f, -0.988490820f, -0.988721669f, -0.988950253f,
    -0.989176512f, -0.989400446f, -0.989621997f, -0.989841282f,
    -0.990058184f, -0.990272820f, -0.990485072f, -0.990695000f,
    -0.990902662f, -0.991107941f, -0.991310835f, -0.991511464f,
    -0.991709769f, -0.991905689f, -0.992099285f, -0.992290616f,
    -0.992479563f, -0.992666125f, -0.992850423f, -0.993032336f,
    -0.993211925f, -0.993389189f, -0.993564129f, -0.993736744f,
    -0.993906975f, -0.994074881f, -0.994240463f, -0.994403660f,
    -0.994564593f, -0.994723141f, -0.994879305f, -0.995033205f,
    -0.995184720f, -0.995333910f, -0.995480776f, -0.995625257f,
    -0.995767415f, -0.995907247f, -0.996044695f, -0.996179819f,
    -0.996312618f, -0.996443033f, -0.996571124f, -0.996696889f,
    -0.996820271f, -0.996941328f, -0.997060061f, -0.997176409f,
    -0.997290432f, -0.997402132f, -0.997511446f, -0.997618437f,
    -0.997723043f, -0.997825325f, -0.997925282f, -0.998022854f,
    -0.998118103f, -0.998211026f, -0.998301566f, -0.998389721f,
    -0.998475552f, -0.998559058f, -0.998640239f, -0.998719037f,
    -0.998795450f, -0.998869538f, -0.998941302f, -0.999010682f,
    -0.999077737f, -0.999142408f, -0.999204755f, -0.999264777f,
    -0.999322355f, -0.999377668f, -0.999430597f, -0.999481201f,
    -0.999529421f, -0.999575317f, -0.999618828f, -0.999660015f,
    -0.999698818f, -0.999735296f, -0.999769390f, -0.999801159f,
    -0.999830604f, -0.999857664f, -0.999882340f, -0.999904692f,
    -0.999924719f, -0.999942362f, -0.999957621f, -0.999970615f,
    -0.999981165f, -0.999989390f, -0.999995291f, -0.999998808f,

    // negative cosine
    -1.000000000f, -0.999998808f, -0.999995291f, -0.999989390f,
    -0.999981165f, -0.999970615f, -0.999957621f, -0.999942362f,
    -0.999924719f, -0.999904692f, -0.999882340f, -0.999857664f,
    -0.999830604f, -0.999801159f, -0.999769390f, -0.999735296f,
    -0.999698818f, -0.999660015f, -0.999618828f, -0.999575317f,
    -0.999529421f, -0.999481201f, -0.999430597f, -0.999377668f,
    -0.999322355f, -0.999264777f, -0.999204755f, -0.999142408f,
    -0.999077737f, -0.999010682f, -0.998941302f, -0.998869538f,
    -0.998795450f, -0.998719037f, -0.998640239f, -0.998559058f,
    -0.998475552f, -0.998389721f, -0.998301566f, -0.998211026f,
    -0.998118103f, -0.998022854f, -0.997925282f, -0.997825325f,
    -0.997723043f, -0.997618437f, -0.997511446f, -0.997402132f,
    -0.997290432f, -0.997176409f, -0.997060061f, -0.996941328f,
    -0.996820271f, -0.996696889f, -0.996571124f, -0.996443033f,
    -0.996312618f, -0.996179819f, -0.996044695f, -0.995907247f,
    -0.995767415f, -0.995625257f, -0.995480776f, -0.995333910f,
    -0.995184720f, -0.995033205f, -0.994879305f, -0.994723141f,
    -0.994564593f, -0.994403660f, -0.994240463f, -0.994074881f,
    -0.993906975f, -0.993736744f, -0.993564129f, -0.993389189f,
    -0.993211925f, -0.993032336f, -0.992850423f, -0.992666125f,
    -0.992479563f, -0.992290616f, -0.992099285f, -0.991905689f,
    -0.991709769f, -0.991511464f, -0.991310835f, -0.991107941f,
    -0.990902662f, -0.990695000f, -0.990485072f, -0.990272820f,
    -0.990058184f, -0.989841282f, -0.989621997f, -0.989400446f,
    -0.989176512f, -0.988950253f, -0.988721669f, -0.988490820f,
    -0.988257587f, -0.988022029f, -0.987784147f, -0.987543941f,
    -0.987301409f, -0.987056553f, -0.986809373f, -0.986559927f,
    -0.986308098f, -0.986053944f, -0.985797524f, -0.985538721f,
    -0.985277653f, -0.985014260f, -0.984748483f, -0.984480441f,
    -0.984210074f, -0.983937442f, -0.983662426f, -0.983385086f,
    -0.983105481f, -0.982823551f, -0.982539296f, -0.982252717f,
    -0.981963873f, -0.981672704f, -0.981379211f, -0.981083393f,
    -0.980785251f, -0.980484843f, -0.980182111f, -0.979877114f,
    -0.979569793f, -0.979260147f, -0.978948176f, -0.978633940f,
    -0.978317380f, -0.977998495f, -0.977677345f, -0.977353871f,
    -0.977028131f, -0.976700068f, -0.976369739f, -0.976037085f,
    -0.975702107f, -0.975364864f, -0.975025356f, -0.974683523f,
    -0.974339366f, -0.973992944f, -0.973644257f, -0.973293245f,
    -0.972939968f, -0.972584367f, -0.972226501f, -0.971866310f,
    -0.971503913f, -0.971139133f, -0.970772147f, -0.970402837f,
    -0.970031261f, -0.969657362f, -0.969281256f, -0.968902826f,
    -0.968522072f, -0.968139112f, -0.967753828f, -0.967366278f,
    -0.966976464f, -0.966584384f, -0.966189981f, -0.965793371f,
    -0.965394437f, -0.964993238f, -0.964589775f, -0.964184046f,
    -0.963776052f, -0.963365793f, -0.962953269f, -0.962538481f,
    -0.962121427f, -0.961702049f, -0.961280465f, -0.960856616f,
    -0.960430503f, -0.960002124f, -0.959571540f, -0.959138632f,
    -0.958703458f, -0.958266079f, -0.957826436f, -0.957384527f,
    -0.956940353f, -0.956493914f, -0.956045270f, -0.955594361f,
    -0.955141187f, -0.954685748f, -0.954228103f, -0.953768194f,
    -0.953306019f, -0.952841640f, -0.952374995f, -0.951906145f,
    -0.951435030f, -0.950961649f, -0.950486064f, -0.950008273f,
    -0.949528158f, -0.949045897f, -0.948561370f, -0.948074579f,
    -0.947585583f, -0.947094381f, -0.946600914f, -0.946105242f,
    -0.945607305f, -0.945107222f, -0.944604814f, -0.944100261f,
    -0.943593442f, -0.943084419f, -0.942573190f, -0.942059755f,
    -0.941544056f, -0.941026151f, -0.940506041f, -0.939983726f,
    -0.939459205f, -0.938932478f, -0.938403547f, -0.937872350f,
    -0.937339008f, -0.936803460f, -0.936265647f, -0.935725689f,
    -0.935183525f, -0.934639156f, -0.934092522f, -0.933543801f,
    -0.932992816f, -0.932439625f, -0.931884289f, -0.931326687f,
    -0.930766940f, -0.930205047f, -0.929640889f, -0.929074585f,
    -0.928506076f, -0.927935421f, -0.927362502f, -0.926787496f,
    -0.926210225f, -0.925630808f, -0.925049245f, -0.924465477f,
    -0.923879504f, -0.923291445f, -0.922701120f, -0.922108650f,
    -0.921514034f, -0.920917213f, -0.920318305f, -0.919717133f,
    -0.919113874f, -0.918508410f, -0.917900801f, -0.917290986f,
    -0.916679084f, -0.916064978f, -0.915448725f, -0.914830327f,
    -0.914209783f, -0.913587034f, -0.912962198f, -0.912335157f,
    -0.911706030f, -0.911074758f, -0.910441279f, -0.909805715f,
    -0.909168005f, -0.908528090f, -0.907886088f, -0.907242000f,
    -0.906595707f, -0.905947268f, -0.905296743f, -0.904644072f,
    -0.903989315f, -0.903332353f, -0.902673304f, -0.902012169f,
    -0.901348829f, -0.900683403f, -0.900015891f, -0.899346232f,
    -0.898674488f, -0.898000598f, -0.897324562f, -0.896646500f,
    -0.895966232f, -0.895283937f, -0.894599497f, -0.893912971f,
    -0.893224299f, -0.892533541f, -0.891840696f, -0.891145766f,
    -0.890448749f, -0.889749587f, -0.889048338f, -0.888345063f,
    -0.887639642f, -0.886932135f, -0.886222541f, -0.885510862f,
    -0.884797096f, -0.884081244f, -0.883363366f, -0.882643342f,
    -0.881921291f, -0.881197095f, -0.880470872f, -0.879742622f,
    -0.879012227f, -0.878279805f, -0.877545297f, -0.876808703f,
    -0.876070082f, -0.875329375f, -0.874586642f, -0.873841822f,
    -0.873094976f, -0.872346044f, -0.871595085f, -0.870842040f,
    -0.870086968f, -0.869329870f, -0.868570685f, -0.867809474f,
    -0.867046237f, -0.866280973f, -0.865513623f, -0.864744246f,
    -0.863972843f, -0.863199413f, -0.862423956f, -0.861646473f,
    -0.860866964f, -0.860085368f, -0.859301805f, -0.858516216f,
    -0.857728601f, -0.856938958f, -0.856147349f, -0.855353653f,
    -0.854557991f, -0.853760302f, -0.852960587f, -0.852158904f,
    -0.851355195f, -0.850549459f, -0.849741757f, -0.848932028f,
    -0.848120332f, -0.847306609f, -0.846490920f, -0.845673263f,
    -0.844853580f, -0.844031870f, -0.843208253f, -0.842382610f,
    -0.841554999f, -0.840725362f, -0.839893818f, -0.839060247f,
    -0.838224709f, -0.837387204f, -0.836547732f, -0.835706294f,
    -0.834862888f, -0.834017515f, -0.833170176f, -0.832320869f,
    -0.831469595f, -0.830616415f, -0.829761207f, -0.828904092f,
    -0.828045070f, -0.827184021f, -0.826321065f, -0.825456142f,
    -0.824589312f, -0.823720515f, -0.822849810f, -0.821977139f,
    -0.821102500f, -0.820225954f, -0.819347501f, -0.818467140f,
    -0.817584813f, -0.816700578f, -0.815814435f, -0.814926326f,
    -0.814036310f, -0.813144386f, -0.812250614f, -0.811354876f,
    -0.810457170f, -0.809557617f, -0.808656156f, -0.807752848f,
    -0.806847572f, -0.805940390f, -0.805031359f, -0.804120362f,
    -0.803207517f, -0.802292824f, -0.801376164f, -0.800457656f,
    -0.799537241f, -0.798614979f, -0.797690868f, -0.796764791f,
    -0.795836926f, -0.794907153f, -0.793975472f, -0.793041945f,
    -0.792106569f, -0.791169345f, -0.790230215f, -0.789289236f,
    -0.788346410f, -0.787401736f, -0.786455214f, -0.785506845f,
    -0.784556568f, -0.783604503f, -0.782650590f, -0.781694829f,
    -0.780737221f, -0.779777765f, -0.778816521f, -0.777853429f,
    -0.776888490f, -0.775921702f, -0.774953127f, -0.773982704f,
    -0.773010433f, -0.772036374f, -0.771060526f, -0.770082831f,
    -0.769103348f, -0.768122017f, -0.767138898f, -0.766153991f,
    -0.765167236f, -0.764178753f, -0.763188422f, -0.762196302f,
    -0.761202395f, -0.760206699f, -0.759209216f, -0.758209884f,
    -0.757208824f, -0.756205976f, -0.755201399f, -0.754194975f,
    -0.753186822f, -0.752176821f, -0.751165152f, -0.750151634f,
    -0.749136388f, -0.748119354f, -0.747100592f, -0.746080101f,
    -0.745057762f, -0.744033754f, -0.743007958f, -0.741980433f,
    -0.740951121f, -0.739920080f, -0.738887310f, -0.737852812f,
    -0.736816585f, -0.735778570f, -0.734738886f, -0.733697414f,
    -0.732654274f, -0.731609404f, -0.730562747f, -0.729514420f,
    -0.728464365f, -0.727412641f, -0.726359129f, -0.725303948f,
    -0.724247098f, -0.723188460f, -0.722128212f, -0.721066177f,
    -0.720002532f, -0.718937099f, -0.717870057f, -0.716801286f,
    -0.715730846f, -0.714658678f, -0.713584840f, -0.712509394f,
    -0.711432219f, -0.710353374f, -0.709272802f, -0.708190620f,
    -0.707106769f, -0.706021249f, -0.704934061f, -0.703845263f,
    -0.702754736f, -0.701662600f, -0.700568795f, -0.699473321f,
    -0.698376238f, -0.697277486f, -0.696177125f, -0.695075095f,
    -0.693971455f, -0.692866147f, -0.691759229f, -0.690650702f,
    -0.689540565f, -0.688428760f, -0.687315345f, -0.686200321f,
    -0.685083687f, -0.683965385f, -0.682845533f, -0.681724072f,
    -0.680601001f, -0.679476321f, -0.678350031f, -0.677222192f,
    -0.676092684f, -0.674961627f, -0.673829019f, -0.672694743f,
    -0.671558976f, -0.670421541f, -0.669282615f, -0.668142021f,
    -0.666999936f, -0.665856242f, -0.664710999f, -0.663564146f,
    -0.662415802f, -0.661265850f, -0.660114348f, -0.658961296f,
    -0.657806695f, -0.656650543f, -0.655492842f, -0.654333591f,
    -0.653172851f, -0.652010560f, -0.650846660f, -0.649681330f,
    -0.648514390f, -0.647345960f, -0.646176040f, -0.645004511f,
    -0.643831551f, -0.642657042f, -0.641481042f, -0.640303493f,
    -0.639124453f, -0.637943923f, -0.636761844f, -0.635578334f,
    -0.634393275f, -0.633206785f, -0.632018745f, -0.630829215f,
    -0.629638255f, -0.628445745f, -0.627251804f, -0.626056373f,
    -0.624859512f, -0.623661101f, -0.622461259f, -0.621259987f,
    -0.620057225f, -0.618852973f, -0.617647290f, -0.616440177f,
    -0.615231574f, -0.614021540f, -0.612810075f, -0.611597180f,
    -0.610382795f, -0.609167039f, -0.607949793f, -0.606731117f,
    -0.605511069f, -0.604289532f, -0.603066623f, -0.601842225f,
    -0.600616455f, -0.599389315f, -0.598160684f, -0.596930683f,
    -0.595699310f, -0.594466507f, -0.593232274f, -0.591996670f,
    -0.590759695f, -0.589521289f, -0.588281572f, -0.587040365f,
    -0.585797846f, -0.584553957f, -0.583308637f, -0.582062006f,
    -0.580813944f, -0.579564571f, -0.578313768f, -0.577061653f,
    -0.575808167f, -0.574553370f, -0.573297143f, -0.572039604f,
    -0.570780754f, -0.569520533f, -0.568258941f, -0.566996038f,
    -0.565731823f, -0.564466238f, -0.563199341f, -0.561931133f,
    -0.560661554f, -0.559390724f, -0.558118522f, -0.556845009f,
    -0.555570245f, -0.554294109f, -0.553016722f, -0.551737964f,
    -0.550457954f, -0.549176633f, -0.547894061f, -0.546610177f,
    -0.545324981f, -0.544038534f, -0.542750776f, -0.541461766f,
    -0.540171444f, -0.538879931f, -0.537587047f, -0.536292970f,
    -0.534997642f, -0.533701003f, -0.532403111f, -0.531104028f,
    -0.529803634f, -0.528501987f, -0.527199149f, -0.525895000f,
    -0.524589658f, -0.523283124f, -0.521975279f, -0.520666242f,
    -0.519356012f, -0.518044531f, -0.516731799f, -0.515417874f,
    -0.514102757f, -0.512786388f, -0.511468828f, -0.510150075f,
    -0.508830130f, -0.507508993f, -0.506186664f, -0.504863083f,
    -0.503538370f, -0.502212465f, -0.500885367f, -0.499557108f,
    -0.498227656f, -0.496897042f, -0.495565265f, -0.494232297f,
    -0.492898196f, -0.491562903f, -0.490226477f, -0.488888890f,
    -0.487550169f, -0.486210287f, -0.484869242f, -0.483527064f,
    -0.482183784f, -0.480839342f, -0.479493767f, -0.478147060f,
    -0.476799220f, -0.475450277f, -0.474100202f, -0.472749025f,
    -0.471396744f, -0.470043331f, -0.468688816f, -0.467333198f,
    -0.465976506f, -0.464618683f, -0.463259786f, -0.461899787f,
    -0.460538715f, -0.459176540f, -0.457813293f, -0.456448972f,
    -0.455083579f, -0.453717113f, -0.452349573f, -0.450980991f,
    -0.449611336f, -0.448240608f, -0.446868837f, -0.445496023f,
    -0.444122136f, -0.442747235f, -0.441371262f, -0.439994276f,
    -0.438616246f, -0.437237173f, -0.435857087f, -0.434475958f,
    -0.433093816f, -0.431710660f, -0.430326492f, -0.428941280f,
    -0.427555084f, -0.426167876f, -0.424779683f, -0.423390478f,
    -0.422000259f, -0.420609087f, -0.419216901f, -0.417823702f,
    -0.416429549f, -0.415034413f, -0.413638324f, -0.412241220f,
    -0.410843164f, -0.409444153f, -0.408044159f, -0.406643212f,
    -0.405241311f, -0.403838456f, -0.402434647f, -0.401029885f,
    -0.399624199f, -0.398217559f, -0.396809995f, -0.395401478f,
    -0.393992037f, -0.392581671f, -0.391170382f, -0.389758170f,
    -0.388345033f, -0.386931002f, -0.385516047f, -0.384100199f,
    -0.382683426f, -0.381265759f, -0.379847199f, -0.378427744f,
    -0.377007425f, -0.375586182f, -0.374164075f, -0.372741073f,
    -0.371317208f, -0.369892448f, -0.368466824f, -0.367040336f,
    -0.365612984f, -0.364184797f, -0.362755716f, -0.361325800f,
    -0.359895051f, -0.358463407f, -0.357030958f, -0.355597675f,
    -0.354163527f, -0.352728546f, -0.351292759f, -0.349856138f,
    -0.348418683f, -0.346980423f, -0.345541328f, -0.344101429f,
    -0.342660725f, -0.341219217f, -0.339776874f, -0.338333756f,
    -0.336889863f, -0.335445136f, -0.333999664f, -0.332553357f,
    -0.331106305f, -0.329658449f, -0.328209847f, -0.326760441f,
    -0.325310290f, -0.323859364f, -0.322407693f, -0.320955247f,
    -0.319502026f, -0.318048090f, -0.316593379f, -0.315137923f,
    -0.313681751f, -0.312224805f, -0.310767144f, -0.309308767f,
    -0.307849646f, -0.306389809f, -0.304929227f, -0.303467959f,
    -0.302005947f, -0.300543249f, -0.299079835f, -0.297615707f,
    -0.296150893f, -0.294685364f, -0.293219149f, -0.291752249f,
    -0.290284663f, -0.288816422f, -0.287347466f, -0.285877824f,
    -0.284407526f, -0.282936573f, -0.281464934f, -0.279992640f,
    -0.278519690f, -0.277046084f, -0.275571823f, -0.274096906f,
    -0.272621363f, -0.271145165f, -0.269668311f, -0.268190861f,
    -0.266712755f, -0.265234023f, -0.263754666f, -0.262274712f,
    -0.260794103f, -0.259312928f, -0.257831097f, -0.256348670f,
    -0.254865646f, -0.253382027f, -0.251897812f, -0.250413001f,
    -0.248927608f, -0.247441620f, -0.245955050f, -0.244467899f,
    -0.242980182f, -0.241491884f, -0.240003020f, -0.238513589f,
    -0.237023607f, -0.235533059f, -0.234041959f, -0.232550308f,
    -0.231058106f, -0.229565367f, -0.228072077f, -0.226578265f,
    -0.225083917f, -0.223589033f, -0.222093627f, -0.220597684f,
    -0.219101235f, -0.217604280f, -0.216106802f, -0.214608818f,
    -0.213110313f, -0.211611331f, -0.210111842f, -0.208611846f,
    -0.207111374f, -0.205610409f, -0.204108968f, -0.202607036f,
    -0.201104641f, -0.199601755f, -0.198098406f, -0.196594596f,
    -0.195090324f, -0.193585590f, -0.192080393f, -0.190574750f,
    -0.189068660f, -0.187562123f, -0.186055154f, -0.184547737f,
    -0.183039889f, -0.181531608f, -0.180022895f, -0.178513765f,
    -0.177004218f, -0.175494254f, -0.173983872f, -0.172473088f,
    -0.170961887f, -0.169450298f, -0.167938292f, -0.166425899f,
    -0.164913118f, -0.163399950f, -0.161886394f, -0.160372451f,
    -0.158858150f, -0.157343462f, -0.155828401f, -0.154312968f,
    -0.152797192f, -0.151281044f, -0.149764538f, -0.148247674f,
    -0.146730468f, -0.145212919f, -0.143695027f, -0.142176807f,
    -0.140658244f, -0.139139339f, -0.137620121f, -0.136100575f,
    -0.134580702f, -0.133060530f, -0.131540030f, -0.130019218f,
    -0.128498107f, -0.126976699f, -0.125454977f, -0.123932973f,
    -0.122410677f, -0.120888084f, -0.119365215f, -0.117842063f,
    -0.116318628f, -0.114794925f, -0.113270953f, -0.111746714f,
    -0.110222206f, -0.108697444f, -0.107172422f, -0.105647154f,
    -0.104121633f, -0.102595866f, -0.101069860f, -0.099543616f,
    -0.098017141f, -0.096490428f, -0.094963498f, -0.093436338f,
    -0.091908954f, -0.090381362f, -0.088853553f, -0.087325536f,
    -0.085797310f, -0.084268890f, -0.082740262f, -0.081211448f,
    -0.079682440f, -0.078153245f, -0.076623864f, -0.075094298f,
    -0.073564567f, -0.072034650f, -0.070504576f, -0.068974331f,
    -0.067443922f, -0.065913349f, -0.064382628f, -0.062851757f,
    -0.061320737f, -0.059789572f, -0.058258265f, -0.056726821f,
    -0.055195246f, -0.053663537f, -0.052131705f, -0.050599750f,
    -0.049067676f, -0.047535483f, -0.046003181f, -0.044470772f,
    -0.042938258f, -0.041405641f, -0.039872926f, -0.038340122f,
    -0.036807224f, -0.035274237f, -0.033741172f, -0.032208025f,
    -0.030674804f, -0.029141508f, -0.027608145f, -0.026074719f,
    -0.024541229f, -0.023007682f, -0.021474080f, -0.019940428f,
    -0.018406730f, -0.016872987f, -0.015339206f, -0.0138053885f,
    -0.012271538f, -0.010737659f, -0.009203754f, -0.007669829f,
    -0.0061358847f,-0.004601926f, -0.0030679568f,-0.0015339801f,

    // sine
    0.000000000f, 0.0015339801f,0.0030679568f,0.004601926f,
    0.0061358847f,0.007669829f, 0.009203754f, 0.010737659f,
    0.012271538f, 0.0138053885f,0.015339206f, 0.016872987f,
    0.018406730f, 0.019940428f, 0.021474080f, 0.023007682f,
    0.024541229f, 0.026074719f, 0.027608145f, 0.029141508f,
    0.030674804f, 0.032208025f, 0.033741172f, 0.035274237f,
    0.036807224f, 0.038340122f, 0.039872926f, 0.041405641f,
    0.042938258f, 0.044470772f, 0.046003181f, 0.047535483f,
    0.049067676f, 0.050599750f, 0.052131705f, 0.053663537f,
    0.055195246f, 0.056726821f, 0.058258265f, 0.059789572f,
    0.061320737f, 0.062851757f, 0.064382628f, 0.065913349f,
    0.067443922f, 0.068974331f, 0.070504576f, 0.072034650f,
    0.073564567f, 0.075094298f, 0.076623864f, 0.078153245f,
    0.079682440f, 0.081211448f, 0.082740262f, 0.084268890f,
    0.085797310f, 0.087325536f, 0.088853553f, 0.090381362f,
    0.091908954f, 0.093436338f, 0.094963498f, 0.096490428f,
    0.098017141f, 0.099543616f, 0.101069860f, 0.102595866f,
    0.104121633f, 0.105647154f, 0.107172422f, 0.108697444f,
    0.110222206f, 0.111746714f, 0.113270953f, 0.114794925f,
    0.116318628f, 0.117842063f, 0.119365215f, 0.120888084f,
    0.122410677f, 0.123932973f, 0.125454977f, 0.126976699f,
    0.128498107f, 0.130019218f, 0.131540030f, 0.133060530f,
    0.134580702f, 0.136100575f, 0.137620121f, 0.139139339f,
    0.140658244f, 0.142176807f, 0.143695027f, 0.145212919f,
    0.146730468f, 0.148247674f, 0.149764538f, 0.151281044f,
    0.152797192f, 0.154312968f, 0.155828401f, 0.157343462f,
    0.158858150f, 0.160372451f, 0.161886394f, 0.163399950f,
    0.164913118f, 0.166425899f, 0.167938292f, 0.169450298f,
    0.170961887f, 0.172473088f, 0.173983872f, 0.175494254f,
    0.177004218f, 0.178513765f, 0.180022895f, 0.181531608f,
    0.183039889f, 0.184547737f, 0.186055154f, 0.187562123f,
    0.189068660f, 0.190574750f, 0.192080393f, 0.193585590f,
    0.195090324f, 0.196594596f, 0.198098406f, 0.199601755f,
    0.201104641f, 0.202607036f, 0.204108968f, 0.205610409f,
    0.207111374f, 0.208611846f, 0.210111842f, 0.211611331f,
    0.213110313f, 0.214608818f, 0.216106802f, 0.217604280f,
    0.219101235f, 0.220597684f, 0.222093627f, 0.223589033f,
    0.225083917f, 0.226578265f, 0.228072077f, 0.229565367f,
    0.231058106f, 0.232550308f, 0.234041959f, 0.235533059f,
    0.237023607f, 0.238513589f, 0.240003020f, 0.241491884f,
    0.242980182f, 0.244467899f, 0.245955050f, 0.247441620f,
    0.248927608f, 0.250413001f, 0.251897812f, 0.253382027f,
    0.254865646f, 0.256348670f, 0.257831097f, 0.259312928f,
    0.260794103f, 0.262274712f, 0.263754666f, 0.265234023f,
    0.266712755f, 0.268190861f, 0.269668311f, 0.271145165f,
    0.272621363f, 0.274096906f, 0.275571823f, 0.277046084f,
    0.278519690f, 0.279992640f, 0.281464934f, 0.282936573f,
    0.284407526f, 0.285877824f, 0.287347466f, 0.288816422f,
    0.290284663f, 0.291752249f, 0.293219149f, 0.294685364f,
    0.296150893f, 0.297615707f, 0.299079835f, 0.300543249f,
    0.302005947f, 0.303467959f, 0.304929227f, 0.306389809f,
    0.307849646f, 0.309308767f, 0.310767144f, 0.312224805f,
    0.313681751f, 0.315137923f, 0.316593379f, 0.318048090f,
    0.319502026f, 0.320955247f, 0.322407693f, 0.323859364f,
    0.325310290f, 0.326760441f, 0.328209847f, 0.329658449f,
    0.331106305f, 0.332553357f, 0.333999664f, 0.335445136f,
    0.336889863f, 0.338333756f, 0.339776874f, 0.341219217f,
    0.342660725f, 0.344101429f, 0.345541328f, 0.346980423f,
    0.348418683f, 0.349856138f, 0.351292759f, 0.352728546f,
    0.354163527f, 0.355597675f, 0.357030958f, 0.358463407f,
    0.359895051f, 0.361325800f, 0.362755716f, 0.364184797f,
    0.365612984f, 0.367040336f, 0.368466824f, 0.369892448f,
    0.371317208f, 0.372741073f, 0.374164075f, 0.375586182f,
    0.377007425f, 0.378427744f, 0.379847199f, 0.381265759f,
    0.382683426f, 0.384100199f, 0.385516047f, 0.386931002f,
    0.388345033f, 0.389758170f, 0.391170382f, 0.392581671f,
    0.393992037f, 0.395401478f, 0.396809995f, 0.398217559f,
    0.399624199f, 0.401029885f, 0.402434647f, 0.403838456f,
    0.405241311f, 0.406643212f, 0.408044159f, 0.409444153f,
    0.410843164f, 0.412241220f, 0.413638324f, 0.415034413f,
    0.416429549f, 0.417823702f, 0.419216901f, 0.420609087f,
    0.422000259f, 0.423390478f, 0.424779683f, 0.426167876f,
    0.427555084f, 0.428941280f, 0.430326492f, 0.431710660f,
    0.433093816f, 0.434475958f, 0.435857087f, 0.437237173f,
    0.438616246f, 0.439994276f, 0.441371262f, 0.442747235f,
    0.444122136f, 0.445496023f, 0.446868837f, 0.448240608f,
    0.449611336f, 0.450980991f, 0.452349573f, 0.453717113f,
    0.455083579f, 0.456448972f, 0.457813293f, 0.459176540f,
    0.460538715f, 0.461899787f, 0.463259786f, 0.464618683f,
    0.465976506f, 0.467333198f, 0.468688816f, 0.470043331f,
    0.471396744f, 0.472749025f, 0.474100202f, 0.475450277f,
    0.476799220f, 0.478147060f, 0.479493767f, 0.480839342f,
    0.482183784f, 0.483527064f, 0.484869242f, 0.486210287f,
    0.487550169f, 0.488888890f, 0.490226477f, 0.491562903f,
    0.492898196f, 0.494232297f, 0.495565265f, 0.496897042f,
    0.498227656f, 0.499557108f, 0.500885367f, 0.502212465f,
    0.503538370f, 0.504863083f, 0.506186664f, 0.507508993f,
    0.508830130f, 0.510150075f, 0.511468828f, 0.512786388f,
    0.514102757f, 0.515417874f, 0.516731799f, 0.518044531f,
    0.519356012f, 0.520666242f, 0.521975279f, 0.523283124f,
    0.524589658f, 0.525895000f, 0.527199149f, 0.528501987f,
    0.529803634f, 0.531104028f, 0.532403111f, 0.533701003f,
    0.534997642f, 0.536292970f, 0.537587047f, 0.538879931f,
    0.540171444f, 0.541461766f, 0.542750776f, 0.544038534f,
    0.545324981f, 0.546610177f, 0.547894061f, 0.549176633f,
    0.550457954f, 0.551737964f, 0.553016722f, 0.554294109f,
    0.555570245f, 0.556845009f, 0.558118522f, 0.559390724f,
    0.560661554f, 0.561931133f, 0.563199341f, 0.564466238f,
    0.565731823f, 0.566996038f, 0.568258941f, 0.569520533f,
    0.570780754f, 0.572039604f, 0.573297143f, 0.574553370f,
    0.575808167f, 0.577061653f, 0.578313768f, 0.579564571f,
    0.580813944f, 0.582062006f, 0.583308637f, 0.584553957f,
    0.585797846f, 0.587040365f, 0.588281572f, 0.589521289f,
    0.590759695f, 0.591996670f, 0.593232274f, 0.594466507f,
    0.595699310f, 0.596930683f, 0.598160684f, 0.599389315f,
    0.600616455f, 0.601842225f, 0.603066623f, 0.604289532f,
    0.605511069f, 0.606731117f, 0.607949793f, 0.609167039f,
    0.610382795f, 0.611597180f, 0.612810075f, 0.614021540f,
    0.615231574f, 0.616440177f, 0.617647290f, 0.618852973f,
    0.620057225f, 0.621259987f, 0.622461259f, 0.623661101f,
    0.624859512f, 0.626056373f, 0.627251804f, 0.628445745f,
    0.629638255f, 0.630829215f, 0.632018745f, 0.633206785f,
    0.634393275f, 0.635578334f, 0.636761844f, 0.637943923f,
    0.639124453f, 0.640303493f, 0.641481042f, 0.642657042f,
    0.643831551f, 0.645004511f, 0.646176040f, 0.647345960f,
    0.648514390f, 0.649681330f, 0.650846660f, 0.652010560f,
    0.653172851f, 0.654333591f, 0.655492842f, 0.656650543f,
    0.657806695f, 0.658961296f, 0.660114348f, 0.661265850f,
    0.662415802f, 0.663564146f, 0.664710999f, 0.665856242f,
    0.666999936f, 0.668142021f, 0.669282615f, 0.670421541f,
    0.671558976f, 0.672694743f, 0.673829019f, 0.674961627f,
    0.676092684f, 0.677222192f, 0.678350031f, 0.679476321f,
    0.680601001f, 0.681724072f, 0.682845533f, 0.683965385f,
    0.685083687f, 0.686200321f, 0.687315345f, 0.688428760f,
    0.689540565f, 0.690650702f, 0.691759229f, 0.692866147f,
    0.693971455f, 0.695075095f, 0.696177125f, 0.697277486f,
    0.698376238f, 0.699473321f, 0.700568795f, 0.701662600f,
    0.702754736f, 0.703845263f, 0.704934061f, 0.706021249f,
    0.707106769f, 0.708190620f, 0.709272802f, 0.710353374f,
    0.711432219f, 0.712509394f, 0.713584840f, 0.714658678f,
    0.715730846f, 0.716801286f, 0.717870057f, 0.718937099f,
    0.720002532f, 0.721066177f, 0.722128212f, 0.723188460f,
    0.724247098f, 0.725303948f, 0.726359129f, 0.727412641f,
    0.728464365f, 0.729514420f, 0.730562747f, 0.731609404f,
    0.732654274f, 0.733697414f, 0.734738886f, 0.735778570f,
    0.736816585f, 0.737852812f, 0.738887310f, 0.739920080f,
    0.740951121f, 0.741980433f, 0.743007958f, 0.744033754f,
    0.745057762f, 0.746080101f, 0.747100592f, 0.748119354f,
    0.749136388f, 0.750151634f, 0.751165152f, 0.752176821f,
    0.753186822f, 0.754194975f, 0.755201399f, 0.756205976f,
    0.757208824f, 0.758209884f, 0.759209216f, 0.760206699f,
    0.761202395f, 0.762196302f, 0.763188422f, 0.764178753f,
    0.765167236f, 0.766153991f, 0.767138898f, 0.768122017f,
    0.769103348f, 0.770082831f, 0.771060526f, 0.772036374f,
    0.773010433f, 0.773982704f, 0.774953127f, 0.775921702f,
    0.776888490f, 0.777853429f, 0.778816521f, 0.779777765f,
    0.780737221f, 0.781694829f, 0.782650590f, 0.783604503f,
    0.784556568f, 0.785506845f, 0.786455214f, 0.787401736f,
    0.788346410f, 0.789289236f, 0.790230215f, 0.791169345f,
    0.792106569f, 0.793041945f, 0.793975472f, 0.794907153f,
    0.795836926f, 0.796764791f, 0.797690868f, 0.798614979f,
    0.799537241f, 0.800457656f, 0.801376164f, 0.802292824f,
    0.803207517f, 0.804120362f, 0.805031359f, 0.805940390f,
    0.806847572f, 0.807752848f, 0.808656156f, 0.809557617f,
    0.810457170f, 0.811354876f, 0.812250614f, 0.813144386f,
    0.814036310f, 0.814926326f, 0.815814435f, 0.816700578f,
    0.817584813f, 0.818467140f, 0.819347501f, 0.820225954f,
    0.821102500f, 0.821977139f, 0.822849810f, 0.823720515f,
    0.824589312f, 0.825456142f, 0.826321065f, 0.827184021f,
    0.828045070f, 0.828904092f, 0.829761207f, 0.830616415f,
    0.831469595f, 0.832320869f, 0.833170176f, 0.834017515f,
    0.834862888f, 0.835706294f, 0.836547732f, 0.837387204f,
    0.838224709f, 0.839060247f, 0.839893818f, 0.840725362f,
    0.841554999f, 0.842382610f, 0.843208253f, 0.844031870f,
    0.844853580f, 0.845673263f, 0.846490920f, 0.847306609f,
    0.848120332f, 0.848932028f, 0.849741757f, 0.850549459f,
    0.851355195f, 0.852158904f, 0.852960587f, 0.853760302f,
    0.854557991f, 0.855353653f, 0.856147349f, 0.856938958f,
    0.857728601f, 0.858516216f, 0.859301805f, 0.860085368f,
    0.860866964f, 0.861646473f, 0.862423956f, 0.863199413f,
    0.863972843f, 0.864744246f, 0.865513623f, 0.866280973f,
    0.867046237f, 0.867809474f, 0.868570685f, 0.869329870f,
    0.870086968f, 0.870842040f, 0.871595085f, 0.872346044f,
    0.873094976f, 0.873841822f, 0.874586642f, 0.875329375f,
    0.876070082f, 0.876808703f, 0.877545297f, 0.878279805f,
    0.879012227f, 0.879742622f, 0.880470872f, 0.881197095f,
    0.881921291f, 0.882643342f, 0.883363366f, 0.884081244f,
    0.884797096f, 0.885510862f, 0.886222541f, 0.886932135f,
    0.887639642f, 0.888345063f, 0.889048338f, 0.889749587f,
    0.890448749f, 0.891145766f, 0.891840696f, 0.892533541f,
    0.893224299f, 0.893912971f, 0.894599497f, 0.895283937f,
    0.895966232f, 0.896646500f, 0.897324562f, 0.898000598f,
    0.898674488f, 0.899346232f, 0.900015891f, 0.900683403f,
    0.901348829f, 0.902012169f, 0.902673304f, 0.903332353f,
    0.903989315f, 0.904644072f, 0.905296743f, 0.905947268f,
    0.906595707f, 0.907242000f, 0.907886088f, 0.908528090f,
    0.909168005f, 0.909805715f, 0.910441279f, 0.911074758f,
    0.911706030f, 0.912335157f, 0.912962198f, 0.913587034f,
    0.914209783f, 0.914830327f, 0.915448725f, 0.916064978f,
    0.916679084f, 0.917290986f, 0.917900801f, 0.918508410f,
    0.919113874f, 0.919717133f, 0.920318305f, 0.920917213f,
    0.921514034f, 0.922108650f, 0.922701120f, 0.923291445f,
    0.923879504f, 0.924465477f, 0.925049245f, 0.925630808f,
    0.926210225f, 0.926787496f, 0.927362502f, 0.927935421f,
    0.928506076f, 0.929074585f, 0.929640889f, 0.930205047f,
    0.930766940f, 0.931326687f, 0.931884289f, 0.932439625f,
    0.932992816f, 0.933543801f, 0.934092522f, 0.934639156f,
    0.935183525f, 0.935725689f, 0.936265647f, 0.936803460f,
    0.937339008f, 0.937872350f, 0.938403547f, 0.938932478f,
    0.939459205f, 0.939983726f, 0.940506041f, 0.941026151f,
    0.941544056f, 0.942059755f, 0.942573190f, 0.943084419f,
    0.943593442f, 0.944100261f, 0.944604814f, 0.945107222f,
    0.945607305f, 0.946105242f, 0.946600914f, 0.947094381f,
    0.947585583f, 0.948074579f, 0.948561370f, 0.949045897f,
    0.949528158f, 0.950008273f, 0.950486064f, 0.950961649f,
    0.951435030f, 0.951906145f, 0.952374995f, 0.952841640f,
    0.953306019f, 0.953768194f, 0.954228103f, 0.954685748f,
    0.955141187f, 0.955594361f, 0.956045270f, 0.956493914f,
    0.956940353f, 0.957384527f, 0.957826436f, 0.958266079f,
    0.958703458f, 0.959138632f, 0.959571540f, 0.960002124f,
    0.960430503f, 0.960856616f, 0.961280465f, 0.961702049f,
    0.962121427f, 0.962538481f, 0.962953269f, 0.963365793f,
    0.963776052f, 0.964184046f, 0.964589775f, 0.964993238f,
    0.965394437f, 0.965793371f, 0.966189981f, 0.966584384f,
    0.966976464f, 0.967366278f, 0.967753828f, 0.968139112f,
    0.968522072f, 0.968902826f, 0.969281256f, 0.969657362f,
    0.970031261f, 0.970402837f, 0.970772147f, 0.971139133f,
    0.971503913f, 0.971866310f, 0.972226501f, 0.972584367f,
    0.972939968f, 0.973293245f, 0.973644257f, 0.973992944f,
    0.974339366f, 0.974683523f, 0.975025356f, 0.975364864f,
    0.975702107f, 0.976037085f, 0.976369739f, 0.976700068f,
    0.977028131f, 0.977353871f, 0.977677345f, 0.977998495f,
    0.978317380f, 0.978633940f, 0.978948176f, 0.979260147f,
    0.979569793f, 0.979877114f, 0.980182111f, 0.980484843f,
    0.980785251f, 0.981083393f, 0.981379211f, 0.981672704f,
    0.981963873f, 0.982252717f, 0.982539296f, 0.982823551f,
    0.983105481f, 0.983385086f, 0.983662426f, 0.983937442f,
    0.984210074f, 0.984480441f, 0.984748483f, 0.985014260f,
    0.985277653f, 0.985538721f, 0.985797524f, 0.986053944f,
    0.986308098f, 0.986559927f, 0.986809373f, 0.987056553f,
    0.987301409f, 0.987543941f, 0.987784147f, 0.988022029f,
    0.988257587f, 0.988490820f, 0.988721669f, 0.988950253f,
    0.989176512f, 0.989400446f, 0.989621997f, 0.989841282f,
    0.990058184f, 0.990272820f, 0.990485072f, 0.990695000f,
    0.990902662f, 0.991107941f, 0.991310835f, 0.991511464f,
    0.991709769f, 0.991905689f, 0.992099285f, 0.992290616f,
    0.992479563f, 0.992666125f, 0.992850423f, 0.993032336f,
    0.993211925f, 0.993389189f, 0.993564129f, 0.993736744f,
    0.993906975f, 0.994074881f, 0.994240463f, 0.994403660f,
    0.994564593f, 0.994723141f, 0.994879305f, 0.995033205f,
    0.995184720f, 0.995333910f, 0.995480776f, 0.995625257f,
    0.995767415f, 0.995907247f, 0.996044695f, 0.996179819f,
    0.996312618f, 0.996443033f, 0.996571124f, 0.996696889f,
    0.996820271f, 0.996941328f, 0.997060061f, 0.997176409f,
    0.997290432f, 0.997402132f, 0.997511446f, 0.997618437f,
    0.997723043f, 0.997825325f, 0.997925282f, 0.998022854f,
    0.998118103f, 0.998211026f, 0.998301566f, 0.998389721f,
    0.998475552f, 0.998559058f, 0.998640239f, 0.998719037f,
    0.998795450f, 0.998869538f, 0.998941302f, 0.999010682f,
    0.999077737f, 0.999142408f, 0.999204755f, 0.999264777f,
    0.999322355f, 0.999377668f, 0.999430597f, 0.999481201f,
    0.999529421f, 0.999575317f, 0.999618828f, 0.999660015f,
    0.999698818f, 0.999735296f, 0.999769390f, 0.999801159f,
    0.999830604f, 0.999857664f, 0.999882340f, 0.999904692f,
    0.999924719f, 0.999942362f, 0.999957621f, 0.999970615f,
    0.999981165f, 0.999989390f, 0.999995291f, 0.999998808f,
};

__constant signed short atanTable[0x401] = {
    0x0000, 0x000A, 0x0014, 0x001F, 0x0029, 0x0033, 0x003D, 0x0047,
    0x0051, 0x005C, 0x0066, 0x0070, 0x007A, 0x0084, 0x008F, 0x0099,
    0x00A3, 0x00AD, 0x00B7, 0x00C2, 0x00CC, 0x00D6, 0x00E0, 0x00EA,
    0x00F4, 0x00FF, 0x0109, 0x0113, 0x011D, 0x0127, 0x0131, 0x013C,
    0x0146, 0x0150, 0x015A, 0x0164, 0x016F, 0x0179, 0x0183, 0x018D,
    0x0197, 0x01A1, 0x01AC, 0x01B6, 0x01C0, 0x01CA, 0x01D4, 0x01DE,
    0x01E9, 0x01F3, 0x01FD, 0x0207, 0x0211, 0x021B, 0x0226, 0x0230,
    0x023A, 0x0244, 0x024E, 0x0258, 0x0262, 0x026D, 0x0277, 0x0281,
    0x028B, 0x0295, 0x029F, 0x02A9, 0x02B4, 0x02BE, 0x02C8, 0x02D2,
    0x02DC, 0x02E6, 0x02F0, 0x02FB, 0x0305, 0x030F, 0x0319, 0x0323,
    0x032D, 0x0337, 0x0341, 0x034C, 0x0356, 0x0360, 0x036A, 0x0374,
    0x037E, 0x0388, 0x0392, 0x039C, 0x03A7, 0x03B1, 0x03BB, 0x03C5,
    0x03CF, 0x03D9, 0x03E3, 0x03ED, 0x03F7, 0x0401, 0x040C, 0x0416,
    0x0420, 0x042A, 0x0434, 0x043E, 0x0448, 0x0452, 0x045C, 0x0466,
    0x0470, 0x047A, 0x0484, 0x048E, 0x0499, 0x04A3, 0x04AD, 0x04B7,
    0x04C1, 0x04CB, 0x04D5, 0x04DF, 0x04E9, 0x04F3, 0x04FD, 0x0507,
    0x0511, 0x051B, 0x0525, 0x052F, 0x0539, 0x0543, 0x054D, 0x0557,
    0x0561, 0x056B, 0x0575, 0x057F, 0x0589, 0x0593, 0x059D, 0x05A7,
    0x05B1, 0x05BB, 0x05C5, 0x05CF, 0x05D9, 0x05E3, 0x05ED, 0x05F7,
    0x0601, 0x060B, 0x0615, 0x061F, 0x0629, 0x0633, 0x063D, 0x0647,
    0x0651, 0x065B, 0x0665, 0x066E, 0x0678, 0x0682, 0x068C, 0x0696,
    0x06A0, 0x06AA, 0x06B4, 0x06BE, 0x06C8, 0x06D2, 0x06DC, 0x06E5,
    0x06EF, 0x06F9, 0x0703, 0x070D, 0x0717, 0x0721, 0x072B, 0x0735,
    0x073E, 0x0748, 0x0752, 0x075C, 0x0766, 0x0770, 0x077A, 0x0783,
    0x078D, 0x0797, 0x07A1, 0x07AB, 0x07B5, 0x07BE, 0x07C8, 0x07D2,
    0x07DC, 0x07E6, 0x07EF, 0x07F9, 0x0803, 0x080D, 0x0817, 0x0820,
    0x082A, 0x0834, 0x083E, 0x0848, 0x0851, 0x085B, 0x0865, 0x086F,
    0x0878, 0x0882, 0x088C, 0x0896, 0x089F, 0x08A9, 0x08B3, 0x08BD,
    0x08C6, 0x08D0, 0x08DA, 0x08E3, 0x08ED, 0x08F7, 0x0901, 0x090A,
    0x0914, 0x091E, 0x0927, 0x0931, 0x093B, 0x0944, 0x094E, 0x0958,
    0x0961, 0x096B, 0x0975, 0x097E, 0x0988, 0x0992, 0x099B, 0x09A5,
    0x09AE, 0x09B8, 0x09C2, 0x09CB, 0x09D5, 0x09DE, 0x09E8, 0x09F2,
    0x09FB, 0x0A05, 0x0A0E, 0x0A18, 0x0A22, 0x0A2B, 0x0A35, 0x0A3E,
    0x0A48, 0x0A51, 0x0A5B, 0x0A64, 0x0A6E, 0x0A77, 0x0A81, 0x0A8B,
    0x0A94, 0x0A9E, 0x0AA7, 0x0AB1, 0x0ABA, 0x0AC4, 0x0ACD, 0x0AD7,
    0x0AE0, 0x0AE9, 0x0AF3, 0x0AFC, 0x0B06, 0x0B0F, 0x0B19, 0x0B22,
    0x0B2C, 0x0B35, 0x0B3F, 0x0B48, 0x0B51, 0x0B5B, 0x0B64, 0x0B6E,
    0x0B77, 0x0B80, 0x0B8A, 0x0B93, 0x0B9D, 0x0BA6, 0x0BAF, 0x0BB9,
    0x0BC2, 0x0BCB, 0x0BD5, 0x0BDE, 0x0BE7, 0x0BF1, 0x0BFA, 0x0C03,
    0x0C0D, 0x0C16, 0x0C1F, 0x0C29, 0x0C32, 0x0C3B, 0x0C45, 0x0C4E,
    0x0C57, 0x0C60, 0x0C6A, 0x0C73, 0x0C7C, 0x0C86, 0x0C8F, 0x0C98,
    0x0CA1, 0x0CAB, 0x0CB4, 0x0CBD, 0x0CC6, 0x0CCF, 0x0CD9, 0x0CE2,
    0x0CEB, 0x0CF4, 0x0CFD, 0x0D07, 0x0D10, 0x0D19, 0x0D22, 0x0D2B,
    0x0D34, 0x0D3E, 0x0D47, 0x0D50, 0x0D59, 0x0D62, 0x0D6B, 0x0D74,
    0x0D7D, 0x0D87, 0x0D90, 0x0D99, 0x0DA2, 0x0DAB, 0x0DB4, 0x0DBD,
    0x0DC6, 0x0DCF, 0x0DD8, 0x0DE1, 0x0DEA, 0x0DF3, 0x0DFC, 0x0E05,
    0x0E0F, 0x0E18, 0x0E21, 0x0E2A, 0x0E33, 0x0E3C, 0x0E45, 0x0E4E,
    0x0E56, 0x0E5F, 0x0E68, 0x0E71, 0x0E7A, 0x0E83, 0x0E8C, 0x0E95,
    0x0E9E, 0x0EA7, 0x0EB0, 0x0EB9, 0x0EC2, 0x0ECB, 0x0ED4, 0x0EDC,
    0x0EE5, 0x0EEE, 0x0EF7, 0x0F00, 0x0F09, 0x0F12, 0x0F1B, 0x0F23,
    0x0F2C, 0x0F35, 0x0F3E, 0x0F47, 0x0F50, 0x0F58, 0x0F61, 0x0F6A,
    0x0F73, 0x0F7C, 0x0F84, 0x0F8D, 0x0F96, 0x0F9F, 0x0FA7, 0x0FB0,
    0x0FB9, 0x0FC2, 0x0FCA, 0x0FD3, 0x0FDC, 0x0FE5, 0x0FED, 0x0FF6,
    0x0FFF, 0x1007, 0x1010, 0x1019, 0x1021, 0x102A, 0x1033, 0x103B,
    0x1044, 0x104D, 0x1055, 0x105E, 0x1067, 0x106F, 0x1078, 0x1080,
    0x1089, 0x1092, 0x109A, 0x10A3, 0x10AB, 0x10B4, 0x10BC, 0x10C5,
    0x10CE, 0x10D6, 0x10DF, 0x10E7, 0x10F0, 0x10F8, 0x1101, 0x1109,
    0x1112, 0x111A, 0x1123, 0x112B, 0x1134, 0x113C, 0x1145, 0x114D,
    0x1156, 0x115E, 0x1166, 0x116F, 0x1177, 0x1180, 0x1188, 0x1191,
    0x1199, 0x11A1, 0x11AA, 0x11B2, 0x11BB, 0x11C3, 0x11CB, 0x11D4,
    0x11DC, 0x11E4, 0x11ED, 0x11F5, 0x11FD, 0x1206, 0x120E, 0x1216,
    0x121F, 0x1227, 0x122F, 0x1237, 0x1240, 0x1248, 0x1250, 0x1259,
    0x1261, 0x1269, 0x1271, 0x127A, 0x1282, 0x128A, 0x1292, 0x129A,
    0x12A3, 0x12AB, 0x12B3, 0x12BB, 0x12C3, 0x12CC, 0x12D4, 0x12DC,
    0x12E4, 0x12EC, 0x12F4, 0x12FC, 0x1305, 0x130D, 0x1315, 0x131D,
    0x1325, 0x132D, 0x1335, 0x133D, 0x1345, 0x134D, 0x1355, 0x135E,
    0x1366, 0x136E, 0x1376, 0x137E, 0x1386, 0x138E, 0x1396, 0x139E,
    0x13A6, 0x13AE, 0x13B6, 0x13BE, 0x13C6, 0x13CE, 0x13D6, 0x13DE,
    0x13E6, 0x13ED, 0x13F5, 0x13FD, 0x1405, 0x140D, 0x1415, 0x141D,
    0x1425, 0x142D, 0x1435, 0x143D, 0x1444, 0x144C, 0x1454, 0x145C,
    0x1464, 0x146C, 0x1473, 0x147B, 0x1483, 0x148B, 0x1493, 0x149B,
    0x14A2, 0x14AA, 0x14B2, 0x14BA, 0x14C1, 0x14C9, 0x14D1, 0x14D9,
    0x14E0, 0x14E8, 0x14F0, 0x14F8, 0x14FF, 0x1507, 0x150F, 0x1516,
    0x151E, 0x1526, 0x152D, 0x1535, 0x153D, 0x1544, 0x154C, 0x1554,
    0x155B, 0x1563, 0x156B, 0x1572, 0x157A, 0x1581, 0x1589, 0x1591,
    0x1598, 0x15A0, 0x15A7, 0x15AF, 0x15B7, 0x15BE, 0x15C6, 0x15CD,
    0x15D5, 0x15DC, 0x15E4, 0x15EB, 0x15F3, 0x15FA, 0x1602, 0x1609,
    0x1611, 0x1618, 0x1620, 0x1627, 0x162F, 0x1636, 0x163E, 0x1645,
    0x164C, 0x1654, 0x165B, 0x1663, 0x166A, 0x1671, 0x1679, 0x1680,
    0x1688, 0x168F, 0x1696, 0x169E, 0x16A5, 0x16AC, 0x16B4, 0x16BB,
    0x16C2, 0x16CA, 0x16D1, 0x16D8, 0x16E0, 0x16E7, 0x16EE, 0x16F6,
    0x16FD, 0x1704, 0x170B, 0x1713, 0x171A, 0x1721, 0x1728, 0x1730,
    0x1737, 0x173E, 0x1745, 0x174C, 0x1754, 0x175B, 0x1762, 0x1769,
    0x1770, 0x1778, 0x177F, 0x1786, 0x178D, 0x1794, 0x179B, 0x17A2,
    0x17AA, 0x17B1, 0x17B8, 0x17BF, 0x17C6, 0x17CD, 0x17D4, 0x17DB,
    0x17E2, 0x17E9, 0x17F0, 0x17F7, 0x17FE, 0x1806, 0x180D, 0x1814,
    0x181B, 0x1822, 0x1829, 0x1830, 0x1837, 0x183E, 0x1845, 0x184C,
    0x1853, 0x185A, 0x1860, 0x1867, 0x186E, 0x1875, 0x187C, 0x1883,
    0x188A, 0x1891, 0x1898, 0x189F, 0x18A6, 0x18AD, 0x18B3, 0x18BA,
    0x18C1, 0x18C8, 0x18CF, 0x18D6, 0x18DD, 0x18E3, 0x18EA, 0x18F1,
    0x18F8, 0x18FF, 0x1906, 0x190C, 0x1913, 0x191A, 0x1921, 0x1928,
    0x192E, 0x1935, 0x193C, 0x1943, 0x1949, 0x1950, 0x1957, 0x195D,
    0x1964, 0x196B, 0x1972, 0x1978, 0x197F, 0x1986, 0x198C, 0x1993,
    0x199A, 0x19A0, 0x19A7, 0x19AE, 0x19B4, 0x19BB, 0x19C2, 0x19C8,
    0x19CF, 0x19D5, 0x19DC, 0x19E3, 0x19E9, 0x19F0, 0x19F6, 0x19FD,
    0x1A04, 0x1A0A, 0x1A11, 0x1A17, 0x1A1E, 0x1A24, 0x1A2B, 0x1A31,
    0x1A38, 0x1A3E, 0x1A45, 0x1A4B, 0x1A52, 0x1A58, 0x1A5F, 0x1A65,
    0x1A6C, 0x1A72, 0x1A79, 0x1A7F, 0x1A86, 0x1A8C, 0x1A93, 0x1A99,
    0x1A9F, 0x1AA6, 0x1AAC, 0x1AB3, 0x1AB9, 0x1AC0, 0x1AC6, 0x1ACC,
    0x1AD3, 0x1AD9, 0x1ADF, 0x1AE6, 0x1AEC, 0x1AF2, 0x1AF9, 0x1AFF,
    0x1B05, 0x1B0C, 0x1B12, 0x1B18, 0x1B1F, 0x1B25, 0x1B2B, 0x1B32,
    0x1B38, 0x1B3E, 0x1B44, 0x1B4B, 0x1B51, 0x1B57, 0x1B5D, 0x1B64,
    0x1B6A, 0x1B70, 0x1B76, 0x1B7D, 0x1B83, 0x1B89, 0x1B8F, 0x1B95,
    0x1B9C, 0x1BA2, 0x1BA8, 0x1BAE, 0x1BB4, 0x1BBA, 0x1BC1, 0x1BC7,
    0x1BCD, 0x1BD3, 0x1BD9, 0x1BDF, 0x1BE5, 0x1BEB, 0x1BF2, 0x1BF8,
    0x1BFE, 0x1C04, 0x1C0A, 0x1C10, 0x1C16, 0x1C1C, 0x1C22, 0x1C28,
    0x1C2E, 0x1C34, 0x1C3A, 0x1C40, 0x1C46, 0x1C4C, 0x1C52, 0x1C58,
    0x1C5E, 0x1C64, 0x1C6A, 0x1C70, 0x1C76, 0x1C7C, 0x1C82, 0x1C88,
    0x1C8E, 0x1C94, 0x1C9A, 0x1CA0, 0x1CA6, 0x1CAC, 0x1CB2, 0x1CB8,
    0x1CBE, 0x1CC3, 0x1CC9, 0x1CCF, 0x1CD5, 0x1CDB, 0x1CE1, 0x1CE7,
    0x1CED, 0x1CF3, 0x1CF8, 0x1CFE, 0x1D04, 0x1D0A, 0x1D10, 0x1D16,
    0x1D1B, 0x1D21, 0x1D27, 0x1D2D, 0x1D33, 0x1D38, 0x1D3E, 0x1D44,
    0x1D4A, 0x1D4F, 0x1D55, 0x1D5B, 0x1D61, 0x1D66, 0x1D6C, 0x1D72,
    0x1D78, 0x1D7D, 0x1D83, 0x1D89, 0x1D8E, 0x1D94, 0x1D9A, 0x1DA0,
    0x1DA5, 0x1DAB, 0x1DB1, 0x1DB6, 0x1DBC, 0x1DC2, 0x1DC7, 0x1DCD,
    0x1DD3, 0x1DD8, 0x1DDE, 0x1DE3, 0x1DE9, 0x1DEF, 0x1DF4, 0x1DFA,
    0x1DFF, 0x1E05, 0x1E0B, 0x1E10, 0x1E16, 0x1E1B, 0x1E21, 0x1E26,
    0x1E2C, 0x1E32, 0x1E37, 0x1E3D, 0x1E42, 0x1E48, 0x1E4D, 0x1E53,
    0x1E58, 0x1E5E, 0x1E63, 0x1E69, 0x1E6E, 0x1E74, 0x1E79, 0x1E7F,
    0x1E84, 0x1E8A, 0x1E8F, 0x1E94, 0x1E9A, 0x1E9F, 0x1EA5, 0x1EAA,
    0x1EB0, 0x1EB5, 0x1EBA, 0x1EC0, 0x1EC5, 0x1ECB, 0x1ED0, 0x1ED5,
    0x1EDB, 0x1EE0, 0x1EE6, 0x1EEB, 0x1EF0, 0x1EF6, 0x1EFB, 0x1F00,
    0x1F06, 0x1F0B, 0x1F10, 0x1F16, 0x1F1B, 0x1F20, 0x1F26, 0x1F2B,
    0x1F30, 0x1F36, 0x1F3B, 0x1F40, 0x1F45, 0x1F4B, 0x1F50, 0x1F55,
    0x1F5A, 0x1F60, 0x1F65, 0x1F6A, 0x1F6F, 0x1F75, 0x1F7A, 0x1F7F,
    0x1F84, 0x1F8A, 0x1F8F, 0x1F94, 0x1F99, 0x1F9E, 0x1FA4, 0x1FA9,
    0x1FAE, 0x1FB3, 0x1FB8, 0x1FBD, 0x1FC3, 0x1FC8, 0x1FCD, 0x1FD2,
    0x1FD7, 0x1FDC, 0x1FE1, 0x1FE6, 0x1FEC, 0x1FF1, 0x1FF6, 0x1FFB,
    0x2000
}; 

__constant float magTable[1168] = {0.0000000000f, 0.0312500000f, 0.0624999963f, 0.0703125000f, 0.1015625000f, 0.1250000000f, 0.1406249851f, 0.1562500000f, 0.1953125000f, 0.2265625000f, 0.2499999851f, 0.2656249702f, 0.2812500000f, 0.3125000000f, 0.3203125000f, 0.3515625000f, 0.3828125000f, 0.3906250000f, 0.4062500000f, 0.4140625000f, 0.4531250000f, 0.4765625298f, 0.5000000000f, 0.5078125000f, 0.5312500000f, 0.5624999404f, 0.5703124404f, 0.5781250000f, 0.6250000000f, 0.6328125000f, 0.6640625000f, 0.6953125000f, 0.7031249404f, 0.7578125000f, 0.7656250000f, 0.7812500000f, 0.8125000000f, 0.8281250596f, 0.8515625000f, 0.8828125596f, 0.9062500000f, 0.9140625596f, 0.9453125000f, 0.9765625000f, 0.9999999404f, 1.0156250000f, 1.0624998808f, 1.0703123808f, 1.1250000000f, 1.1328125000f, 1.1406250000f, 1.1562501192f, 1.1640625000f, 1.1953125000f, 1.2265626192f, 1.2500000000f, 1.2656251192f, 1.2812500000f, 1.3203125000f, 1.3281248808f, 1.3515625000f, 1.3906250000f, 1.4062500000f, 1.4140625000f, 1.4453126192f, 1.5078123808f, 1.5156251192f, 1.5312500000f, 1.5625000000f, 1.5781250000f, 1.6015626192f, 1.6250000000f, 1.6562500000f, 1.7031250000f, 1.7265625000f, 1.7578125000f, 1.7890625000f, 1.8125000000f, 1.8203125000f, 1.8281248808f, 1.8828125000f, 1.8906248808f, 1.9062501192f, 1.9140626192f, 1.9531248808f, 2.0000000000f, 2.0312500000f, 2.0390625000f, 2.0703122616f, 2.1015627384f, 2.1250000000f, 2.1406252384f, 2.1640622616f, 2.1953122616f, 2.2499997616f, 2.2578125000f, 2.2656250000f, 2.2812497616f, 2.2890625000f, 2.3125000000f, 2.3281250000f, 2.3828122616f, 2.3906247616f, 2.4453127384f, 2.4531250000f, 2.4765622616f, 2.5000000000f, 2.5312500000f, 2.5390622616f, 2.5625002384f, 2.6015625000f, 2.6328122616f, 2.6406252384f, 2.6562500000f, 2.7031252384f, 2.7265625000f, 2.7578125000f, 2.7812500000f, 2.8124997616f, 2.8203125000f, 2.8515625000f, 2.8828127384f, 2.8906250000f, 2.9140625000f, 2.9453127384f, 3.0156250000f, 3.0312500000f, 3.0390627384f, 3.0625000000f, 3.0781252384f, 3.1015622616f, 3.1250000000f, 3.1562497616f, 3.1640622616f, 3.1953127384f, 3.2031250000f, 3.2500000000f, 3.2890622616f, 3.3125002384f, 3.3203125000f, 3.3828127384f, 3.4062500000f, 3.4453125000f, 3.4531250000f, 3.4765622616f, 3.5078127384f, 3.5156250000f, 3.5312502384f, 3.5703122616f, 3.5781250000f, 3.6015627384f, 3.6250000000f, 3.6406247616f, 3.6562502384f, 3.7265627384f, 3.7578127384f, 3.7656250000f, 3.7812500000f, 3.7890622616f, 3.8124997616f, 3.8281252384f, 3.8515627384f, 3.9062500000f, 3.9453122616f, 3.9765622616f, 3.9999997616f, 4.0156250000f, 4.0625000000f, 4.0703125000f, 4.0781245232f, 4.1328125000f, 4.1406250000f, 4.1640620232f, 4.2031245232f, 4.2265625000f, 4.2499995232f, 4.2578129768f, 4.2812495232f, 4.2890629768f, 4.3281250000f, 4.3515625000f, 4.3906250000f, 4.4140620232f, 4.4453129768f, 4.5000000000f, 4.5156245232f, 4.5312500000f, 4.5625000000f, 4.5703125000f, 4.5781254768f, 4.6250004768f, 4.6328125000f, 4.6562500000f, 4.6953125000f, 4.7265625000f, 4.7656245232f, 4.7812500000f, 4.7890625000f, 4.8203125000f, 4.8828125000f, 4.9062504768f, 4.9140625000f, 4.9531254768f, 4.9765625000f, 5.0000000000f, 5.0078125000f, 5.0625004768f, 5.0781250000f, 5.1015629768f, 5.1250000000f, 5.1328125000f, 5.1640629768f, 5.2031250000f, 5.2578125000f, 5.2656250000f, 5.2812500000f, 5.3124995232f, 5.3515625000f, 5.3828125000f, 5.4062500000f, 5.4453120232f, 5.4531250000f, 5.4765625000f, 5.5156245232f, 5.5390625000f, 5.5625000000f, 5.6250000000f, 5.6406250000f, 5.6562500000f, 5.6640620232f, 5.6953125000f, 5.7031250000f, 5.7265625000f, 5.7656250000f, 5.7812504768f, 5.8203120232f, 5.8281245232f, 5.8906250000f, 5.9140629768f, 5.9453129768f, 5.9765629768f, 6.0078120232f, 6.0312495232f, 6.0390625000f, 6.0625004768f, 6.0781245232f, 6.1250000000f, 6.1328120232f, 6.1562495232f, 6.1953125000f, 6.2031250000f, 6.2265620232f, 6.2500000000f, 6.2578120232f, 6.2656250000f, 6.3125000000f, 6.3203120232f, 6.3281250000f, 6.3906245232f, 6.4062504768f, 6.4140625000f, 6.4765625000f, 6.5000000000f, 6.5078129768f, 6.5703125000f, 6.6015625000f, 6.6250000000f, 6.6406254768f, 6.6640625000f, 6.6953125000f, 6.7578129768f, 6.7656250000f, 6.8125000000f, 6.8203125000f, 6.8515625000f, 6.8828125000f, 6.8906250000f, 6.9062500000f, 6.9531254768f, 7.0156250000f, 7.0312500000f, 7.0390629768f, 7.0625000000f, 7.0703125000f, 7.1015629768f, 7.1406250000f, 7.1562500000f, 7.2031245232f, 7.2265625000f, 7.2500000000f, 7.2578125000f, 7.2812500000f, 7.3124995232f, 7.3203129768f, 7.3515629768f, 7.4140625000f, 7.4453129768f, 7.4531250000f, 7.5078125000f, 7.5156250000f, 7.5312500000f, 7.5390625000f, 7.5624995232f, 7.5781250000f, 7.6250004768f, 7.6328129768f, 7.6562504768f, 7.6640620232f, 7.6953129768f, 7.7031250000f, 7.7890620232f, 7.8124995232f, 7.8828129768f, 7.8906245232f, 7.9140629768f, 7.9453129768f, 7.9531250000f, 7.9765625000f, 8.0000000000f, 8.0078125000f, 8.0312500000f, 8.0703115463f, 8.1015625000f, 8.1250000000f, 8.1406250000f, 8.1562500000f, 8.1953134537f, 8.2265634537f, 8.2656250000f, 8.2812490463f, 8.2890625000f, 8.3281240463f, 8.3515615463f, 8.3828125000f, 8.4062509537f, 8.4531250000f, 8.5000000000f, 8.5078125000f, 8.5156250000f, 8.5390625000f, 8.5625009537f, 8.5703125000f, 8.5781240463f, 8.6328115463f, 8.6562490463f, 8.6640625000f, 8.7031259537f, 8.7265625000f, 8.7812490463f, 8.7890625000f, 8.8203115463f, 8.8281240463f, 8.8906259537f, 8.9453125000f, 8.9999990463f, 9.0078115463f, 9.0156259537f, 9.0312500000f, 9.0390625000f, 9.0625000000f, 9.1015615463f, 9.1249990463f, 9.1406240463f, 9.1562500000f, 9.2265625000f, 9.2500000000f, 9.2656250000f, 9.2890634537f, 9.3125000000f, 9.3203134537f, 9.3828115463f, 9.3906250000f, 9.4140615463f, 9.4531240463f, 9.4765615463f, 9.5078134537f, 9.5312490463f, 9.5624990463f, 9.5703125000f, 9.6015615463f, 9.6328134537f, 9.6406259537f, 9.6640615463f, 9.6953115463f, 9.7578125000f, 9.7656250000f, 9.7812509537f, 9.8125000000f, 9.8281250000f, 9.8515634537f, 9.9062490463f, 9.9531259537f, 9.9765634537f, 10.0000000000f, 10.0156250000f, 10.0390625000f, 10.0703115463f, 10.1250000000f, 10.1562490463f, 10.1640625000f, 10.1953115463f, 10.2031250000f, 10.2500009537f, 10.2578115463f, 10.2656250000f, 10.3203115463f, 10.3281250000f, 10.3515634537f, 10.4062500000f, 10.4765625000f, 10.5078115463f, 10.5156259537f, 10.5312490463f, 10.5625009537f, 10.5781240463f, 10.6250000000f, 10.6328134537f, 10.6953125000f, 10.7031250000f, 10.7265634537f, 10.7578134537f, 10.7656250000f, 10.7890625000f, 10.8125009537f, 10.8203125000f, 10.8906240463f, 10.9062500000f, 10.9531250000f, 10.9765625000f, 11.0078115463f, 11.0312500000f, 11.0390634537f, 11.0703115463f, 11.0781250000f, 11.1015634537f, 11.1250000000f, 11.1640625000f, 11.1953134537f, 11.2499990463f, 11.2812500000f, 11.2890634537f, 11.3125009537f, 11.3281250000f, 11.3515625000f, 11.3906250000f, 11.4062500000f, 11.4453125000f, 11.4531250000f, 11.4765634537f, 11.5312509537f, 11.5625000000f, 11.5703134537f, 11.6328125000f, 11.6406240463f, 11.6562500000f, 11.6640625000f, 11.7812509537f, 11.8203125000f, 11.8281250000f, 11.8515625000f, 11.8828125000f, 11.9140615463f, 11.9531259537f, 12.0078115463f, 12.0156250000f, 12.0625000000f, 12.0781250000f, 12.1015625000f, 12.1250000000f, 12.1328115463f, 12.1562509537f, 12.1640625000f, 12.2265625000f, 12.2500000000f, 12.2656250000f, 12.2890625000f, 12.3125009537f, 12.3828115463f, 12.3906250000f, 12.4062490463f, 12.4531259537f, 12.4765625000f, 12.5000000000f, 12.5156259537f, 12.5312500000f, 12.5703125000f, 12.6015615463f, 12.6249990463f, 12.6406240463f, 12.6562490463f, 12.6640615463f, 12.6953115463f, 12.7265615463f, 12.7812509537f, 12.7890634537f, 12.8125000000f, 12.8281250000f, 12.8828115463f, 12.9453125000f, 12.9531259537f, 13.0000000000f, 13.0078134537f, 13.0156240463f, 13.0390634537f, 13.1328125000f, 13.1406240463f, 13.1562490463f, 13.1640625000f, 13.2031240463f, 13.2265615463f, 13.2500009537f, 13.2578125000f, 13.2812500000f, 13.3281250000f, 13.3515625000f, 13.3906240463f, 13.4140625000f, 13.4453115463f, 13.5156250000f, 13.5312509537f, 13.5390634537f, 13.5703134537f, 13.6015625000f, 13.6250000000f, 13.6328125000f, 13.6406240463f, 13.6953125000f, 13.7031250000f, 13.7656259537f, 13.7812500000f, 13.7890615463f, 13.8125000000f, 13.8203134537f, 13.8515625000f, 13.8828115463f, 13.9062490463f, 13.9140634537f, 13.9765634537f, 14.0312509537f, 14.0625000000f, 14.0703125000f, 14.0781250000f, 14.1015615463f, 14.1250009537f, 14.1406250000f, 14.1640625000f, 14.2031259537f, 14.2578134537f, 14.2812490463f, 14.3125000000f, 14.4062509537f, 14.4140634537f, 14.4453125000f, 14.4531259537f, 14.4765625000f, 14.5000000000f, 14.5156240463f, 14.5390625000f, 14.5624990463f, 14.5703125000f, 14.6250009537f, 14.6328134537f, 14.6406259537f, 14.6640634537f, 14.7031240463f, 14.7265634537f, 14.7578125000f, 14.8281240463f, 14.8515634537f, 14.8906259537f, 14.9062509537f, 14.9453115463f, 15.0078115463f, 15.0156259537f, 15.0312509537f, 15.0625000000f, 15.0781259537f, 15.1015634537f, 15.1250000000f, 15.1328134537f, 15.1562490463f, 15.1953125000f, 15.2265625000f, 15.2499990463f, 15.2656240463f, 15.3125009537f, 15.3203125000f, 15.3281240463f, 15.3906250000f, 15.4062509537f, 15.4140625000f, 15.5078115463f, 15.5390625000f, 15.5703125000f, 15.5781259537f, 15.6015615463f, 15.6250000000f, 15.6640615463f, 15.6953115463f, 15.7578115463f, 15.7656240463f, 15.7812490463f, 15.8203125000f, 15.8515625000f, 15.8906240463f, 15.9062490463f, 15.9453134537f, 15.9531259537f, 15.9765625000f, 15.9999990463f, 16.0156230927f, 16.0390625000f, 16.0625000000f, 16.0703105927f, 16.1015625000f, 16.1406250000f, 16.1640644073f, 16.2031250000f, 16.2500000000f, 16.2578105927f, 16.2812500000f, 16.3124980927f, 16.3203105927f, 16.3828105927f, 16.3906230927f, 16.4453125000f, 16.4531250000f, 16.5078125000f, 16.5312500000f, 16.5390625000f, 16.5625000000f, 16.5781250000f, 16.6015625000f, 16.6328105927f, 16.6562480927f, 16.6953105927f, 16.7031269073f, 16.7265644073f, 16.7656250000f, 16.8124980927f, 16.8203144073f, 16.8828125000f, 16.9062500000f, 16.9140625000f, 16.9453125000f, 16.9765625000f, 16.9999980927f, 17.0156250000f, 17.0312519073f, 17.0781269073f, 17.1249980927f, 17.1406250000f, 17.1562519073f, 17.1640625000f, 17.2265625000f, 17.2578125000f, 17.2656230927f, 17.2890625000f, 17.3125000000f, 17.3281230927f, 17.3515625000f, 17.3828125000f, 17.4062500000f, 17.4531250000f, 17.4765644073f, 17.5390625000f, 17.5625000000f, 17.5703125000f, 17.5781250000f, 17.6328105927f, 17.6406250000f, 17.6562480927f, 17.7265625000f, 17.7578144073f, 17.7812519073f, 17.8203125000f, 17.8515625000f, 17.8906230927f, 17.9140625000f, 17.9453125000f, 18.0000000000f, 18.0078105927f, 18.0156250000f, 18.0312500000f, 18.0390625000f, 18.0624980927f, 18.0703125000f, 18.0781250000f, 18.1250000000f, 18.1953105927f, 18.2031250000f, 18.2265625000f, 18.2500000000f, 18.2812500000f, 18.2890625000f, 18.3125019073f, 18.3515625000f, 18.3828125000f, 18.4140605927f, 18.4531250000f, 18.5000019073f, 18.5312500000f, 18.5703125000f, 18.5781230927f, 18.6015605927f, 18.6250000000f, 18.6328105927f, 18.6406250000f, 18.6640644073f, 18.6953144073f, 18.7578125000f, 18.7812500000f, 18.7890625000f, 18.8281250000f, 18.8828125000f, 18.9062500000f, 18.9140625000f, 18.9453125000f, 18.9531250000f, 19.0156250000f, 19.0390644073f, 19.0624980927f, 19.0703144073f, 19.1250000000f, 19.1406250000f, 19.1562500000f, 19.2031250000f, 19.2578125000f, 19.2656250000f, 19.2812500000f, 19.3203125000f, 19.3281230927f, 19.3515644073f, 19.3906250000f, 19.4765625000f, 19.5156250000f, 19.5312500000f, 19.5390625000f, 19.5625019073f, 19.6015625000f, 19.6250019073f, 19.6562500000f, 19.6953125000f, 19.7031230927f, 19.7265625000f, 19.7578144073f, 19.7890625000f, 19.8125019073f, 19.8828125000f, 19.9062500000f, 19.9140625000f, 19.9531230927f, 19.9765625000f, 20.0000000000f, 20.0078125000f, 20.0312500000f, 20.0781250000f, 20.1406250000f, 20.1640625000f, 20.2500019073f, 20.2578125000f, 20.2656269073f, 20.2890625000f, 20.3125000000f, 20.3203125000f, 20.3515625000f, 20.3828144073f, 20.3906230927f, 20.4062519073f, 20.4453144073f, 20.4765605927f, 20.5000000000f, 20.5156230927f, 20.5312500000f, 20.5703125000f, 20.6015605927f, 20.6406269073f, 20.6562519073f, 20.6640605927f, 20.7031230927f, 20.7578125000f, 20.8125000000f, 20.8203125000f, 20.8515625000f, 20.9140644073f, 20.9531250000f, 21.0078125000f, 21.0156269073f, 21.0312500000f, 21.0390625000f, 21.0625000000f, 21.1015625000f, 21.1250000000f, 21.1328105927f, 21.1562500000f, 21.1953125000f, 21.2499980927f, 21.2656250000f, 21.2890644073f, 21.3203105927f, 21.3906250000f, 21.4062500000f, 21.4140625000f, 21.4453105927f, 21.4531250000f, 21.4765644073f, 21.5078144073f, 21.5156230927f, 21.5312500000f, 21.5781250000f, 21.6250000000f, 21.6406269073f, 21.6953144073f, 21.7578105927f, 21.7812480927f, 21.7890644073f, 21.8125000000f, 21.8515644073f, 21.8828105927f, 21.9062500000f, 21.9453125000f, 21.9531250000f, 21.9765625000f, 22.0078105927f, 22.0156250000f, 22.0624980927f, 22.0703125000f, 22.0781269073f, 22.1328125000f, 22.1406230927f, 22.1562500000f, 22.1640625000f, 22.2031269073f, 22.2265644073f, 22.2500000000f, 22.2890644073f, 22.3203125000f, 22.3281250000f, 22.3515625000f, 22.3906250000f, 22.4453125000f, 22.5000000000f, 22.5390625000f, 22.5625000000f, 22.5781250000f, 22.6250000000f, 22.6328125000f, 22.6562480927f, 22.7031269073f, 22.7265625000f, 22.7812500000f, 22.8125000000f, 22.8515644073f, 22.8828125000f, 22.8906250000f, 22.9062500000f, 22.9531230927f, 22.9765625000f, 23.0625000000f, 23.0703105927f, 23.1015625000f, 23.1250019073f, 23.1406250000f, 23.1640625000f, 23.1953105927f, 23.2578105927f, 23.2656269073f, 23.2812480927f, 23.3124980927f, 23.3281269073f, 23.3515644073f, 23.3828125000f, 23.4140605927f, 23.4453125000f, 23.4765605927f, 23.5625000000f, 23.6328125000f, 23.6406250000f, 23.6562519073f, 23.6640605927f, 23.6953105927f, 23.7031250000f, 23.7265625000f, 23.7578125000f, 23.7656230927f, 23.7812519073f, 23.8203125000f, 23.8281269073f, 23.9062519073f, 23.9140625000f, 23.9453125000f, 24.0156250000f, 24.0312480927f, 24.0390644073f, 24.1015644073f, 24.1249980927f, 24.1328125000f, 24.1562500000f, 24.2031250000f, 24.2500019073f, 24.2656250000f, 24.2890625000f, 24.3124980927f, 24.3281250000f, 24.3828105927f, 24.4140625000f, 24.4531250000f, 24.4765644073f, 24.5000000000f, 24.5312480927f, 24.5390625000f, 24.5703125000f, 24.5781250000f, 24.6249980927f, 24.6953125000f, 24.7578125000f, 24.7656250000f, 24.7812500000f, 24.8125000000f, 24.8203125000f, 24.8515644073f, 24.8828105927f, 24.9062480927f, 24.9531250000f, 25.0000000000f, 25.0156230927f, 25.0312480927f, 25.0390625000f, 25.0625000000f, 25.0703125000f, 25.1328144073f, 25.1406230927f, 25.1640605927f, 25.2031230927f, 25.2265625000f, 25.2500000000f, 25.2578105927f, 25.2812480927f, 25.3125000000f, 25.3281250000f, 25.3828125000f, 25.3906230927f, 25.4140625000f, 25.4453125000f, 25.4531250000f, 25.5078125000f, 25.5624980927f, 25.5781269073f, 25.6015625000f, 25.6250019073f, 25.6328125000f, 25.6562500000f, 25.6640625000f, 25.7265625000f, 25.7656250000f, 25.7890625000f, 25.8203105927f, 25.8828125000f, 25.8906250000f, 25.9062500000f, 25.9453105927f, 26.0000000000f, 26.0078125000f, 26.0156269073f, 26.0312519073f, 26.0781269073f, 26.1015625000f, 26.1640625000f, 26.2265625000f, 26.2578125000f, 26.2656269073f, 26.2812500000f, 26.2890644073f, 26.3125000000f, 26.3281250000f, 26.3515625000f, 26.4062500000f, 26.4453125000f, 26.4531250000f, 26.4765625000f, 26.5000000000f, 26.5078105927f, 26.5156230927f, 26.5625019073f, 26.6562500000f, 26.6640625000f, 26.7031269073f, 26.7578125000f, 26.7812500000f, 26.8203125000f, 26.8281250000f, 26.8906250000f, 26.9140625000f, 26.9453125000f, 27.0078105927f, 27.0312519073f, 27.0390625000f, 27.0625000000f, 27.0781269073f, 27.1015605927f, 27.1406250000f, 27.1953125000f, 27.2265644073f, 27.2500000000f, 27.2656250000f, 27.2812500000f, 27.3203125000f, 27.3515644073f, 27.3828125000f, 27.3906269073f, 27.4062500000f, 27.4140625000f, 27.4765605927f, 27.5312500000f, 27.5625000000f, 27.5703125000f, 27.5781250000f, 27.6015625000f, 27.6250000000f, 27.6406269073f, 27.6640625000f, 27.6953125000f, 27.7031230927f, 27.7656230927f, 27.7890625000f, 27.8125019073f, 27.8281269073f, 27.9140644073f, 27.9453125000f, 27.9531269073f, 27.9765625000f, 28.0390625000f, 28.0625000000f, 28.0703125000f, 28.1250000000f, 28.1328105927f, 28.1406230927f, 28.1562519073f, 28.1953144073f, 28.2031250000f, 28.2265605927f, 28.2500000000f, 28.2578105927f, 28.2812500000f, 28.3203125000f, 28.3281269073f, 28.4062519073f, 28.4140625000f, 28.4765644073f, 28.5078105927f, 28.5156250000f, 28.5390625000f, 28.5625000000f, 28.6250000000f, 28.6328105927f, 28.6953144073f, 28.7265625000f, 28.7578125000f, 28.8124980927f, 28.8281230927f, 28.8828105927f, 28.8906250000f, 28.9062500000f, 28.9140644073f, 28.9531269073f, 28.9765644073f, 29.0000000000f, 29.0312500000f, 29.0703125000f, 29.1015644073f, 29.1250000000f, 29.1406250000f, 29.1640625000f, 29.1953144073f, 29.2499980927f, 29.2656250000f, 29.2812519073f, 29.3281230927f, 29.3515625000f, 29.3828125000f, 29.4062519073f, 29.4453125000f, 29.4531250000f, 29.5156269073f, 29.5703125000f, 29.6015644073f, 29.6328144073f, 29.6562500000f, 29.6640605927f, 29.7031230927f, 29.7265605927f, 29.7578144073f, 29.7812519073f, 29.8125000000f, 29.8515644073f, 29.8828125000f, 29.8906250000f, 29.9453144073f, 30.0156230927f, 30.0312500000f, 30.0390625000f, 30.0625000000f, 30.1015605927f, 30.1250000000f, 30.1562500000f, 30.1953125000f, 30.2031250000f, 30.2265625000f, 30.2499980927f, 30.2656269073f, 30.2890625000f, 30.3125000000f, 30.3203125000f, 30.3828125000f, 30.3906250000f, 30.4140625000f, 30.4453125000f, 30.4531230927f, 30.5000019073f, 30.5312519073f, 30.6015625000f, 30.6250019073f, 30.6406250000f, 30.6562480927f, 30.6640644073f, 30.6953125000f, 30.7812519073f, 30.8125000000f, 30.8281250000f, 30.9453144073f, 30.9765625000f, 31.0078125000f, 31.0156230927f, 31.0390625000f, 31.0703144073f, 31.0781250000f, 31.1328144073f, 31.1406250000f, 31.1562480927f, 31.1640625000f, 31.2031250000f, 31.2499980927f, 31.2578144073f, 31.2890625000f, 31.3281269073f, 31.3515625000f, 31.3906250000f, 31.4140605927f, 31.5078125000f, 31.5156250000f, 31.5312519073f, 31.5624980927f, 31.5703105927f, 31.6015625000f, 31.6328105927f, 31.6406250000f, 31.6562519073f, 31.6953125000f, 31.7031269073f, 31.7812519073f, 31.7890644073f, 31.8125000000f, 31.8203144073f, 31.8906230927f, 31.9062500000f, 31.9531230927f, 31.9765625000f, 32.0000000000f};

__constant float Alltrigs[] = {0, 2283.0, -422.0, 2072.0, 2485.0, -422.0, 1849.0, 2283.0, -422.0, 1849.0, 0.0, 1.0, 0.0, 422.0, 2, 2283.0, -422.0, 2072.0, 2485.0, -422.0, 2072.0, 2485.0, -422.0, 1849.0, 0.0, 1.0, 0.0, 422.0, 2, 2640.0, 89.0, 2223.0, 2637.0, 89.0, 1711.0, 2485.0, 89.0, 1849.0, 0.0, 1.0, 0.0, -89.0, 2, 2640.0, 89.0, 2223.0, 2485.0, 89.0, 1849.0, 2485.0, 89.0, 2072.0, 0.0, 1.0, 0.0, -89.0, 2, 2640.0, 89.0, 2223.0, 2485.0, 89.0, 2072.0, 2283.0, 89.0, 2072.0, 0.0, 0.9999999, 0.0, -88.99999, 2, 2640.0, 89.0, 2223.0, 2283.0, 89.0, 2072.0, 2128.0, 89.0, 2226.0, 0.0, 1.0, 0.0, -89.0, 2, 2283.0, 89.0, 1849.0, 2485.0, 89.0, 1849.0, 2637.0, 89.0, 1711.0, 0.0, 1.0, 0.0, -89.0, 2, 2283.0, 89.0, 1849.0, 2637.0, 89.0, 1711.0, 2125.0, 89.0, 1714.0, 0.0, 1.0, 0.0, -89.0, 2, 2283.0, 89.0, 2072.0, 2283.0, 89.0, 1849.0, 2125.0, 89.0, 1714.0, 0.0, 1.0, 0.0, -89.0, 2, 2128.0, 89.0, 2226.0, 2283.0, 89.0, 2072.0, 2125.0, 89.0, 1714.0, 0.0, 1.0, 0.0, -89.0, 2, 0.0, 5003.0, -4717.0, 0.0, 6298.0, -4658.0, 509.0, 6298.0, -4412.0, 0.4347791, 0.04098582, -0.899604, -4448.484, 2, 555.0, 5007.0, -4443.0, 0.0, 5003.0, -4717.0, 509.0, 6298.0, -4412.0, 0.4421605, 0.03727372, -0.8961611, -4413.673, 2, 508.0, 6298.0, -3698.0, 562.0, 5017.0, -3681.0, 555.0, 5007.0, -4443.0, 0.9990708, 0.04198629, -0.009728817, -807.9348, 2, 509.0, 6298.0, -4412.0, 508.0, 6298.0, -3698.0, 555.0, 5007.0, -4443.0, 0.999366, 0.03557509, 0.001399672, -726.5538, 2, 0.0, 6298.0, -4658.0, 0.0, 5003.0, -4717.0, -554.0, 5007.0, -4443.0, -0.4427201, 0.04080935, -0.8957307, -4429.331, 2, -507.0, 6298.0, -3698.0, -561.0, 5017.0, -3681.0, -306.0, 5021.0, -3373.0, -0.7698834, 0.04090596, 0.6368722, 1707.197, 2, -281.0, 6298.0, -3421.0, -507.0, 6298.0, -3698.0, -306.0, 5021.0, -3373.0, -0.7742424, 0.03890156, 0.6316923, 1698.455, 2, 282.0, 6298.0, -3421.0, 307.0, 5021.0, -3373.0, 508.0, 6298.0, -3698.0, 0.7742424, 0.03890156, 0.6316923, 1697.681, 2, -281.0, 6298.0, -3421.0, -306.0, 5021.0, -3373.0, 282.0, 6298.0, -3421.0, 0.0, 0.03756157, 0.9992944, 3182.023, 2, 282.0, 6298.0, -3421.0, -306.0, 5021.0, -3373.0, 307.0, 5021.0, -3373.0, 0.0, 0.03756157, 0.9992943, 3182.023, 2, -508.0, 6298.0, -4412.0, 0.0, 6298.0, -4658.0, -554.0, 5007.0, -4443.0, -0.4355384, 0.03711566, -0.8994046, -4423.181, 2, 508.0, 6298.0, -3698.0, 307.0, 5021.0, -3373.0, 562.0, 5017.0, -3681.0, 0.7698834, 0.04090596, 0.6368722, 1706.427, 2, 554.0, 811.0, -162.0, 451.0, 964.0, -258.0, 451.0, 811.0, -162.0, 0.0, 0.531491, 0.8470639, -293.8149, 2, 554.0, 811.0, -162.0, 554.0, 964.0, -258.0, 451.0, 964.0, -258.0, 0.0, 0.531491, 0.8470639, -293.8149, 2, -450.0, 811.0, -162.0, -450.0, 964.0, -264.0, -553.0, 811.0, -162.0, 0.0, 0.5547002, 0.8320503, -315.0697, 2, -450.0, 964.0, -264.0, -553.0, 964.0, -264.0, -553.0, 811.0, -162.0, 0.0, 0.5547002, 0.8320503, -315.0698, 2, -450.0, 811.0, -162.0, 451.0, 811.0, -162.0, 451.0, 906.0, -796.0, 0.0, 0.9889592, 0.1481879, -778.0394, 2, -450.0, 811.0, -162.0, 451.0, 906.0, -796.0, -450.0, 906.0, -796.0, 0.0, 0.9889592, 0.1481879, -778.0394, 2, 3201.0, -511.0, -2913.0, 3274.0, -511.0, -2841.0, 3382.0, -511.0, -2949.0, 0.0, 1.0, 0.0, 511.0, 2, 3201.0, -511.0, -2913.0, 3382.0, -511.0, -2949.0, 3310.0, -511.0, -3022.0, 0.0, 1.0, 0.0, 511.0, 2, 554.0, 803.0, -2229.0, 154.0, 803.0, -3104.0, -153.0, 803.0, -3104.0, 0.0, 1.0, 0.0, -803.0, 2, 554.0, 803.0, -2229.0, 554.0, 803.0, -3104.0, 154.0, 803.0, -3104.0, 0.0, 1.0, 0.0, -803.0, 2, 554.0, 803.0, -2229.0, -153.0, 803.0, -3104.0, -553.0, 803.0, -3104.0, 0.0, 1.0, 0.0, -803.0, 2, -553.0, 803.0, -2229.0, -450.0, 803.0, -2229.0, -553.0, 803.0, -3104.0, 0.0, 1.0, 0.0, -803.0, 2, -450.0, 803.0, -2229.0, 451.0, 803.0, -2229.0, -553.0, 803.0, -3104.0, 0.0, 1.0, 0.0, -803.0, 2, -553.0, 803.0, -3104.0, 451.0, 803.0, -2229.0, 554.0, 803.0, -2229.0, 0.0, 1.0, 0.0, -803.0, 2, -553.0, 803.0, -2229.0, -450.0, 957.0, -2127.0, -450.0, 803.0, -2229.0, 0.0, 0.5521991, -0.8337123, -2301.76, 2, 451.0, 906.0, -1512.0, -450.0, 803.0, -2127.0, -450.0, 906.0, -1512.0, 0.0, 0.9862636, -0.1651791, -1143.306, 2, 451.0, 906.0, -1512.0, 451.0, 803.0, -2127.0, -450.0, 803.0, -2127.0, 0.0, 0.9862636, -0.1651791, -1143.306, 2, -450.0, 803.0, -2127.0, 451.0, 803.0, -2127.0, 451.0, 803.0, -2229.0, 0.0, 1.0, 0.0, -803.0, 2, -450.0, 803.0, -2127.0, 451.0, 803.0, -2229.0, -450.0, 803.0, -2229.0, 0.0, 1.0, 0.0, -803.0, 2, 451.0, 803.0, -2229.0, 554.0, 957.0, -2127.0, 554.0, 803.0, -2229.0, 0.0, 0.5521991, -0.8337123, -2301.76, 2, 451.0, 803.0, -2229.0, 451.0, 957.0, -2127.0, 554.0, 957.0, -2127.0, 0.0, 0.5521991, -0.8337123, -2301.76, 2, -4369.0, 2339.0, -7760.0, -4369.0, 2339.0, -6149.0, -3481.0, 2339.0, -6149.0, 0.0, 0.9999999, 0.0, -2339.0, 2, -4369.0, 2339.0, -7760.0, -3481.0, 2339.0, -6149.0, -3481.0, 2339.0, -7274.0, 0.0, 1.0, 0.0, -2339.0, 2, 451.0, 906.0, -796.0, -450.0, 906.0, -1512.0, -450.0, 906.0, -796.0, 0.0, 1.0, 0.0, -906.0, 2, -450.0, 957.0, -2127.0, -553.0, 964.0, -264.0, -450.0, 964.0, -264.0, 0.0, 0.9999929, -0.003757354, -964.9851, 2, -450.0, 957.0, -2127.0, -553.0, 957.0, -2127.0, -553.0, 964.0, -264.0, 0.0, 0.9999929, -0.003757354, -964.9851, 2, -553.0, 803.0, -2229.0, -553.0, 957.0, -2127.0, -450.0, 957.0, -2127.0, 0.0, 0.5521991, -0.8337123, -2301.76, 2, 554.0, 957.0, -2127.0, 451.0, 964.0, -258.0, 554.0, 964.0, -258.0, 0.0, 0.999993, -0.003745292, -964.9595, 2, 554.0, 957.0, -2127.0, 451.0, 957.0, -2127.0, 451.0, 964.0, -258.0, 0.0, 0.999993, -0.003745292, -964.9595, 2, 451.0, 906.0, -796.0, 451.0, 906.0, -1512.0, -450.0, 906.0, -1512.0, 0.0, 1.0, 0.0, -906.0, 2, 3201.0, -506.0, -3347.0, 2875.0, -506.0, -3022.0, 3419.0, -511.0, -3130.0, 0.01147512, 0.9998679, 0.01151043, 507.7267, 2, 2875.0, -506.0, -3022.0, 3093.0, -511.0, -2804.0, 3419.0, -511.0, -3130.0, 0.01146638, 0.9998686, 0.01146638, 507.619, 2, -562.0, 803.0, -3718.0, -562.0, 803.0, -3206.0, 563.0, 803.0, -3206.0, 0.0, 1.0, 0.0, -803.0, 2, -562.0, 803.0, -3718.0, 563.0, 803.0, -3206.0, 563.0, 803.0, -3718.0, 0.0, 1.0, 0.0, -803.0, 2, 4370.0, 2339.0, -7750.0, 3484.0, 2339.0, -7274.0, 4370.0, 2339.0, -6149.0, 0.0, 0.9999999, 0.0, -2339.0, 2, 3484.0, 2339.0, -7274.0, 3483.0, 2339.0, -6149.0, 4370.0, 2339.0, -6149.0, 0.0, 1.0, 0.0, -2339.0, 2, 154.0, 803.0, -3104.0, -153.0, 803.0, -3206.0, -153.0, 803.0, -3104.0, 0.0, 0.9999999, 0.0, -802.9999, 2, 154.0, 803.0, -3104.0, 154.0, 803.0, -3206.0, -153.0, 803.0, -3206.0, 0.0, 0.9999999, 0.0, -802.9999, 2, 554.0, 811.0, -162.0, 451.0, 811.0, -162.0, -1112.0, 801.0, 1396.0, 0.0, 0.9999795, 0.006418353, -809.9436, 2, 451.0, 811.0, -162.0, -450.0, 811.0, -162.0, -1112.0, 801.0, 1396.0, 0.0, 0.9999794, 0.006418353, -809.9435, 2, -829.0, 260.0, 5658.0, -24.0, 260.0, 5009.0, -816.0, 260.0, 3370.0, 0.0, 1.0, 0.0, -260.0, 2, -24.0, 260.0, 5009.0, 48.0, 260.0, 3912.0, -816.0, 260.0, 3370.0, 0.0, 1.0, 0.0, -260.0, 2, -2047.0, 260.0, 5792.0, -829.0, 260.0, 5658.0, -816.0, 260.0, 3370.0, 0.0, 1.0, 0.0, -260.0, 2, -2317.0, 260.0, 3579.0, -2047.0, 260.0, 5792.0, -816.0, 260.0, 3370.0, 0.0, 1.0, 0.0, -260.0, 2, -2317.0, 260.0, 3579.0, -3471.0, 260.0, 4623.0, -2047.0, 260.0, 5792.0, 0.0, 0.9999999, 0.0, -260.0, 2, -2317.0, 260.0, 3579.0, -3372.0, 260.0, 2933.0, -4318.0, 260.0, 3323.0, 0.0, 1.0, 0.0, -260.0, 2, -2317.0, 260.0, 3579.0, -4318.0, 260.0, 3323.0, -3471.0, 260.0, 4623.0, 0.0, 1.0, 0.0, -260.0, 2, 3483.0, 545.0, -5438.0, 4409.0, 545.0, -5437.0, 4981.0, 545.0, -6167.0, 0.0, 0.9999999, 0.0, -544.9999, 2, 4370.0, 545.0, -6149.0, 3483.0, 545.0, -6149.0, 3483.0, 545.0, -5438.0, 0.0, 1.0, 0.0, -545.0, 2, 3483.0, 545.0, -5438.0, 4981.0, 545.0, -6167.0, 4370.0, 545.0, -6149.0, 0.0, 1.0, 0.0, -545.0, 2, 4370.0, 545.0, -6149.0, 4981.0, 545.0, -6167.0, 4989.0, 545.0, -7072.0, 0.0, 1.0, 0.0, -545.0, 2, 4989.0, 545.0, -7072.0, 4370.0, 545.0, -7749.0, 4370.0, 545.0, -6149.0, 0.0, 1.0, 0.0, -545.0, 2, -4700.0, 543.0, -3663.0, -5220.0, 422.0, -2744.0, -4671.0, 422.0, -2545.0, -0.03933816, 0.993315, 0.1085259, -326.7291, 2, -5307.0, 543.0, -3479.0, -5220.0, 422.0, -2744.0, -4700.0, 543.0, -3663.0, 0.04752368, 0.98649, 0.1567765, 261.9696, 2, -4700.0, 543.0, -3663.0, -4928.0, 543.0, -4193.0, -5307.0, 543.0, -3479.0, 0.0, 1.0, 0.0, -543.0, 2, 2314.0, 371.0, -162.0, 554.0, 811.0, -162.0, 2318.0, 371.0, 683.0, 0.2425355, 0.9701418, -0.001148097, -921.3356, 2, -2047.0, 518.0, -162.0, -2317.0, 518.0, 929.0, -553.0, 811.0, -162.0, -0.1922338, 0.9801953, -0.04757389, -908.9506, 2, 554.0, 811.0, -162.0, -1112.0, 801.0, 1396.0, 91.0, 801.0, 1396.0, 0.0, 0.9999794, 0.006418353, -809.9435, 2, 2318.0, 371.0, 683.0, 554.0, 811.0, -162.0, 91.0, 801.0, 1396.0, 0.210313, 0.9752131, 0.06875934, -896.2722, 2, -450.0, 811.0, -162.0, -553.0, 811.0, -162.0, -1112.0, 801.0, 1396.0, 0.0, 0.9999795, 0.006418353, -809.9436, 2, -1112.0, 801.0, 1396.0, -553.0, 811.0, -162.0, -2317.0, 518.0, 929.0, -0.2035321, 0.9767897, -0.06675646, -915.5443, 2, -3360.0, 420.0, 1187.0, -2047.0, 518.0, -162.0, -4363.0, 371.0, 255.0, -0.06097976, 0.9980524, 0.0131525, -639.686, 2, -2317.0, 518.0, 929.0, -2047.0, 518.0, -162.0, -3360.0, 420.0, 1187.0, -0.09955897, 0.9947265, -0.02463879, -723.0571, 2, -4363.0, 371.0, 255.0, -2047.0, 518.0, -162.0, -4132.0, 371.0, -562.0, -0.06671511, 0.9975937, -0.01886315, -656.3752, 2, 3362.0, 405.0, -567.0, 3556.0, 405.0, -36.0, 4597.0, 405.0, -1016.0, 0.0, 1.0, 0.0, -405.0, 2, 4791.0, 405.0, -485.0, 4597.0, 405.0, -1016.0, 3556.0, 405.0, -36.0, 0.0, 1.0, 0.0, -405.0, 2, 4597.0, 405.0, -1016.0, 5249.0, 397.0, -636.0, 5052.0, 371.0, -2053.0, 0.02497496, 0.9994502, -0.02181071, -541.7469, 2, 4791.0, 405.0, -485.0, 5249.0, 397.0, -636.0, 4597.0, 405.0, -1016.0, 0.0155873, 0.9998623, -0.005694795, -482.3849, 2, 2314.0, 371.0, -162.0, 3556.0, 405.0, -36.0, 3362.0, 405.0, -567.0, -0.02841589, 0.9995423, 0.0103817, -303.394, 2, -3372.0, 260.0, 2933.0, -3727.0, 260.0, 2048.0, -4318.0, 260.0, 3323.0, 0.0, 1.0, 0.0, -260.0, 2, -4599.0, 260.0, 2299.0, -4318.0, 260.0, 3323.0, -3727.0, 260.0, 2048.0, 0.0, 0.9999999, 0.0, -260.0, 2, -5784.0, 543.0, -4360.0, -5864.0, 543.0, -3689.0, -4928.0, 543.0, -4193.0, 0.0, 1.0, 0.0, -543.0, 2, -5307.0, 543.0, -3479.0, -4928.0, 543.0, -4193.0, -5864.0, 543.0, -3689.0, 0.0, 1.0, 0.0, -543.0, 2, 2318.0, 371.0, 683.0, 3556.0, 405.0, -36.0, 2314.0, 371.0, -162.0, -0.02737809, 0.9996251, 0.0001296004, -307.4871, 2, 4407.0, 545.0, -3689.0, 4963.0, 544.0, -3762.0, 4409.0, 545.0, -5437.0, 0.001798828, 0.9999983, 2.058156e-06, -552.9189, 2, 4407.0, 545.0, -3689.0, 5052.0, 371.0, -2053.0, 4963.0, 544.0, -3762.0, 0.01491022, 0.9948823, 0.09993424, -239.2628, 2, 5633.0, 371.0, -2047.0, 4963.0, 544.0, -3762.0, 5052.0, 371.0, -2053.0, -0.00104063, 0.9949095, 0.1007677, -156.9781, 2, 4981.0, 545.0, -6167.0, 4409.0, 545.0, -5437.0, 4963.0, 544.0, -3762.0, 0.0005357718, 0.9999998, 0.0004198103, -545.0796, 2, 5633.0, 371.0, -2047.0, 5052.0, 371.0, -2053.0, 5249.0, 397.0, -636.0, 0.0001897271, 0.9998311, -0.0183719, -409.6133, 2, -4671.0, 422.0, -2545.0, -5220.0, 422.0, -2744.0, -4796.0, 405.0, -1606.0, -0.006259284, 0.9998314, 0.01726807, -407.2187, 2, -4796.0, 405.0, -1606.0, -5220.0, 422.0, -2744.0, -5438.0, 405.0, -1522.0, 0.001863522, 0.9998968, 0.01424263, -373.1471, 2, -4796.0, 405.0, -1606.0, -5438.0, 405.0, -1522.0, -4132.0, 371.0, -562.0, 0.003931947, 0.9995406, 0.03005131, -337.6939, 2, -3360.0, 420.0, 1187.0, -4363.0, 371.0, 255.0, -3727.0, 260.0, 2048.0, -0.1556623, 0.9809821, 0.1159455, -1072.665, 2, -4666.0, 260.0, 1401.0, -3727.0, 260.0, 2048.0, -4363.0, 371.0, 255.0, -0.05617653, 0.9950865, 0.08152977, -635.0654, 2, -4132.0, 371.0, -562.0, -5438.0, 405.0, -1522.0, -4363.0, 371.0, 255.0, 0.02154861, 0.9997492, 0.006092693, -278.444, 2, -4599.0, 260.0, 2299.0, -3727.0, 260.0, 2048.0, -4666.0, 260.0, 1401.0, 0.0, 1.0, 0.0, -260.0, 2, 3362.0, 0.0, 725.0, 3784.0, -1330.0, 590.0, 3556.0, 405.0, -36.0, 0.8987145, 0.2484781, 0.3613459, -3283.454, 2, 3584.0, -511.0, -3151.0, 4407.0, -511.0, -3689.0, 3482.0, -511.0, -3663.0, 0.0, 1.0, 0.0, 511.0, 2, 3584.0, -511.0, -3151.0, 5052.0, -511.0, -2053.0, 4407.0, -511.0, -3689.0, 0.0, 1.0, 0.0, 511.0, 2, 6659.0, -1330.0, 4236.0, 5709.0, -1330.0, 4034.0, 5400.0, -1330.0, 4459.0, 0.0, 1.0, 0.0, 1330.0, 2, 6045.0, -1330.0, 1574.0, 5384.0, -1330.0, 2982.0, 5667.0, -1330.0, 3225.0, 0.0, 1.0, 0.0, 1330.0, 2, 6045.0, -1330.0, 1574.0, 5667.0, -1330.0, 3225.0, 6864.0, -1330.0, 2905.0, 0.0, 1.0, 0.0, 1330.0, 2, 6864.0, -1330.0, 2905.0, 5667.0, -1330.0, 3225.0, 5709.0, -1330.0, 4034.0, 0.0, 1.0, 0.0, 1330.0, 2, 5709.0, -1330.0, 4034.0, 5667.0, -1330.0, 3225.0, 5372.0, -924.0, 3298.0, 0.8047013, 0.5922083, -0.04177682, -3637.875, 2, 5667.0, -1330.0, 3225.0, 5384.0, -1330.0, 2982.0, 5372.0, -924.0, 3298.0, 0.5562072, 0.5206106, -0.6477639, -370.5754, 2, 4099.0, -1330.0, 1483.0, 4402.0, -1330.0, 3226.0, 5384.0, -1330.0, 2982.0, 0.0, 0.9999999, 0.0, 1330.0, 2, 4099.0, -1330.0, 1483.0, 5384.0, -1330.0, 2982.0, 6045.0, -1330.0, 1574.0, 0.0, 1.0, 0.0, 1330.0, 2, 4402.0, -1330.0, 3226.0, 4832.0, -1330.0, 3682.0, 5384.0, -1330.0, 2982.0, 0.0, 1.0, 0.0, 1330.0, 2, 5384.0, -1330.0, 2982.0, 4832.0, -1330.0, 3682.0, 5372.0, -924.0, 3298.0, -0.7137135, 0.4169573, -0.5628141, 6075.499, 2, 5125.0, -1330.0, 4077.0, 5709.0, -1330.0, 4034.0, 5372.0, -924.0, 3298.0, 0.03464415, 0.8817112, 0.4705158, -923.1685, 2, 4832.0, -1330.0, 3682.0, 5125.0, -1330.0, 4077.0, 5372.0, -924.0, 3298.0, -0.4196744, 0.8526218, 0.3113028, 2015.637, 2, 4832.0, -1330.0, 3682.0, 4994.0, -1330.0, 4855.0, 5125.0, -1330.0, 4077.0, 0.0, 0.9999999, 0.0, 1330.0, 2, 4402.0, -1330.0, 3226.0, 4994.0, -1330.0, 4855.0, 4832.0, -1330.0, 3682.0, 0.0, 1.0, 0.0, 1330.0, 2, 5400.0, -1330.0, 4459.0, 5125.0, -1330.0, 4077.0, 4994.0, -1330.0, 4855.0, 0.0, 1.0, 0.0, 1330.0, 2, 5125.0, -1330.0, 4077.0, 5400.0, -1330.0, 4459.0, 5709.0, -1330.0, 4034.0, 0.0, 0.9999999, 0.0, 1330.0, 2, 6864.0, -1330.0, 2905.0, 5709.0, -1330.0, 4034.0, 6659.0, -1330.0, 4236.0, 0.0, 0.9999999, 0.0, 1330.0, 2, 3587.0, -1330.0, 4339.0, 2967.0, -1330.0, 5005.0, 3913.0, -1330.0, 5495.0, 0.0, 0.9999999, 0.0, 1330.0, 2, 4994.0, -1330.0, 4855.0, 3913.0, -1330.0, 5495.0, 5385.0, -1330.0, 4964.0, 0.0, 1.0, 0.0, 1330.0, 2, 3587.0, -1330.0, 4339.0, 3913.0, -1330.0, 5495.0, 4994.0, -1330.0, 4855.0, 0.0, 1.0, 0.0, 1330.0, 2, 4402.0, -1330.0, 3226.0, 3587.0, -1330.0, 4339.0, 4994.0, -1330.0, 4855.0, 0.0, 1.0, 0.0, 1330.0, 2, 5400.0, -1330.0, 4459.0, 4994.0, -1330.0, 4855.0, 5255.0, -1125.0, 4748.0, -0.6206699, 0.4580785, -0.6363434, 6798.317, 2, 4994.0, -1330.0, 4855.0, 5385.0, -1330.0, 4964.0, 5255.0, -1125.0, 4748.0, -0.2051447, 0.6452808, 0.735886, -1690.011, 2, 6659.0, -1330.0, 4236.0, 5385.0, -1330.0, 4964.0, 5882.0, -1330.0, 5370.0, 0.0, 1.0, 0.0, 1330.0, 2, 5882.0, -1330.0, 5370.0, 5385.0, -1330.0, 4964.0, 3913.0, -1330.0, 5495.0, 0.0, 0.9999999, 0.0, 1330.0, 2, 5400.0, -1330.0, 4459.0, 5385.0, -1330.0, 4964.0, 6659.0, -1330.0, 4236.0, 0.0, 1.0, 0.0, 1330.0, 2, 5385.0, -1330.0, 4964.0, 5400.0, -1330.0, 4459.0, 5255.0, -1125.0, 4748.0, 0.8322656, 0.5538254, 0.02472076, -3867.876, 2, 3784.0, -1330.0, 590.0, 4099.0, -1330.0, 1483.0, 6045.0, -1330.0, 1574.0, 0.0, 1.0, 0.0, 1330.0, 2, -4704.0, -1228.0, -5911.0, -4879.0, -1242.0, -5687.0, -4929.0, -1228.0, -4194.0, -0.09567462, 0.9953337, -0.01253744, 698.1075, 2, -4702.0, -1228.0, -3663.0, -3788.0, -972.0, -3361.0, -3541.0, -972.0, -3361.0, 0.0, 0.7628111, -0.6466213, -1431.842, 2, 3072.0, -511.0, -2639.0, 4597.0, -511.0, -1016.0, 3505.0, -511.0, -2621.0, 0.0, 1.0, 0.0, 511.0, 2, 3505.0, -511.0, -2621.0, 4597.0, -511.0, -1016.0, 3584.0, -511.0, -3151.0, 0.0, 1.0, 0.0, 511.0, 2, 3584.0, -511.0, -3151.0, 4597.0, -511.0, -1016.0, 5052.0, -511.0, -2053.0, 0.0, 1.0, 0.0, 511.0, 2, -3788.0, -921.0, -3361.0, -4686.0, -921.0, -3361.0, -4686.0, -869.0, -3151.0, 0.0, 0.9706839, -0.2403598, 86.15051, 2, -3788.0, -921.0, -3361.0, -4686.0, -869.0, -3151.0, -3912.0, -869.0, -3151.0, 0.0, 0.9706839, -0.2403598, 86.15051, 2, -4671.0, -511.0, -2545.0, -4796.0, -511.0, -1606.0, -4132.0, -511.0, -562.0, 0.0, 1.0, 0.0, 511.0, 2, -4704.0, -1228.0, -5911.0, -4044.0, -1228.0, -6069.0, -3906.0, -1228.0, -6149.0, 0.0, 1.0, 0.0, 1228.0, 2, -4704.0, -1228.0, -5911.0, -4929.0, -1228.0, -4194.0, -3481.0, -1228.0, -3663.0, 0.0, 1.0, 0.0, 1228.0, 2, -4132.0, -511.0, -562.0, -2047.0, -511.0, -162.0, -3225.0, -511.0, -1871.0, 0.0, 1.0, 0.0, 511.0, 2, -4132.0, -511.0, -562.0, -3532.0, -511.0, -2178.0, -3583.0, -511.0, -3151.0, 0.0, 1.0, 0.0, 511.0, 2, -4132.0, -511.0, -562.0, -3532.0, -511.0, -1871.0, -3532.0, -511.0, -2178.0, 0.0, 1.0, 0.0, 511.0, 2, -3225.0, -511.0, -1871.0, -3532.0, -511.0, -1871.0, -4132.0, -511.0, -562.0, 0.0, 1.0, 0.0, 511.0, 2, -3225.0, -511.0, -2178.0, -2559.0, -511.0, -2741.0, -3071.0, -511.0, -2639.0, 0.0, 1.0, 0.0, 511.0, 2, -2047.0, -511.0, -162.0, -553.0, -511.0, -162.0, -3225.0, -511.0, -1871.0, 0.0, 1.0, 0.0, 511.0, 2, -3225.0, -511.0, -1871.0, -553.0, -511.0, -162.0, -1023.0, -511.0, -2127.0, 0.0, 1.0, 0.0, 511.0, 2, -1023.0, -511.0, -2127.0, -3225.0, -511.0, -2178.0, -3225.0, -511.0, -1871.0, 0.0, 0.9999999, 0.0, 511.0, 2, -3225.0, -511.0, -2178.0, -1023.0, -511.0, -2127.0, -2559.0, -511.0, -2741.0, 0.0, 0.9999999, 0.0, 511.0, 2, -1023.0, -511.0, -2127.0, -1535.0, -511.0, -2536.0, -2559.0, -511.0, -2741.0, 0.0, 1.0, 0.0, 511.0, 2, -3583.0, -511.0, -3151.0, -3532.0, -511.0, -2178.0, -3225.0, -511.0, -2178.0, 0.0, 1.0, 0.0, 511.0, 2, -3583.0, -511.0, -3151.0, -3225.0, -511.0, -2178.0, -3071.0, -511.0, -2639.0, 0.0, 1.0, 0.0, 511.0, 2, -3225.0, -818.0, -2178.0, -3532.0, -818.0, -1871.0, -3225.0, -818.0, -1871.0, 0.0, 1.0, 0.0, 818.0, 2, -3225.0, -818.0, -2178.0, -3532.0, -818.0, -2178.0, -3532.0, -818.0, -1871.0, 0.0, 1.0, 0.0, 818.0, 2, -4929.0, -1228.0, -4194.0, -4702.0, -1228.0, -3663.0, -3481.0, -1228.0, -3663.0, 0.0, 1.0, 0.0, 1228.0, 2, 1536.0, -511.0, -2536.0, 1024.0, -511.0, -2127.0, 554.0, -511.0, -162.0, 0.0, 1.0, 0.0, 511.0, 2, 554.0, -511.0, -162.0, 2560.0, -511.0, -2741.0, 1536.0, -511.0, -2536.0, 0.0, 1.0, 0.0, 511.0, 2, 3505.0, -511.0, -2621.0, 3274.0, -511.0, -2841.0, 3072.0, -511.0, -2639.0, 0.0, 0.9999999, 0.0, 511.0, 2, -4879.0, -1242.0, -5687.0, -5786.0, -1228.0, -4362.0, -4929.0, -1228.0, -4194.0, 0.001826145, 0.9999549, -0.009315514, 1197.877, 2, -3541.0, -716.0, -3361.0, -3788.0, -716.0, -3361.0, -3912.0, -716.0, -3151.0, 0.0, 1.0, 0.0, 716.0, 2, -3541.0, -716.0, -3361.0, -3912.0, -716.0, -3151.0, -3583.0, -716.0, -3151.0, 0.0, 0.9999999, 0.0, 715.9999, 2, 3505.0, -511.0, -2621.0, 3584.0, -511.0, -3151.0, 3382.0, -511.0, -2949.0, 0.0, 0.9999999, 0.0, 511.0, 2, 3505.0, -511.0, -2621.0, 3382.0, -511.0, -2949.0, 3274.0, -511.0, -2841.0, 0.0, 1.0, 0.0, 511.0, 2, -4704.0, -1228.0, -5911.0, -3481.0, -1228.0, -3663.0, -4044.0, -1228.0, -5557.0, 0.0, 1.0, 0.0, 1228.0, 2, 3362.0, -511.0, -567.0, 4597.0, -511.0, -1016.0, 3072.0, -511.0, -2639.0, 0.0, 1.0, 0.0, 511.0, 2, 3362.0, -511.0, -567.0, 3072.0, -511.0, -2639.0, 2321.0, -511.0, -162.0, 0.0, 1.0, 0.0, 511.0, 2, -4702.0, -1228.0, -3663.0, -4686.0, -972.0, -3361.0, -3788.0, -972.0, -3361.0, 0.0, 0.7628111, -0.6466213, -1431.842, 2, -3481.0, -1228.0, -3663.0, -4702.0, -1228.0, -3663.0, -3541.0, -972.0, -3361.0, 0.0, 0.7628111, -0.6466213, -1431.842, 2, -3906.0, -1228.0, -6149.0, -4044.0, -1228.0, -6069.0, -3481.0, -1228.0, -6149.0, 0.0, 1.0, 0.0, 1228.0, 2, -4704.0, -1228.0, -5911.0, -4044.0, -1228.0, -5557.0, -4044.0, -1228.0, -6069.0, 0.0, 0.9999999, 0.0, 1228.0, 2, 554.0, -511.0, -162.0, 2321.0, -511.0, -162.0, 2560.0, -511.0, -2741.0, 0.0, 1.0, 0.0, 511.0, 2, -4132.0, -511.0, -562.0, -3583.0, -511.0, -3151.0, -4671.0, -511.0, -2545.0, 0.0, 1.0, 0.0, 511.0, 2, 554.0, -511.0, -162.0, 1024.0, -511.0, -2127.0, -553.0, -511.0, -162.0, 0.0, 1.0, 0.0, 511.0, 2, 1024.0, -511.0, -2127.0, -1023.0, -511.0, -2127.0, -553.0, -511.0, -162.0, 0.0, 1.0, 0.0, 511.0, 2, -3583.0, -511.0, -3151.0, -4686.0, -511.0, -3151.0, -4671.0, -511.0, -2545.0, 0.0, 1.0, 0.0, 511.0, 2, -3532.0, -1228.0, -5557.0, -3481.0, -1228.0, -3663.0, -3481.0, -1228.0, -6149.0, 0.0, 1.0, 0.0, 1228.0, 2, -3532.0, -1228.0, -5557.0, -4044.0, -1228.0, -5557.0, -3481.0, -1228.0, -3663.0, 0.0, 1.0, 0.0, 1228.0, 2, -4044.0, -1842.0, -6069.0, -3532.0, -1842.0, -5557.0, -3532.0, -1842.0, -6069.0, 0.0, 1.0, 0.0, 1842.0, 2, 2321.0, -511.0, -162.0, 3072.0, -511.0, -2639.0, 2560.0, -511.0, -2741.0, 0.0, 1.0, 0.0, 511.0, 2, -4044.0, -1228.0, -6069.0, -3532.0, -1228.0, -6069.0, -3481.0, -1228.0, -6149.0, 0.0, 1.0, 0.0, 1228.0, 2, -3532.0, -1228.0, -5557.0, -3481.0, -1228.0, -6149.0, -3532.0, -1228.0, -6069.0, 0.0, 1.0, 0.0, 1228.0, 2, -4044.0, -1842.0, -6069.0, -4044.0, -1842.0, -5557.0, -3532.0, -1842.0, -5557.0, 0.0, 1.0, 0.0, 1842.0, 2, 3495.0, -869.0, -201.0, 4897.0, -921.0, -194.0, 4730.0, -869.0, -651.0, 0.03638133, 0.9943375, 0.09984653, 756.9957, 2, 6659.0, -1330.0, 4236.0, 5882.0, -1330.0, 5370.0, 7245.0, -702.0, 4780.0, -0.5129783, 0.783142, -0.3514851, 5946.392, 2, 7245.0, -702.0, 4780.0, 5882.0, -1330.0, 5370.0, 6045.0, -554.0, 5617.0, -0.50458, 0.3563027, -0.7864143, 7664.867, 2, 3495.0, -665.0, -201.0, 4597.0, -665.0, -1016.0, 3362.0, -665.0, -567.0, 0.0, 1.0, 0.0, 665.0, 2, 3495.0, -665.0, -201.0, 4730.0, -665.0, -651.0, 4597.0, -665.0, -1016.0, 0.0, 0.9999999, 0.0, 664.9999, 2, 3495.0, -869.0, -201.0, 3662.0, -921.0, 254.0, 4897.0, -921.0, -194.0, 0.03637754, 0.9942939, 0.1002818, 757.0585, 2, 3784.0, -1330.0, 590.0, 4897.0, -972.0, -194.0, 3662.0, -972.0, 254.0, 0.241311, 0.7065761, 0.6652212, -365.855, 2, 3784.0, -1330.0, 590.0, 5019.0, -1330.0, 140.0, 4897.0, -972.0, -194.0, 0.242899, 0.7047086, 0.6666228, -375.1747, 2, 5019.0, -1330.0, 140.0, 3784.0, -1330.0, 590.0, 6045.0, -1330.0, 1574.0, 0.0, 1.0, 0.0, 1330.0, 2, 2816.0, -511.0, 5376.0, 4403.0, -657.0, 5715.0, 3913.0, -1330.0, 5495.0, 0.2199731, 0.1546937, -0.9631623, 4637.564, 2, 6864.0, -1330.0, 2905.0, 6659.0, -1330.0, 4236.0, 7552.0, -58.0, 2256.0, -0.8989549, 0.4155838, -0.1384566, 7125.369, 2, 7245.0, -702.0, 4780.0, 8018.0, -101.0, 3280.0, 6659.0, -1330.0, 4236.0, -0.6967691, 0.7135537, -0.07317112, 5898.764, 2, 7552.0, -58.0, 2256.0, 6659.0, -1330.0, 4236.0, 8018.0, -101.0, 3280.0, -0.5310404, 0.8013721, 0.2753162, 3435.783, 2, 7878.0, -101.0, 4665.0, 8018.0, -101.0, 3280.0, 7245.0, -702.0, 4780.0, -0.6935132, 0.7170251, -0.07010242, 5862.944, 2, 6377.0, -101.0, 5989.0, 7878.0, -101.0, 4665.0, 7245.0, -702.0, 4780.0, -0.5788313, 0.484086, -0.6562127, 7670.158, 2, 6377.0, -101.0, 5989.0, 7245.0, -702.0, 4780.0, 6045.0, -554.0, 5617.0, -0.327234, 0.7312765, -0.5984585, 5744.799, 2, 6377.0, -101.0, 5989.0, 6045.0, -554.0, 5617.0, 4403.0, -657.0, 5715.0, -0.08602903, 0.6691771, -0.7381064, 5036.713, 2, 6377.0, -101.0, 5989.0, 4403.0, -657.0, 5715.0, 4302.0, -190.0, 6316.0, -0.1311226, 0.7720207, -0.6219252, 4638.853, 2, 4403.0, -657.0, 5715.0, 6045.0, -554.0, 5617.0, 5882.0, -1330.0, 5370.0, -0.07630396, 0.3169386, -0.9453717, 5946.994, 2, 4403.0, -657.0, 5715.0, 5882.0, -1330.0, 5370.0, 3913.0, -1330.0, 5495.0, -0.05937375, 0.3489588, -0.9352553, 5835.672, 2, 4403.0, -657.0, 5715.0, 2816.0, -511.0, 5376.0, 3510.0, 0.0, 6358.0, 0.1932771, 0.8077614, -0.5569251, 2862.527, 2, 4403.0, -657.0, 5715.0, 3510.0, 0.0, 6358.0, 4302.0, -190.0, 6316.0, 0.1588526, 0.792365, -0.5890022, 3187.303, 2, -4704.0, -1228.0, -5911.0, -4369.0, 373.0, -6149.0, -5183.0, 132.0, -6475.0, -0.4178665, 0.2185272, 0.8818353, 3515.236, 2, 2967.0, -1330.0, 5005.0, 2816.0, -511.0, 5376.0, 3913.0, -1330.0, 5495.0, 0.4134993, 0.4378635, -0.7983068, 3351.032, 2, -3906.0, -1228.0, -6149.0, -4369.0, 373.0, -6149.0, -4704.0, -1228.0, -5911.0, 0.2848338, 0.08237231, 0.9550311, 7086.2, 2, -6777.0, 2507.0, -6813.0, -6230.0, 1949.0, -7009.0, -6922.0, 2865.0, -7377.0, 0.7341259, 0.6426615, 0.2191925, 4857.377, 4, -7603.0, 3004.0, -7160.0, -6777.0, 2507.0, -6813.0, -6922.0, 2865.0, -7377.0, 0.3140167, 0.8360305, 0.4499406, 3097.608, 4, -7463.0, 2074.0, -5749.0, -7294.0, 2487.0, -6235.0, -8132.0, 2961.0, -6761.0, 0.02006378, 0.7584098, 0.6514692, 2322.09, 4, -7318.0, 1567.0, -5405.0, -6278.0, 1036.0, -5412.0, -7463.0, 2074.0, -5749.0, 0.307737, 0.5929142, 0.7441443, 5345.022, 4, -6777.0, 2507.0, -6813.0, -5529.0, 1160.0, -6863.0, -6230.0, 1949.0, -7009.0, 0.7301048, 0.6718045, 0.1250021, 4115.346, 4, -6777.0, 2507.0, -6813.0, -5619.0, 1078.0, -6162.0, -5529.0, 1160.0, -6863.0, 0.7258881, 0.6661857, 0.1711229, 4415.076, 4, -6777.0, 2507.0, -6813.0, -6278.0, 1036.0, -5412.0, -5619.0, 1078.0, -6162.0, 0.5389633, 0.6695752, 0.5110652, 5455.816, 4, -6278.0, 1036.0, -5412.0, -6777.0, 2507.0, -6813.0, -7294.0, 2487.0, -6235.0, 0.5427054, 0.6684589, 0.5085603, 5466.909, 4, -5786.0, -1228.0, -4362.0, -4879.0, -1242.0, -5687.0, -6278.0, 1036.0, -5412.0, 0.7572009, 0.4029655, 0.5140677, 7118.37, 4, -6278.0, 1036.0, -5412.0, -7294.0, 2487.0, -6235.0, -7463.0, 2074.0, -5749.0, 0.3697614, 0.6406149, 0.6729704, 5299.801, 4, -5619.0, 1078.0, -6162.0, -4879.0, -1242.0, -5687.0, -4704.0, -1228.0, -5911.0, 0.7266254, 0.352506, 0.5897077, 7336.685, 4, -8132.0, 2961.0, -6761.0, -7294.0, 2487.0, -6235.0, -7603.0, 3004.0, -7160.0, 0.239026, 0.8794242, 0.4116792, 2123.148, 4, -5786.0, -1228.0, -4362.0, -6278.0, 1036.0, -5412.0, -7318.0, 1567.0, -5405.0, 0.23585, 0.450578, 0.8610193, 5673.704, 4, -5619.0, 1078.0, -6162.0, -5183.0, 132.0, -6475.0, -5529.0, 1160.0, -6863.0, 0.9155201, 0.3687881, 0.1606811, 5736.87, 4, -7294.0, 2487.0, -6235.0, -6777.0, 2507.0, -6813.0, -7603.0, 3004.0, -7160.0, 0.3665756, 0.8589168, 0.3576088, 2767.367, 4, -5619.0, 1078.0, -6162.0, -4704.0, -1228.0, -5911.0, -5183.0, 132.0, -6475.0, 0.9161078, 0.3780388, 0.133541, 5562.963, 4, -6278.0, 1036.0, -5412.0, -4879.0, -1242.0, -5687.0, -5619.0, 1078.0, -6162.0, 0.6938442, 0.3501492, 0.6292661, 7398.788, 4, -5344.0, 1494.0, -6924.0, -6922.0, 2865.0, -7377.0, -6230.0, 1949.0, -7009.0, 0.1568535, 0.467913, 0.8697438, 6161.269, 4, -5529.0, 1160.0, -6863.0, -5344.0, 1494.0, -6924.0, -6230.0, 1949.0, -7009.0, -0.001643162, 0.1805434, 0.9835657, 6531.696, 4, 5974.0, 910.0, -7191.0, 6789.0, 1022.0, -5679.0, 8192.0, 2540.0, -6143.0, -0.6529225, 0.6952916, 0.300436, 5428.279, 4, -24.0, 260.0, 5009.0, 512.0, 925.0, 3527.0, 48.0, 260.0, 3912.0, -0.8334571, 0.54987, -0.05470274, 111.0368, 4, 512.0, 925.0, 3527.0, -24.0, 260.0, 5009.0, 785.0, 996.0, 5113.0, -0.67645, 0.731719, 0.08368146, -625.6422, 4, 1062.0, 558.0, 3465.0, 512.0, 925.0, 3527.0, 1536.0, 718.0, 4698.0, 0.5059856, 0.8088824, -0.2994796, 48.98364, 4, 512.0, 925.0, 3527.0, 785.0, 996.0, 5113.0, 1536.0, 718.0, 4698.0, 0.2994875, 0.9494529, -0.094055, -699.8495, 4, 2155.0, 1057.0, 6472.0, 785.0, 996.0, 5113.0, -19.0, 1473.0, 6727.0, 0.1606566, 0.9654248, -0.205291, -38.02551, 4, -19.0, 1473.0, 6727.0, 785.0, 996.0, 5113.0, -265.0, 1126.0, 6164.0, -0.2968945, 0.8653995, -0.4036547, 1435.011, 4, 785.0, 996.0, 5113.0, -24.0, 260.0, 5009.0, -265.0, 1126.0, 6164.0, -0.5045496, 0.6369532, -0.5828553, 2741.805, 4, 2155.0, 1057.0, 6472.0, 1536.0, 718.0, 4698.0, 785.0, 996.0, 5113.0, 0.2094681, 0.9443698, -0.2535525, 191.389, 4, 2155.0, 1057.0, 6472.0, 2048.0, 236.0, 4760.0, 1536.0, 718.0, 4698.0, 0.6628301, 0.6581575, -0.3570503, 186.7581, 4, 1062.0, 558.0, 3465.0, 1536.0, 718.0, 4698.0, 2048.0, 236.0, 4760.0, 0.6657463, 0.6631923, -0.3419907, 107.9139, 4, 1713.0, -7.0, 3720.0, 1062.0, 558.0, 3465.0, 2048.0, 236.0, 4760.0, 0.6875044, 0.6261696, -0.3677627, 194.7653, 4, 5974.0, 910.0, -7191.0, 8192.0, 2540.0, -6143.0, 6684.0, 2540.0, -7764.0, -0.6392661, 0.4875114, 0.5947028, 7651.848, 4, 7305.0, 868.0, -4095.0, 8192.0, 2540.0, -6143.0, 6789.0, 1022.0, -5679.0, -0.65983, 0.6962343, 0.2826341, 5373.114, 4, 7305.0, 868.0, -4095.0, 8192.0, 2189.0, -4095.0, 8192.0, 2540.0, -6143.0, -0.8264453, 0.5549259, 0.09510691, 5944.97, 4, 5974.0, 910.0, -7191.0, 6684.0, 2540.0, -7764.0, 4997.0, 2201.0, -8085.0, -0.2499839, 0.4162099, 0.8742296, 7401.238, 4, 7203.0, 627.0, -1945.0, 8192.0, 2189.0, -4095.0, 7305.0, 868.0, -4095.0, -0.8299873, 0.5573041, 0.02309376, 5673.886, 4, 7203.0, 627.0, -1945.0, 8192.0, 1876.0, -2047.0, 8192.0, 2189.0, -4095.0, -0.7766262, 0.622731, 0.09517324, 5388.698, 4, -2047.0, 260.0, 5792.0, -2069.0, 1169.0, 6155.0, -829.0, 260.0, 5658.0, -0.1017338, 0.3668135, -0.9247151, 5052.329, 4, -2047.0, 260.0, 5792.0, -4825.0, 553.0, 5288.0, -4090.0, 1231.0, 6630.0, 0.1824851, 0.8337238, -0.521156, 3175.314, 4, -4090.0, 1231.0, 6630.0, -2069.0, 1169.0, 6155.0, -2047.0, 260.0, 5792.0, -0.2031076, 0.3588885, -0.9110139, 4767.52, 4, -4090.0, 1231.0, 6630.0, -4825.0, 553.0, 5288.0, -5750.0, 1704.0, 6144.0, 0.3753784, 0.7281635, -0.573471, 4441.041, 4, -6678.0, 590.0, 4409.0, -5750.0, 1704.0, 6144.0, -4825.0, 553.0, 5288.0, 0.3110948, 0.7153453, -0.6257006, 4414.151, 4, -2064.0, 1550.0, 6813.0, -2069.0, 1169.0, 6155.0, -4090.0, 1231.0, 6630.0, -0.09071664, 0.8621268, -0.4985057, 1872.783, 4, -2069.0, 1169.0, 6155.0, -2064.0, 1550.0, 6813.0, -265.0, 1126.0, 6164.0, 0.02312006, 0.8650888, -0.5010858, 2120.729, 4, -265.0, 1126.0, 6164.0, -829.0, 260.0, 5658.0, -2069.0, 1169.0, 6155.0, 0.01616551, 0.4965554, -0.8678544, 4794.617, 4, -5344.0, 1494.0, -6924.0, -4369.0, 2339.0, -7760.0, -6922.0, 2865.0, -7377.0, 0.232146, 0.5354959, 0.8120052, 6062.882, 4, -5344.0, 1494.0, -6924.0, -4369.0, 373.0, -6149.0, -4369.0, 2339.0, -7760.0, 0.1131737, 0.629744, 0.7685144, 4985.157, 4, -8164.0, 2413.0, -2679.0, -8191.0, 1667.0, 0.0, -7867.0, 1237.0, -1398.0, 0.9299185, 0.3517575, 0.1073232, 7030.583, 4, -7463.0, 2074.0, -5749.0, -8191.0, 3121.0, -6586.0, -8191.0, 2574.0, -4095.0, 0.7568871, 0.6383365, 0.1401727, 5130.591, 4, -8191.0, 3121.0, -6586.0, -7463.0, 2074.0, -5749.0, -8132.0, 2961.0, -6761.0, 0.863716, 0.4814527, -0.1489896, 4590.838, 4, -7318.0, 1567.0, -5405.0, -7463.0, 2074.0, -5749.0, -8191.0, 2574.0, -4095.0, 0.8698979, 0.4220138, 0.2553076, 7084.555, 4, -7091.0, 1592.0, -4094.0, -7318.0, 1567.0, -5405.0, -8191.0, 2574.0, -4095.0, 0.660508, 0.7397457, -0.1284737, 2980.016, 4, -8164.0, 2413.0, -2679.0, -7337.0, 1521.0, -2854.0, -8191.0, 2574.0, -4095.0, 0.7379616, 0.6719579, 0.06233069, 4570.268, 4, -8191.0, 2574.0, -4095.0, -7337.0, 1521.0, -2854.0, -7091.0, 1592.0, -4094.0, 0.6559258, 0.7349191, 0.1722073, 4186.195, 4, -6641.0, 543.0, -3573.0, -7091.0, 1592.0, -4094.0, -7337.0, 1521.0, -2854.0, 0.8614751, 0.4677397, 0.1976874, 6173.411, 4, -7318.0, 1567.0, -5405.0, -7091.0, 1592.0, -4094.0, -6479.0, 543.0, -4496.0, 0.8267862, 0.5411738, -0.1534781, 4372.852, 4, -6641.0, 543.0, -3573.0, -6479.0, 543.0, -4496.0, -7091.0, 1592.0, -4094.0, 0.877998, 0.4531802, 0.1541015, 6135.313, 4, -6899.0, 371.0, -2047.0, -7337.0, 1521.0, -2854.0, -7867.0, 1237.0, -1398.0, 0.7450741, 0.5492829, 0.3783555, 5710.976, 4, -7337.0, 1521.0, -2854.0, -8164.0, 2413.0, -2679.0, -7867.0, 1237.0, -1398.0, 0.7152625, 0.5895023, 0.3753487, 5422.493, 4, -6641.0, 543.0, -3573.0, -7337.0, 1521.0, -2854.0, -6899.0, 371.0, -2047.0, 0.8615541, 0.4673195, 0.1983355, 6176.479, 4, -7685.0, 260.0, 0.0, -7867.0, 1237.0, -1398.0, -7835.0, 1019.0, 0.0, 0.9809958, 0.1938727, 0.007777096, 7488.546, 4, -7685.0, 260.0, 0.0, -6899.0, 371.0, -2047.0, -7867.0, 1237.0, -1398.0, 0.7415135, 0.5914378, 0.3167949, 5544.757, 4, -7835.0, 1019.0, 0.0, -7867.0, 1237.0, -1398.0, -8191.0, 1667.0, 0.0, 0.8751206, 0.4807761, 0.05493944, 6366.659, 4, -8191.0, 1667.0, 0.0, -8191.0, 1729.0, 2324.0, -7835.0, 1019.0, 0.0, 0.8763719, 0.4814636, -0.01284455, 6375.763, 4, -7685.0, 260.0, 2269.0, -7685.0, 260.0, 0.0, -7835.0, 1019.0, 0.0, 0.9810255, 0.1938786, 0.0, 7488.773, 4, -7685.0, 260.0, 2269.0, -7835.0, 1019.0, 0.0, -8191.0, 1729.0, 2324.0, 0.9450157, 0.3237963, 0.04583916, 7074.249, 4, -829.0, 260.0, 5658.0, -265.0, 1126.0, 6164.0, -24.0, 260.0, 5009.0, -0.4750109, 0.6536211, -0.5891892, 2769.907, 4, -7685.0, 260.0, 2269.0, -8191.0, 1729.0, 2324.0, -7415.0, 508.0, 3183.0, 0.8827348, 0.3170437, -0.3467891, 7488.25, 4, -8011.0, 1630.0, 3950.0, -7415.0, 508.0, 3183.0, -8191.0, 1729.0, 2324.0, 0.8622274, 0.502351, -0.06486358, 6344.683, 4, 8192.0, 1710.0, 0.0, 7168.0, 474.0, 0.0, 8192.0, 1355.0, 1650.0, -0.7629032, 0.6320493, 0.1359864, 5168.899, 4, 7552.0, -58.0, 2256.0, 8192.0, 1355.0, 1650.0, 7168.0, 474.0, 0.0, -0.8341045, 0.488045, 0.2570638, 5747.528, 4, 7203.0, 627.0, -1945.0, 7168.0, 474.0, 0.0, 8192.0, 1710.0, 0.0, -0.769549, 0.6375551, 0.03630423, 5213.926, 4, -19.0, 1473.0, 6727.0, -265.0, 1126.0, 6164.0, -2064.0, 1550.0, 6813.0, 0.009785758, 0.8493385, -0.5277579, 2299.338, 4, -6678.0, 590.0, 4409.0, -7415.0, 508.0, 3183.0, -8011.0, 1630.0, 3950.0, 0.6428462, 0.6346664, -0.4288909, 5809.454, 4, -8011.0, 1630.0, 3950.0, -7167.0, 1937.0, 5120.0, -6678.0, 590.0, 4409.0, 0.6149976, 0.5309729, -0.582963, 6363.964, 4, -5750.0, 1704.0, 6144.0, -6678.0, 590.0, 4409.0, -7167.0, 1937.0, 5120.0, 0.5502788, 0.5371832, -0.6392396, 6176.231, 4, 7203.0, 627.0, -1945.0, 8192.0, 1710.0, 0.0, 8192.0, 1876.0, -2047.0, -0.7809721, 0.6225225, 0.05048302, 5333.209, 4, 2102.0, 58.0, 1692.0, 2637.0, 89.0, 1711.0, 2708.0, -10.0, 1639.0, -0.005156778, 0.5857424, -0.810481, 1348.2, 1, 2637.0, 89.0, 1711.0, 2640.0, 89.0, 2223.0, 2757.0, -72.0, 2338.0, 0.8105544, 0.5856441, -0.004749343, -2181.428, 1, 2708.0, -10.0, 1639.0, 2637.0, 89.0, 1711.0, 2757.0, -72.0, 2338.0, 0.810907, 0.5851542, -0.004942609, -2181.984, 1, 2102.0, 58.0, 1692.0, 2125.0, 89.0, 1714.0, 2637.0, 89.0, 1711.0, -0.004768504, 0.5810909, -0.8138247, 1353.311, 1, 2757.0, -72.0, 2338.0, 2640.0, 89.0, 2223.0, 2128.0, 89.0, 2226.0, 0.004758314, 0.583519, 0.8120855, -1869.761, 1, 2757.0, -72.0, 2338.0, 2128.0, 89.0, 2226.0, 2076.0, 15.0, 2280.0, 0.005986537, 0.5867101, 0.8097749, -1867.516, 1, 2076.0, 15.0, 2280.0, 2125.0, 89.0, 1714.0, 2102.0, 58.0, 1692.0, -0.8056779, 0.5923039, 0.00768953, 1646.171, 1, 2076.0, 15.0, 2280.0, 2128.0, 89.0, 2226.0, 2125.0, 89.0, 1714.0, -0.8165366, 0.5772738, 0.004784394, 1675.563, 1, -1842.0, 3174.0, -6143.0, -1842.0, 3174.0, -3540.0, -944.0, 3174.0, -3540.0, 0.0, 1.0, 0.0, -3174.0, 1, 1846.0, 3174.0, -6131.0, 937.0, 3174.0, -4580.0, 1846.0, 3174.0, -3540.0, 0.0, 1.0, 0.0, -3174.0, 1, -306.0, 5021.0, -3373.0, -465.0, 4618.0, -2998.0, 307.0, 5021.0, -3373.0, 0.0, 0.6812172, 0.7320814, -951.0811, 1, -561.0, 5017.0, -3681.0, -944.0, 4618.0, -3540.0, -306.0, 5021.0, -3373.0, -0.5578592, 0.695512, 0.4528313, -2135.471, 1, -306.0, 5021.0, -3373.0, -944.0, 4618.0, -3540.0, -465.0, 4618.0, -2998.0, -0.5536884, 0.6737844, 0.4893298, -1901.991, 1, -561.0, 5017.0, -3681.0, -936.0, 4618.0, -4580.0, -944.0, 4618.0, -3540.0, -0.7223926, 0.6914607, -0.005556866, -3894.776, 1, 307.0, 5021.0, -3373.0, -465.0, 4618.0, -2998.0, 466.0, 4618.0, -2998.0, 0.0, 0.6812171, 0.7320814, -951.0808, 1, -554.0, 5007.0, -4443.0, -936.0, 4618.0, -4580.0, -561.0, 5017.0, -3681.0, -0.7106284, 0.7033909, -0.01575894, -3985.583, 1, -507.0, 6298.0, -3698.0, -554.0, 5007.0, -4443.0, -561.0, 5017.0, -3681.0, -0.9990708, 0.04198629, -0.009728817, -806.9357, 1, -554.0, 5007.0, -4443.0, 0.0, 4618.0, -5120.0, -936.0, 4618.0, -4580.0, -0.3910199, 0.6226832, -0.6777678, -6345.722, 1, 0.0, 5003.0, -4717.0, 0.0, 4618.0, -5120.0, -554.0, 5007.0, -4443.0, -0.3188645, 0.6853263, -0.6547162, -6516.983, 1, -508.0, 6298.0, -4412.0, -554.0, 5007.0, -4443.0, -507.0, 6298.0, -3698.0, -0.999366, 0.03557509, 0.001399672, -725.5545, 1, 0.0, 5003.0, -4717.0, 555.0, 5007.0, -4443.0, 0.0, 4618.0, -5120.0, 0.3183482, 0.6854518, -0.6548361, -6518.177, 1, 555.0, 5007.0, -4443.0, 937.0, 4618.0, -4580.0, 0.0, 4618.0, -5120.0, 0.390766, 0.6225338, -0.6780514, -6346.484, 1, 0.0, 7608.0, -4021.0, -358.0, 6529.0, -4300.0, -348.0, 6536.0, -3768.0, -0.9500902, 0.3116718, 0.01375789, -2315.878, 1, 555.0, 5007.0, -4443.0, 562.0, 5017.0, -3681.0, 937.0, 4618.0, -4580.0, 0.7106284, 0.7033909, -0.01575894, -3986.294, 1, 562.0, 5017.0, -3681.0, 945.0, 4618.0, -3540.0, 937.0, 4618.0, -4580.0, 0.7223926, 0.6914607, -0.005556866, -3895.498, 1, 562.0, 5017.0, -3681.0, 307.0, 5021.0, -3373.0, 945.0, 4618.0, -3540.0, 0.5578592, 0.695512, 0.4528313, -2136.029, 1, 307.0, 5021.0, -3373.0, 466.0, 4618.0, -2998.0, 945.0, 4618.0, -3540.0, 0.5536884, 0.6737844, 0.4893298, -1902.545, 1, -348.0, 6536.0, -3768.0, -507.0, 6298.0, -3698.0, -201.0, 6539.0, -3584.0, -0.6424551, 0.5773949, 0.5038517, -2098.914, 1, -348.0, 6536.0, -3768.0, -358.0, 6529.0, -4300.0, -507.0, 6298.0, -3698.0, -0.8303577, 0.5571692, 0.008277054, -3899.435, 1, -201.0, 6539.0, -3584.0, -507.0, 6298.0, -3698.0, -281.0, 6298.0, -3421.0, -0.6393045, 0.5649997, 0.5215986, -1953.624, 1, -358.0, 6529.0, -4300.0, -508.0, 6298.0, -4412.0, -507.0, 6298.0, -3698.0, -0.8389519, 0.5442042, 0.001175003, -3848.402, 1, 0.0, 7608.0, -4021.0, -348.0, 6536.0, -3768.0, -201.0, 6539.0, -3584.0, -0.7280967, 0.3722097, 0.5756173, -517.2146, 1, 0.0, 7608.0, -4021.0, -201.0, 6539.0, -3584.0, 202.0, 6539.0, -3584.0, 0.0, 0.3783968, 0.9256435, 843.1692, 1, 202.0, 6539.0, -3584.0, -201.0, 6539.0, -3584.0, 282.0, 6298.0, -3421.0, 0.0, 0.56024, 0.8283303, -694.6733, 1, -201.0, 6539.0, -3584.0, -281.0, 6298.0, -3421.0, 282.0, 6298.0, -3421.0, 0.0, 0.56024, 0.8283303, -694.6733, 1, 0.0, 6527.0, -4471.0, 0.0, 6298.0, -4658.0, -358.0, 6529.0, -4300.0, -0.3440652, 0.5938839, -0.7272696, -7127.902, 1, -358.0, 6529.0, -4300.0, 0.0, 6298.0, -4658.0, -508.0, 6298.0, -4412.0, -0.3538008, 0.5839773, -0.730613, -7081.085, 1, 0.0, 6527.0, -4471.0, 359.0, 6529.0, -4300.0, 0.0, 6298.0, -4658.0, 0.3432198, 0.5940796, -0.7275093, -7130.251, 1, 359.0, 6529.0, -4300.0, 509.0, 6298.0, -4412.0, 0.0, 6298.0, -4658.0, 0.3532856, 0.5838234, -0.7309853, -7081.85, 1, 0.0, 7608.0, -4021.0, 349.0, 6536.0, -3768.0, 359.0, 6529.0, -4300.0, 0.9498285, 0.3124692, 0.01374248, -2322.007, 1, 349.0, 6536.0, -3768.0, 508.0, 6298.0, -3698.0, 359.0, 6529.0, -4300.0, 0.8303577, 0.5571692, 0.008277054, -3900.265, 1, 0.0, 7608.0, -4021.0, 359.0, 6529.0, -4300.0, 0.0, 6527.0, -4471.0, 0.4008973, 0.3520772, -0.8457677, -6079.435, 1, 359.0, 6529.0, -4300.0, 508.0, 6298.0, -3698.0, 509.0, 6298.0, -4412.0, 0.8389519, 0.5442042, 0.001175003, -3849.24, 1, 349.0, 6536.0, -3768.0, 202.0, 6539.0, -3584.0, 508.0, 6298.0, -3698.0, 0.6424551, 0.5773949, 0.5038517, -2099.557, 1, 202.0, 6539.0, -3584.0, 282.0, 6298.0, -3421.0, 508.0, 6298.0, -3698.0, 0.6393045, 0.5649997, 0.5215986, -1954.263, 1, 0.0, 7608.0, -4021.0, 202.0, 6539.0, -3584.0, 349.0, 6536.0, -3768.0, 0.7279178, 0.3727947, 0.5754648, -522.2781, 1, 0.0, 7608.0, -4021.0, 0.0, 6527.0, -4471.0, -358.0, 6529.0, -4300.0, -0.4018365, 0.3519191, -0.8453878, -6076.704, 1, -1842.0, 3174.0, -3540.0, -976.0, 2887.0, -2972.0, -944.0, 3174.0, -3540.0, 0.0, 0.8925336, 0.4509809, -1236.429, 1, -1023.0, 2460.0, -2127.0, -531.0, 2652.0, -2231.0, 0.0, 3584.0, -2736.0, -7.889866e-05, 0.4764394, 0.8792072, 697.952, 1, 466.0, 4069.0, -2998.0, 0.0, 3584.0, -2736.0, 532.0, 2652.0, -2231.0, -0.0009412724, 0.4759891, 0.8794507, 700.2319, 1, 466.0, 4069.0, -2998.0, 532.0, 2652.0, -2231.0, 1024.0, 2460.0, -2127.0, -0.0001336192, 0.4760184, 0.8794353, 699.6906, 1, -1023.0, 2460.0, -2127.0, -531.0, 2460.0, -2127.0, -531.0, 2652.0, -2231.0, 0.0, 0.4762831, 0.879292, 698.5975, 1, 977.0, 2890.0, -2977.0, 1846.0, 3174.0, -3540.0, 945.0, 3174.0, -3540.0, 0.0, 0.8928357, 0.4503825, -1239.506, 1, 532.0, 2460.0, -2127.0, 1024.0, 2460.0, -2127.0, 532.0, 2652.0, -2231.0, 0.0, 0.4762831, 0.879292, 698.5975, 1, 2867.0, 2662.0, -3356.0, 3483.0, 2339.0, -6149.0, 3484.0, 2339.0, -7274.0, 0.465855, 0.884861, 0.0004140933, -3689.717, 1, -3481.0, 2339.0, -7274.0, -3481.0, 2339.0, -6149.0, -2866.0, 2662.0, -3356.0, -0.4649749, 0.8853238, 0.0, -3689.35, 1, -1842.0, 3174.0, -6143.0, 0.0, 3174.0, -5120.0, 1846.0, 3174.0, -6131.0, 0.0, 1.0, 0.0, -3174.0, 1, -944.0, 3174.0, -3540.0, -936.0, 3174.0, -4580.0, -1842.0, 3174.0, -6143.0, 0.0, 0.9999999, 0.0, -3174.0, 1, -936.0, 3174.0, -4580.0, 0.0, 3174.0, -5120.0, -1842.0, 3174.0, -6143.0, 0.0, 1.0, 0.0, -3174.0, 1, 2560.0, 2339.0, -2741.0, 3213.0, 3349.0, -3009.0, 2867.0, 2662.0, -3356.0, -0.8478257, 0.5064234, -0.1572483, 554.8917, 1, 3482.0, 2339.0, -3663.0, 2867.0, 2662.0, -3356.0, 3213.0, 3349.0, -3009.0, -0.156778, 0.5070473, -0.8475398, -3744.621, 1, 937.0, 3174.0, -4580.0, 945.0, 3174.0, -3540.0, 1846.0, 3174.0, -3540.0, 0.0, 1.0, 0.0, -3174.0, 1, 0.0, 3174.0, -5120.0, 937.0, 3174.0, -4580.0, 1846.0, 3174.0, -6131.0, 0.0, 1.0, 0.0, -3174.0, 1, 3482.0, -511.0, -3663.0, 4407.0, -511.0, -3689.0, 4409.0, 545.0, -5437.0, 0.01453311, 0.8558359, 0.5170434, 2280.658, 1, 3482.0, -511.0, -3663.0, 4409.0, 545.0, -5437.0, 3483.0, 545.0, -5438.0, -0.0005521466, 0.8594094, 0.5112877, 2313.928, 1, 2560.0, 2339.0, -2741.0, 3174.0, 2339.0, -2434.0, 3213.0, 3349.0, -3009.0, -0.3957219, 0.4658549, 0.7914439, 2092.761, 1, 3174.0, 2339.0, -2434.0, 3584.0, 2339.0, -2639.0, 3213.0, 3349.0, -3009.0, 0.4012862, 0.4414148, 0.8025724, -352.6904, 1, 3789.0, 2339.0, -3048.0, 3482.0, 2339.0, -3663.0, 3213.0, 3349.0, -3009.0, 0.7913653, 0.4665673, -0.3950393, -5293.864, 1, 3584.0, 2339.0, -2639.0, 3789.0, 2339.0, -3048.0, 3213.0, 3349.0, -3009.0, 0.8019883, 0.4418497, 0.4019746, -2847.002, 1, -3481.0, 2339.0, -7274.0, -2869.0, 2662.0, -6131.0, -1842.0, 3174.0, -6143.0, -0.4462546, 0.8947978, -0.01392112, -3747.607, 1, -3481.0, 2339.0, -7274.0, -1842.0, 3174.0, -6143.0, 1846.0, 3174.0, -6131.0, 0.001938503, 0.8031553, -0.5957665, -6205.438, 1, 3484.0, 2339.0, -7274.0, -3481.0, 2339.0, -7274.0, 1846.0, 3174.0, -6131.0, 0.0, 0.8074816, -0.5898926, -6179.578, 1, 3484.0, 2339.0, -7274.0, 1846.0, 3174.0, -6131.0, 2870.0, 2662.0, -6131.0, 0.4471785, 0.8943571, -0.01251943, -3740.938, 1, -1535.0, 2339.0, -2536.0, -1023.0, 2460.0, -2127.0, -976.0, 2887.0, -2972.0, -0.4848075, 0.7911739, 0.3728347, -1649.226, 1, 0.0, 3584.0, -2736.0, -465.0, 4069.0, -2998.0, -1023.0, 2460.0, -2127.0, 0.0007570991, 0.475851, 0.8795255, 700.9318, 1, 0.0, 3584.0, -2736.0, 466.0, 4069.0, -2998.0, -465.0, 4069.0, -2998.0, 0.0, 0.4752893, 0.8798295, 703.7766, 1, -531.0, 2652.0, -2231.0, 0.0, 3584.0, -2047.0, 0.0, 3584.0, -2736.0, -0.8688735, 0.4950342, 0.0, -1774.203, 1, 0.0, 3584.0, -2047.0, 532.0, 2652.0, -2231.0, 0.0, 3584.0, -2736.0, 0.8684725, 0.4957375, 0.0, -1776.723, 1, 977.0, 2890.0, -2977.0, 945.0, 3174.0, -3540.0, 466.0, 4069.0, -2998.0, 0.9064596, 0.395512, 0.1479906, -1588.073, 1, 1024.0, 2460.0, -2127.0, 977.0, 2890.0, -2977.0, 466.0, 4069.0, -2998.0, 0.9061786, 0.3954248, 0.1499321, -1581.766, 1, -944.0, 3174.0, -3540.0, -976.0, 2887.0, -2972.0, -465.0, 4069.0, -2998.0, -0.9065093, 0.3951691, 0.1486008, -1583.965, 1, -976.0, 2887.0, -2972.0, -1023.0, 2460.0, -2127.0, -465.0, 4069.0, -2998.0, -0.906413, 0.395142, 0.1492594, -1581.835, 1, -2866.0, 2662.0, -3356.0, -976.0, 2887.0, -2972.0, -1842.0, 3174.0, -3540.0, -0.2220136, 0.6911817, 0.687734, -168.1812, 1, 2867.0, 2662.0, -3356.0, 977.0, 2890.0, -2977.0, 2560.0, 2339.0, -2741.0, 0.2059583, 0.8202644, 0.5336173, -983.2069, 1, 977.0, 2890.0, -2977.0, 1536.0, 2339.0, -2536.0, 2560.0, 2339.0, -2741.0, 0.1399242, 0.7013602, 0.6989384, -82.89722, 1, 977.0, 2890.0, -2977.0, 1024.0, 2460.0, -2127.0, 1536.0, 2339.0, -2536.0, 0.4850542, 0.7908288, 0.3732457, -1648.241, 1, 977.0, 2890.0, -2977.0, 2867.0, 2662.0, -3356.0, 1846.0, 3174.0, -3540.0, 0.2214646, 0.689467, 0.6896294, -155.9041, 1, -2559.0, 2339.0, -2741.0, -2866.0, 2662.0, -3356.0, -3212.0, 3349.0, -3009.0, 0.8478257, 0.5064234, -0.1572483, 554.0438, 1, -3173.0, 2339.0, -2434.0, -2559.0, 2339.0, -2741.0, -3212.0, 3349.0, -3009.0, 0.3957219, 0.4658549, 0.7914439, 2092.366, 1, -2559.0, 2339.0, -2741.0, -1535.0, 2339.0, -2536.0, -976.0, 2887.0, -2972.0, -0.1401735, 0.7000675, 0.7001835, -76.95862, 1, -2559.0, 2339.0, -2741.0, -976.0, 2887.0, -2972.0, -2866.0, 2662.0, -3356.0, -0.2060685, 0.8202172, 0.5336475, -983.0896, 1, 1846.0, 3174.0, -3540.0, 2867.0, 2662.0, -3356.0, 2870.0, 2662.0, -6131.0, 0.4481941, 0.8939362, 0.0004845342, -3663.004, 1, -2866.0, 2662.0, -3356.0, -3481.0, 2339.0, -3663.0, -3212.0, 3349.0, -3009.0, 0.156778, 0.5070473, -0.8475398, -3744.778, 1, -2866.0, 2662.0, -3356.0, -1842.0, 3174.0, -3540.0, -2869.0, 2662.0, -6131.0, -0.4471441, 0.8944618, 0.000483399, -3660.95, 1, -2866.0, 2662.0, -3356.0, -2869.0, 2662.0, -6131.0, -3481.0, 2339.0, -7274.0, -0.4674967, 0.8839947, 0.0005054018, -3691.343, 1, -3481.0, 2339.0, -6149.0, -3481.0, 2339.0, -3663.0, -2866.0, 2662.0, -3356.0, -0.464975, 0.8853239, 0.0, -3689.351, 1, -1842.0, 3174.0, -3540.0, -1842.0, 3174.0, -6143.0, -2869.0, 2662.0, -6131.0, -0.4461676, 0.8949494, 0.0, -3662.41, 1, -3481.0, 2339.0, -3663.0, -3788.0, 2339.0, -3048.0, -3212.0, 3349.0, -3009.0, -0.7913653, 0.4665673, -0.3950393, -5293.072, 1, 3484.0, 2339.0, -7274.0, 2870.0, 2662.0, -6131.0, 2867.0, 2662.0, -3356.0, 0.466303, 0.8846249, 0.0005041113, -3690.07, 1, 2867.0, 2662.0, -3356.0, 3482.0, 2339.0, -3663.0, 3483.0, 2339.0, -6149.0, 0.4650482, 0.8852854, 0.0001870668, -3689.295, 1, -3583.0, 2339.0, -2639.0, -3173.0, 2339.0, -2434.0, -3212.0, 3349.0, -3009.0, -0.4012862, 0.4414148, 0.8025724, -352.2891, 1, 1846.0, 3174.0, -3540.0, 2870.0, 2662.0, -6131.0, 1846.0, 3174.0, -6131.0, 0.4472136, 0.8944272, 0.0, -3664.469, 1, -531.0, 2652.0, -2231.0, -531.0, 2652.0, -2047.0, 0.0, 3584.0, -2047.0, -0.8688735, 0.4950341, 0.0, -1774.202, 1, 0.0, 3584.0, -2047.0, 532.0, 2652.0, -2047.0, 532.0, 2652.0, -2231.0, 0.8684724, 0.4957375, 0.0, -1776.723, 1, -3788.0, 2339.0, -3048.0, -3583.0, 2339.0, -2639.0, -3212.0, 3349.0, -3009.0, -0.8019883, 0.4418497, 0.4019746, -2846.2, 1, 1713.0, -7.0, 3720.0, 2967.0, -1330.0, 5005.0, 3587.0, -1330.0, 4339.0, 0.4345085, 0.8047262, 0.4044974, -2243.41, 1, 3587.0, -1330.0, 4339.0, 4402.0, -1330.0, 3226.0, 2601.0, -101.0, 2939.0, 0.4871353, 0.7971568, 0.3567074, -2234.889, 1, 2601.0, -101.0, 2939.0, 1713.0, -7.0, 3720.0, 3587.0, -1330.0, 4339.0, 0.4368649, 0.8058327, 0.3997282, -2229.698, 1, 1704.0, 41.0, 2512.0, 2102.0, 58.0, 1692.0, 2103.0, 89.0, 1305.0, 0.1216717, 0.9893761, 0.07956675, -447.7647, 1, 2103.0, 89.0, 1305.0, 2708.0, -10.0, 1639.0, 3238.0, -89.0, 1787.0, 0.1327568, 0.9897364, 0.05289229, -436.2986, 1, 2103.0, 89.0, 1305.0, 2102.0, 58.0, 1692.0, 2708.0, -10.0, 1639.0, 0.1180294, 0.9898152, 0.0795925, -440.1777, 1, 3238.0, -89.0, 1787.0, 2708.0, -10.0, 1639.0, 2757.0, -72.0, 2338.0, 0.1253707, 0.9889652, 0.07893087, -458.9819, 1, 3238.0, -89.0, 1787.0, 2757.0, -72.0, 2338.0, 2601.0, -101.0, 2939.0, 0.1274875, 0.9885442, 0.08079173, -469.199, 1, 2076.0, 15.0, 2280.0, 2601.0, -101.0, 2939.0, 2757.0, -72.0, 2338.0, 0.1197201, 0.9896731, 0.07883006, -443.1166, 1, 1704.0, 41.0, 2512.0, 2601.0, -101.0, 2939.0, 2076.0, 15.0, 2280.0, 0.1188, 0.9897246, 0.07957219, -442.8992, 1, 1704.0, 41.0, 2512.0, 2076.0, 15.0, 2280.0, 2102.0, 58.0, 1692.0, 0.1175907, 0.9900256, 0.07759941, -435.8953, 1, 3784.0, -1330.0, 590.0, 3362.0, 0.0, 725.0, 4099.0, -1330.0, 1483.0, 0.8947472, 0.3159335, -0.3156163, -2779.318, 1, 5019.0, -1330.0, 140.0, 6237.0, -52.0, 823.0, 4791.0, 405.0, -485.0, -0.6246966, 0.1906839, 0.7572277, 3282.95, 1, 6237.0, -52.0, 823.0, 5019.0, -1330.0, 140.0, 6045.0, -1330.0, 1574.0, -0.7376937, 0.4209855, 0.527806, 4188.502, 1, 5249.0, 397.0, -636.0, 4791.0, 405.0, -485.0, 6237.0, -52.0, 823.0, 0.09407817, 0.967654, 0.2340832, -729.098, 1, 7552.0, -58.0, 2256.0, 6623.0, 371.0, 0.0, 6237.0, -52.0, 823.0, -0.3285834, 0.8937807, 0.3052686, 1844.615, 1, 6237.0, -52.0, 823.0, 6864.0, -1330.0, 2905.0, 7552.0, -58.0, 2256.0, -0.5900244, 0.5966604, 0.5439372, 3263.348, 1, 6045.0, -1330.0, 1574.0, 6864.0, -1330.0, 2905.0, 6237.0, -52.0, 823.0, -0.7807283, 0.3995951, 0.4804031, 4494.81, 1, 6623.0, 371.0, 0.0, 5249.0, 397.0, -636.0, 6237.0, -52.0, 823.0, -0.1631024, 0.9065037, 0.389421, 743.9143, 1, 7552.0, -58.0, 2256.0, 7168.0, 474.0, 0.0, 6623.0, 371.0, 0.0, -0.1795818, 0.9502146, 0.2546425, 836.8409, 1, 1713.0, -7.0, 3720.0, 2601.0, -101.0, 2939.0, 1704.0, 41.0, 2512.0, 0.1384359, 0.9896309, 0.03829169, -372.6584, 1, 4402.0, -1330.0, 3226.0, 3362.0, 0.0, 725.0, 3238.0, -89.0, 1787.0, 0.6375453, 0.7579596, 0.1379605, -2243.448, 1, 3362.0, 0.0, 725.0, 4402.0, -1330.0, 3226.0, 4099.0, -1330.0, 1483.0, 0.8990058, 0.4091022, -0.1562816, -2909.153, 1, 2103.0, 89.0, 1305.0, 3238.0, -89.0, 1787.0, 3362.0, 0.0, 725.0, 0.1142163, 0.9887872, 0.09620045, -453.7405, 1, 4402.0, -1330.0, 3226.0, 3238.0, -89.0, 1787.0, 2601.0, -101.0, 2939.0, 0.5077099, 0.8115408, 0.2891924, -2088.524, 1, 4989.0, 545.0, -7072.0, 4997.0, 545.0, -8085.0, 4370.0, 545.0, -7749.0, 0.0, 1.0, 0.0, -545.0, 2, 0.0, 727.0, 2146.0, -1112.0, 801.0, 1396.0, -2317.0, 639.0, 2048.0, -0.04432763, 0.9856344, 0.1629724, -1066.295, 2, 4997.0, 545.0, -8085.0, 4981.0, 545.0, -6167.0, 5974.0, 910.0, -7191.0, -0.3476362, 0.9376251, -0.002899989, 1202.686, 2, 5438.0, 704.0, -5679.0, 4981.0, 545.0, -6167.0, 4963.0, 544.0, -3762.0, -0.326645, 0.9451448, -0.002051753, 1099.262, 2, 5438.0, 704.0, -5679.0, 5974.0, 910.0, -7191.0, 4981.0, 545.0, -6167.0, -0.3369709, 0.9414738, 0.008814284, 1219.706, 2, 6789.0, 1022.0, -5679.0, 5974.0, 910.0, -7191.0, 5438.0, 704.0, -5679.0, -0.2288176, 0.9721151, 0.05132901, 851.4386, 2, 0.0, 727.0, 2146.0, 1062.0, 558.0, 3465.0, 1173.0, 324.0, 2385.0, 0.350223, 0.9222291, -0.1638212, -318.9004, 2, 0.0, 727.0, 2146.0, 2103.0, 89.0, 1305.0, 2318.0, 371.0, 683.0, 0.4268729, 0.7589817, 0.4916568, -1606.875, 2, 91.0, 801.0, 1396.0, -1112.0, 801.0, 1396.0, 0.0, 727.0, 2146.0, 0.0, 0.9951677, 0.09818988, -934.2024, 2, 2318.0, 371.0, 683.0, 91.0, 801.0, 1396.0, 0.0, 727.0, 2146.0, 0.2258971, 0.9663855, 0.1227589, -966.0027, 2, 2103.0, 89.0, 1305.0, 0.0, 727.0, 2146.0, 1173.0, 324.0, 2385.0, 0.3127523, 0.9477368, 0.06309399, -824.4043, 2, 0.0, 727.0, 2146.0, 512.0, 925.0, 3527.0, 1062.0, 558.0, 3465.0, 0.5050596, 0.808108, -0.3031107, 62.98102, 2, -2047.0, 260.0, 5792.0, -3471.0, 260.0, 4623.0, -4825.0, 553.0, 5288.0, 0.1324127, 0.9779828, -0.1612965, 951.0028, 2, 1173.0, 324.0, 2385.0, 1062.0, 558.0, 3465.0, 1704.0, 41.0, 2512.0, 0.4910904, 0.860434, -0.1359542, -530.579, 2, 1062.0, 558.0, 3465.0, 1713.0, -7.0, 3720.0, 1704.0, 41.0, 2512.0, 0.6495666, 0.7598819, 0.0253545, -1201.707, 2, 2103.0, 89.0, 1305.0, 1173.0, 324.0, 2385.0, 1704.0, 41.0, 2512.0, 0.4295435, 0.8854882, 0.177209, -1213.396, 2, 2103.0, 89.0, 1305.0, 3362.0, 0.0, 725.0, 2318.0, 371.0, 683.0, 0.2777086, 0.8352114, 0.4746575, -1277.783, 2, 0.0, 727.0, 2146.0, -816.0, 260.0, 3370.0, 512.0, 925.0, 3527.0, -0.4511265, 0.8915889, 0.03942226, -732.7853, 2, -816.0, 260.0, 3370.0, 48.0, 260.0, 3912.0, 512.0, 925.0, 3527.0, -0.4026624, 0.6525717, 0.6418825, -2661.385, 2, -2317.0, 518.0, 929.0, -2317.0, 639.0, 2048.0, -1112.0, 801.0, 1396.0, -0.1883947, 0.9764017, -0.1055805, -844.2023, 2, -4318.0, 260.0, 3323.0, -4825.0, 553.0, 5288.0, -3471.0, 260.0, 4623.0, 0.1608861, 0.9813907, -0.1048235, 787.8733, 2, -4825.0, 553.0, 5288.0, -4318.0, 260.0, 3323.0, -6678.0, 590.0, 4409.0, 0.07989665, 0.988704, -0.1268105, 509.3221, 2, 6789.0, 1022.0, -5679.0, 5438.0, 704.0, -5679.0, 7305.0, 868.0, -4095.0, -0.225906, 0.9597453, 0.1668992, 1500.636, 2, 5438.0, 704.0, -5679.0, 4963.0, 544.0, -3762.0, 7305.0, 868.0, -4095.0, -0.1298166, 0.990252, 0.05048379, 295.5029, 2, 7305.0, 868.0, -4095.0, 4963.0, 544.0, -3762.0, 5633.0, 371.0, -2047.0, -0.1154524, 0.9827843, 0.1442419, 580.9936, 2, 3556.0, 405.0, -36.0, 2318.0, 371.0, 683.0, 3362.0, 0.0, 725.0, 0.2708719, 0.8194242, 0.5051458, -1276.902, 2, -2317.0, 639.0, 2048.0, -3360.0, 420.0, 1187.0, -3727.0, 260.0, 2048.0, -0.258968, 0.963443, 0.06865229, -1356.269, 2, -5307.0, 543.0, -3479.0, -5864.0, 543.0, -3689.0, -5220.0, 422.0, -2744.0, -0.06389208, 0.9834628, 0.1694661, -283.5229, 2, -5864.0, 543.0, -3689.0, -5784.0, 543.0, -4360.0, -6479.0, 543.0, -4496.0, 0.0, 1.0, 0.0, -543.0, 2, -5864.0, 543.0, -3689.0, -6479.0, 543.0, -4496.0, -6641.0, 543.0, -3573.0, 0.0, 1.0, 0.0, -543.0, 2, -5864.0, 543.0, -3689.0, -6641.0, 543.0, -3573.0, -5220.0, 422.0, -2744.0, 0.01723192, 0.9931669, 0.1154242, -12.44189, 2, -5220.0, 422.0, -2744.0, -6641.0, 543.0, -3573.0, -5438.0, 405.0, -1522.0, 0.06958041, 0.9972299, 0.02628596, 14.50739, 2, -2317.0, 518.0, 929.0, -3360.0, 420.0, 1187.0, -2317.0, 639.0, 2048.0, -0.1191532, 0.9871217, -0.1067397, -688.2458, 2, -2317.0, 639.0, 2048.0, -816.0, 260.0, 3370.0, 0.0, 727.0, 2146.0, -0.04967202, 0.943734, 0.3269538, -1387.737, 2, -2317.0, 260.0, 3579.0, -816.0, 260.0, 3370.0, -2317.0, 639.0, 2048.0, 0.0334404, 0.9701564, 0.2401628, -1034.302, 2, -2317.0, 260.0, 3579.0, -2317.0, 639.0, 2048.0, -3372.0, 260.0, 2933.0, -0.145572, 0.9603592, 0.2377375, -1437.846, 2, -3727.0, 260.0, 2048.0, -3372.0, 260.0, 2933.0, -2317.0, 639.0, 2048.0, -0.2581846, 0.9605285, 0.1035656, -1424.094, 2, 7203.0, 627.0, -1945.0, 7305.0, 868.0, -4095.0, 5633.0, 371.0, -2047.0, -0.1665458, 0.9807404, 0.1020329, 783.1593, 2, 6301.0, 474.0, -958.0, 7203.0, 627.0, -1945.0, 5633.0, 371.0, -2047.0, -0.1612832, 0.9868923, 0.005589765, 553.8134, 2, 6301.0, 474.0, -958.0, 5633.0, 371.0, -2047.0, 5249.0, 397.0, -636.0, -0.08560704, 0.9954585, -0.0416407, 27.67086, 2, -6899.0, 371.0, -2047.0, -5438.0, 405.0, -1522.0, -6641.0, 543.0, -3573.0, -0.05970137, 0.9930086, 0.1018313, -571.8373, 2, -4363.0, 371.0, 255.0, -5438.0, 405.0, -1522.0, -7685.0, 260.0, 0.0, -0.03652551, 0.9984831, 0.04120054, -540.3042, 2, -6899.0, 371.0, -2047.0, -7685.0, 260.0, 0.0, -5438.0, 405.0, -1522.0, -0.0375169, 0.9985056, 0.03973905, -547.9288, 2, 7203.0, 627.0, -1945.0, 6301.0, 474.0, -958.0, 7168.0, 474.0, 0.0, -0.08466763, 0.9934586, 0.07662509, 135.9983, 2, 6623.0, 371.0, 0.0, 7168.0, 474.0, 0.0, 6301.0, 474.0, -958.0, -0.1831351, 0.969016, 0.1657392, 853.3991, 2, 6301.0, 474.0, -958.0, 5249.0, 397.0, -636.0, 6623.0, 371.0, 0.0, -0.03624408, 0.9922487, 0.1188645, -128.0797, 2, -4363.0, 371.0, 255.0, -7685.0, 260.0, 0.0, -4666.0, 260.0, 1401.0, -0.03985616, 0.9955075, 0.08588561, -565.1265, 2, -4318.0, 260.0, 3323.0, -4599.0, 260.0, 2299.0, -6678.0, 590.0, 4409.0, 0.1231366, 0.9918143, -0.03379041, 386.1176, 2, -7685.0, 260.0, 2269.0, -4666.0, 260.0, 1401.0, -7685.0, 260.0, 0.0, 0.0, 1.0, 0.0, -260.0, 2, -4599.0, 260.0, 2299.0, -4666.0, 260.0, 1401.0, -7685.0, 260.0, 2269.0, 0.0, 1.0, 0.0, -260.0, 2, -7685.0, 260.0, 2269.0, -7415.0, 508.0, 3183.0, -4599.0, 260.0, 2299.0, 0.002552505, 0.9649101, -0.2625677, 364.5056, 2, -7415.0, 508.0, 3183.0, -6678.0, 590.0, 4409.0, -4599.0, 260.0, 2299.0, 0.05605129, 0.9933936, -0.1001371, 229.7127, 2, 1713.0, -7.0, 3720.0, 2630.0, -448.0, 4746.0, 2967.0, -1330.0, 5005.0, 0.7634197, 0.1045222, -0.6373895, 1064.083, 3, 2816.0, -511.0, 5376.0, 2630.0, -448.0, 4746.0, 2048.0, 236.0, 4760.0, 0.7505235, 0.641825, -0.1574006, -939.3156, 3, 2630.0, -448.0, 4746.0, 2816.0, -511.0, 5376.0, 2967.0, -1330.0, 5005.0, 0.9273836, 0.2822268, -0.2455763, -1147.076, 3, 2048.0, 236.0, 4760.0, 3510.0, 0.0, 6358.0, 2816.0, -511.0, 5376.0, 0.734809, 0.2289752, -0.638456, 1480.124, 3, 2155.0, 1057.0, 6472.0, 3510.0, 0.0, 6358.0, 2048.0, 236.0, 4760.0, 0.5458012, 0.7417209, -0.3898093, 562.6453, 3, 2048.0, 236.0, 4760.0, 2630.0, -448.0, 4746.0, 1713.0, -7.0, 3720.0, 0.7042399, 0.6067665, -0.3686198, 169.1501, 3, 7552.0, -58.0, 2256.0, 8018.0, -101.0, 3280.0, 8192.0, 1355.0, 1650.0, -0.7741289, 0.5109209, 0.3737438, 5032.688, 3, -5529.0, 1160.0, -6863.0, -5183.0, 132.0, -6475.0, -4369.0, 373.0, -6149.0, -0.4140531, 0.1961284, 0.8888721, 3583.521, 3, -5529.0, 1160.0, -6863.0, -4369.0, 373.0, -6149.0, -5344.0, 1494.0, -6924.0, -0.3167659, 0.3373565, 0.8864818, 3941.192, 3, -6577.0, 215.0, -4901.0, -6479.0, 543.0, -4496.0, -5784.0, 543.0, -4360.0, 0.1257395, 0.7558433, -0.6425656, -2484.732, 3, -6479.0, 543.0, -4496.0, -6577.0, 215.0, -4901.0, -7318.0, 1567.0, -5405.0, 0.8447889, 0.2971074, -0.4450384, 3311.166, 3, -600.0, 884.0, -121.0, -600.0, 882.0, -162.0, -604.0, 903.0, -142.0, 0.9805819, 0.1958775, -0.009555, 414.0373, 2, -600.0, 882.0, -162.0, -2047.0, 600.0, -162.0, -604.0, 903.0, -142.0, -0.1306856, 0.6705746, -0.7302404, -788.1571, 2, -2054.0, 621.0, -142.0, -600.0, 884.0, -121.0, -604.0, 903.0, -142.0, -0.1401799, 0.7207832, 0.6788381, -639.1409, 2, -2054.0, 621.0, -142.0, -2053.0, 601.0, -121.0, -600.0, 884.0, -121.0, -0.1390247, 0.7137912, 0.6864213, -631.3492, 2, -2047.0, 600.0, -162.0, -4146.0, 473.0, -544.0, -2054.0, 621.0, -142.0, 0.08618226, 0.7020034, -0.7069398, -359.3112, 2, -2047.0, 600.0, -162.0, -4132.0, 453.0, -562.0, -4146.0, 473.0, -544.0, 0.08681195, 0.6993275, -0.7095101, -356.8331, 2, -2047.0, 600.0, -162.0, -2054.0, 621.0, -142.0, -604.0, 903.0, -142.0, -0.1285767, 0.6611215, -0.7391795, -779.6166, 2, -4146.0, 473.0, -544.0, -2053.0, 601.0, -121.0, -2054.0, 621.0, -142.0, -0.1812712, 0.7078161, 0.6827425, -714.9353, 2, -4146.0, 473.0, -544.0, -4157.0, 452.0, -525.0, -2053.0, 601.0, -121.0, -0.1809244, 0.7102662, 0.6802854, -715.9933, 2, -4839.0, 487.0, -1597.0, -4157.0, 452.0, -525.0, -4146.0, 473.0, -544.0, -0.6044986, 0.6848236, 0.4069374, -2608.799, 2, -4796.0, 487.0, -1606.0, -4817.0, 508.0, -1601.0, -4132.0, 453.0, -562.0, 0.6126743, 0.7000249, -0.3668725, 2008.277, 2, -4817.0, 508.0, -1601.0, -4146.0, 473.0, -544.0, -4132.0, 453.0, -562.0, 0.5895774, 0.7278587, -0.3501716, 1909.618, 2, -4693.0, 523.0, -2548.0, -4839.0, 487.0, -1597.0, -4817.0, 508.0, -1601.0, -0.6958276, 0.7137612, -0.07980592, -3842.162, 2, -4693.0, 523.0, -2548.0, -4712.0, 502.0, -2551.0, -4839.0, 487.0, -1597.0, -0.7325228, 0.675173, -0.08690021, -4012.267, 2, -4817.0, 508.0, -1601.0, -4839.0, 487.0, -1597.0, -4146.0, 473.0, -544.0, -0.5937243, 0.6981919, 0.4000243, -2574.212, 2, -4746.0, 625.0, -3666.0, -4712.0, 502.0, -2551.0, -4693.0, 523.0, -2548.0, -0.7448958, 0.6603026, 0.09555487, -3597.66, 2, -4796.0, 487.0, -1606.0, -4671.0, 503.0, -2545.0, -4817.0, 508.0, -1601.0, 0.7156712, 0.6901877, 0.1070308, 3268.129, 2, -4671.0, 503.0, -2545.0, -4693.0, 523.0, -2548.0, -4817.0, 508.0, -1601.0, 0.6620208, 0.7429909, 0.09845348, 2969.139, 2, -4671.0, 503.0, -2545.0, -4700.0, 625.0, -3663.0, -4693.0, 523.0, -2548.0, 0.6665295, 0.7427467, 0.06376185, 2902.031, 2, -4724.0, 646.0, -3662.0, -4746.0, 625.0, -3666.0, -4693.0, 523.0, -2548.0, -0.6964144, 0.710934, 0.09787588, -3390.704, 2, -4700.0, 625.0, -3663.0, -4724.0, 646.0, -3662.0, -4693.0, 523.0, -2548.0, 0.6586552, 0.7496799, 0.06444553, 2863.193, 2, -4928.0, 625.0, -4193.0, -5855.0, 646.0, -4353.0, -4941.0, 646.0, -4174.0, 0.1354338, 0.7095234, -0.6915448, -2675.682, 2, -4955.0, 625.0, -4156.0, -4746.0, 625.0, -3666.0, -4724.0, 646.0, -3662.0, -0.6874827, 0.6643661, 0.2932324, -2603.031, 2, -5855.0, 646.0, -4353.0, -4955.0, 625.0, -4156.0, -4941.0, 646.0, -4174.0, -0.1380023, 0.6959956, 0.7046598, 1809.767, 2, -5855.0, 646.0, -4353.0, -5850.0, 625.0, -4331.0, -4955.0, 625.0, -4156.0, -0.1368868, 0.7008229, 0.700078, 1793.236, 2, -4941.0, 646.0, -4174.0, -4955.0, 625.0, -4156.0, -4724.0, 646.0, -3662.0, -0.66809, 0.688098, 0.2831554, -2563.654, 2, -4700.0, 625.0, -3663.0, -4941.0, 646.0, -4174.0, -4724.0, 646.0, -3662.0, 0.6284102, 0.7308658, -0.2663379, 1521.141, 2, -4700.0, 625.0, -3663.0, -4928.0, 625.0, -4193.0, -4941.0, 646.0, -4174.0, 0.6739453, 0.6795161, -0.2899236, 1680.855, 2, -4928.0, 625.0, -4193.0, -5859.0, 625.0, -4375.0, -5855.0, 646.0, -4353.0, 0.1362335, 0.7041228, -0.696887, -2690.765, 2, -5855.0, 646.0, -4353.0, -6632.0, 625.0, -3854.0, -6620.0, 646.0, -3837.0, -0.3972596, 0.703783, -0.5889604, -5344.343, 2, -5855.0, 646.0, -4353.0, -5859.0, 625.0, -4375.0, -6632.0, 625.0, -3854.0, -0.4001378, 0.6981657, -0.5936786, -5378.105, 2, -6609.0, 625.0, -3820.0, -5855.0, 646.0, -4353.0, -6620.0, 646.0, -3837.0, 0.4025825, 0.6940425, 0.596852, 4506.866, 2, -6609.0, 625.0, -3820.0, -5850.0, 625.0, -4331.0, -5855.0, 646.0, -4353.0, 0.3945103, 0.7078097, 0.5859752, 4403.362, 2, 5229.0, 479.0, -629.0, 4815.0, 507.0, -515.0, 4821.0, 486.0, -495.0, 0.2322516, 0.7047743, 0.6703376, -1130.388, 2, 5229.0, 479.0, -629.0, 5223.0, 500.0, -649.0, 4815.0, 507.0, -515.0, 0.2322516, 0.7047743, 0.6703376, -1130.388, 2, 4821.0, 486.0, -495.0, 4815.0, 507.0, -515.0, 4808.0, 486.0, -534.0, -0.9482533, 0.03010328, 0.3160844, 4713.361, 2, 4808.0, 486.0, -534.0, 5223.0, 500.0, -649.0, 5217.0, 479.0, -668.0, -0.2151956, 0.6882888, -0.6927838, 330.2055, 2, 4808.0, 486.0, -534.0, 4815.0, 507.0, -515.0, 5223.0, 500.0, -649.0, -0.2139967, 0.6936335, -0.6878067, 324.5015, 2, 4597.0, 487.0, -1016.0, 4635.0, 486.0, -1000.0, 4617.0, 507.0, -1009.0, -0.3858438, 0.06371732, 0.9203612, 2677.78, 2, 5050.0, 453.0, -2048.0, 4597.0, 487.0, -1016.0, 4617.0, 507.0, -1009.0, -0.6213678, 0.725193, -0.2966436, 2201.869, 2, 5050.0, 453.0, -2048.0, 4617.0, 507.0, -1009.0, 5069.0, 473.0, -2040.0, -0.6290527, 0.7173761, -0.29944, 2238.492, 2, 4617.0, 507.0, -1009.0, 4635.0, 486.0, -1000.0, 5087.0, 452.0, -2031.0, 0.6703373, 0.6907615, 0.2711024, -3171.621, 2, 4617.0, 507.0, -1009.0, 5087.0, 452.0, -2031.0, 5069.0, 473.0, -2040.0, 0.6703373, 0.6907615, 0.2711024, -3171.621, 2, 3326.0, 484.0, -553.0, 2314.0, 447.0, -162.0, 2314.0, 468.0, -142.0, -0.2917283, 0.659656, -0.6926388, 267.9855, 2, 605.0, 877.0, -121.0, 610.0, 897.0, -141.0, 605.0, 877.0, -162.0, -0.9701425, 0.2425356, 0.0, 374.2325, 2, 610.0, 897.0, -141.0, 605.0, 877.0, -121.0, 2314.0, 451.0, -120.0, 0.1680196, 0.6757353, 0.7177402, -607.4252, 2, 605.0, 877.0, -162.0, 2314.0, 468.0, -142.0, 2314.0, 447.0, -162.0, 0.1709687, 0.6795011, -0.7134761, -814.9416, 2, 605.0, 877.0, -162.0, 610.0, 897.0, -141.0, 2314.0, 468.0, -142.0, 0.1738355, 0.6921123, -0.7005439, -825.6411, 2, 3341.0, 484.0, -515.0, 2314.0, 468.0, -142.0, 2314.0, 451.0, -120.0, 0.2052793, 0.7744333, 0.5984257, -752.4747, 2, 610.0, 897.0, -141.0, 2314.0, 451.0, -120.0, 2314.0, 468.0, -142.0, 0.1957137, 0.7759824, 0.5996228, -730.8948, 2, 3332.0, 502.0, -535.0, 3326.0, 484.0, -553.0, 2314.0, 468.0, -142.0, -0.2692034, 0.7243904, -0.6346559, 193.8008, 2, 3341.0, 484.0, -515.0, 3332.0, 502.0, -535.0, 2314.0, 468.0, -142.0, 0.2064701, 0.7716635, 0.6015856, -753.4853, 2, 3326.0, 484.0, -553.0, 3332.0, 502.0, -535.0, 3341.0, 484.0, -515.0, 0.9286418, 0.05702186, -0.3665691, -3318.974, 2, 2283.0, 65.0, 2072.0, 2485.0, 65.0, 1849.0, 2283.0, 65.0, 1849.0, 0.0, 1.0, 0.0, -65.0, 2, 2283.0, 65.0, 2072.0, 2485.0, 65.0, 2072.0, 2485.0, 65.0, 1849.0, 0.0, 1.0, 0.0, -65.0, 2, -3225.0, -562.0, -2178.0, -3532.0, -562.0, -2178.0, -3225.0, -562.0, -1871.0, 0.0, 1.0, 0.0, 562.0, 2, -3532.0, -562.0, -2178.0, -3532.0, -562.0, -1871.0, -3225.0, -562.0, -1871.0, 0.0, 1.0, 0.0, 562.0, 2, -3532.0, -1330.0, -6069.0, -4044.0, -1330.0, -6069.0, -4044.0, -1330.0, -5557.0, 0.0, 1.0, 0.0, 1330.0, 2, -3532.0, -1330.0, -6069.0, -4044.0, -1330.0, -5557.0, -3532.0, -1330.0, -5557.0, 0.0, 1.0, 0.0, 1330.0, 2};


struct MarioState {
    float slideVelX, slideVelZ;
    float forwardVel;
    signed short slideYaw;
    signed short faceAngle;

    float floornormalz, floornormalx;
    int floorclass;

    float intendedMag;
    signed short intendedYaw;

    float vel[3];
};

struct importantshit {
    float speed;
    int controller1, controller2;
    float intendedmag1;
    signed short intendedyaw1;
    signed short angle1, angle2;
    int controllerstuff, which, frictionframes;
    signed short slidingyaw;
    float middlex, middlez;
    float finalx, finalz;

    float magused1, magused2;
    signed short angleused1, angleused2;
    



    //debug stuff
    float initialx, initialz;
    
    signed short cameraangle;
    float camz;
    float camx;
    
    float xdebug;
    float zdebug;
    float speeddebug;

    
    signed short intendedyaw, slideyaw, slopeangle;
    float slidex, slidez, steepness, intendedmag;

    int zzzzz;
};

struct floor {
    float one;
    int two;
};



int offset1(int a, int b) {
    return a * 1344 + b * 21;
}

int offset2(int a, int b) {
    return a * 64 + b;
}

float cosine(signed short x) {
    return cTable[(unsigned short) (x) >> 4];
}

float sine(signed short x) {
    return cosine(x - 16384);
}

signed short atan2_lookup(float y, float x) {
    unsigned short ret;

    if (x == 0) {
        ret = atanTable[0];
    } else {
        ret = atanTable[(signed short)(y / x * 1024.0f + 0.5f)];
    }
    return ret;
}

signed short atan2s(float y, float x) {
    unsigned short ret;

    if (x >= 0) {
        if (y >= 0) {
            if (y >= x) {
                ret = atan2_lookup(x, y);
            } else {
                ret = 0x4000 - atan2_lookup(y, x);
            }
        } else {
            y = -y;
            if (y < x) {
                ret = 0x4000 + atan2_lookup(y, x);
            } else {
                ret = 0x8000 - atan2_lookup(x, y);
            }
        }
    } else {
        x = -x;
        if (y < 0) {
            y = -y;
            if (y >= x) {
                ret = 0x8000 + atan2_lookup(x, y);
            } else {
                ret = 0xC000 - atan2_lookup(y, x);
            }
        } else {
            if (y < x) {
                ret = 0xC000 + atan2_lookup(y, x);
            } else {
                ret = -1 * atan2_lookup(x, y);
            }
        }
    }
    return ret;
}

struct floor find_floor_cells(signed long x, signed long y, signed long z, __global const int *cells, __global const int *cellsnumber) {
    int cellx, celly;

    x = (signed short) x;
    y = (signed short) y;
    z = (signed short) z;
    struct floor result;
    result.one = -11000;
    result.two = -1;
    if (x < -8192 || x > 8192) {
        return result;
    }
    if (z < -8192 || z > 8192) {
        return result;
    }
    cellx = ((x + 8192) / 256) & 63;
    celly = ((z + 8192) / 256) & 63;
    int i;
    signed long x1, z1, x2, z2, x3, z3;
    float nx, ny, nz;
    float oo;
    float height;

    
    
    result.one = (float) *(cellsnumber + offset2(cellx, celly));

    for (i = 0; i < *(cellsnumber + offset2(cellx, celly)); i++) {
        result.one = 1;
        x1 = (signed long) *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 1);
        z1 = (signed long) *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 3);
        x2 = (signed long) *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 4);
        z2 = (signed long) *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 6);
        if ((z1 - z) * (x2 - x1) - (x1 - x) * (z2 - z1) < 0) {
            continue;
        }
        result.one = 1;
        x3 = *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 7);
        z3 = *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 9);

        if ((z2 - z) * (x3 - x2) - (x2 - x) * (z3 - z2) < 0) {
            continue;
        }
        if ((z3 - z) * (x1 - x3) - (x3 - x) * (z1 - z3) < 0) {
            continue;
        }
        nx = *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 10);
        ny = *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 11);
        nz = *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 12);
        oo = *(Alltrigs + *(cells + offset1(cellx, celly) + i) + 13);

        height = -(x * nx + nz * z + oo) / ny;

        if (y - (height + -78.0f) < 0.0f) {
            continue;
        }
        result.one = height;
        result.two = *(cells + offset1(cellx, celly) + i);
        return result;
    }
    return result;
}




int should_slide(float ynorm, int class) {

    float normY;

    switch(class) {
                
        case 4:
            normY = 0.9848077f;
            break;

        case 3:
            normY = 0.9396926f;
            break;

        default:
            normY = 0.7880108f;
            break;

        case 1:
            normY = 0.0f;
            break;
    }

    return ynorm <= normY;
}



void update_sliding_angle(struct MarioState *m, float accel, float lossFactor) {
    signed int newFacingDYaw;
    signed short facingDYaw;

    signed short slopeAngle = atan2s(m->floornormalz, m->floornormalx);
    float steepness = sqrt(m->floornormalx * m->floornormalx + m->floornormalz * m->floornormalz);
    //UNUSED f32 normalY = floor->normal.y;

    m->slideVelX += accel * steepness * sine(slopeAngle);
    m->slideVelZ += accel * steepness * cosine(slopeAngle);

    m->slideVelX *= lossFactor;
    m->slideVelZ *= lossFactor;

    m->slideYaw = atan2s(m->slideVelZ, m->slideVelX);

    facingDYaw = m->faceAngle - m->slideYaw;
    newFacingDYaw = facingDYaw;

    //! -0x4000 not handled - can slide down a slope while facing perpendicular to it
    if (newFacingDYaw > 0 && newFacingDYaw <= 0x4000) {
        if ((newFacingDYaw -= 0x200) < 0) {
            newFacingDYaw = 0;
        }
    } else if (newFacingDYaw > -0x4000 && newFacingDYaw < 0) {
        if ((newFacingDYaw += 0x200) > 0) {
            newFacingDYaw = 0;
        }
    } else if (newFacingDYaw > 0x4000 && newFacingDYaw < 0x8000) {
        if ((newFacingDYaw += 0x200) > 0x8000) {
            newFacingDYaw = 0x8000;
        }
    } else if (newFacingDYaw > -0x8000 && newFacingDYaw < -0x4000) {
        if ((newFacingDYaw -= 0x200) < -0x8000) {
            newFacingDYaw = -0x8000;
        }
    }

    m->faceAngle = m->slideYaw + newFacingDYaw;

    m->vel[0] = m->slideVelX;
    m->vel[1] = 0.0f;
    m->vel[2] = m->slideVelZ;

    //mario_update_moving_sand(m);
    //mario_update_windy_ground(m);

    //! Speed is capped a frame late (butt slide HSG)
    m->forwardVel = sqrt(m->slideVelX * m->slideVelX + m->slideVelZ * m->slideVelZ);
    if (m->forwardVel > 100.0f) {
        m->slideVelX = m->slideVelX * 100.0f / m->forwardVel;
        m->slideVelZ = m->slideVelZ * 100.0f / m->forwardVel;
    }

    if (newFacingDYaw < -0x4000 || newFacingDYaw > 0x4000) {
        m->forwardVel *= -1.0f;
    }
}

signed short update_sliding(struct MarioState *m, float stopSpeed) {
    float lossFactor;
    float accel;
    float oldSpeed;
    float newSpeed;

    signed int stopped = 0;

    signed short intendedDYaw = m->intendedYaw - m->slideYaw;
    float forward = cosine(intendedDYaw);
    float sideward = sine(intendedDYaw);

    //! 10k glitch
    if (forward < 0.0f && m->forwardVel >= 0.0f) {
        forward *= 0.5f + 0.5f * m->forwardVel / 100.0f;
    }

    switch(m->floorclass) {
        case 4: //very slippery
            accel = 10.0f;
            lossFactor = m->intendedMag / 32.0f * forward * 0.02f + 0.98f;
            break;

        case 3: //slippery
            accel = 8.0f;
            lossFactor = m->intendedMag / 32.0f * forward * 0.02f + 0.96f;
            break;

        default:
            accel = 7.0f;
            lossFactor = m->intendedMag / 32.0f * forward * 0.02f + 0.92f;
            break;

        case 1: //non sliperry
            accel = 5.0f;
            lossFactor = m->intendedMag / 32.0f * forward * 0.02f + 0.92f;
            break;
    }

    oldSpeed = sqrt(m->slideVelX * m->slideVelX + m->slideVelZ * m->slideVelZ);

    //! This is attempting to use trig derivatives to rotate Mario's speed.
    // It is slightly off/asymmetric since it uses the new X speed, but the old
    // Z speed.
    m->slideVelX += m->slideVelZ * (m->intendedMag / 32.0f) * sideward * 0.05f;
    m->slideVelZ -= m->slideVelX * (m->intendedMag / 32.0f) * sideward * 0.05f;

    newSpeed = sqrt(m->slideVelX * m->slideVelX + m->slideVelZ * m->slideVelZ);

    if (oldSpeed > 0.0f && newSpeed > 0.0f) {
        m->slideVelX = m->slideVelX * oldSpeed / newSpeed;
        m->slideVelZ = m->slideVelZ * oldSpeed / newSpeed;
    }

    update_sliding_angle(m, accel, lossFactor);

    //if (!mario_floor_is_slope(m) && m->forwardVel * m->forwardVel < stopSpeed * stopSpeed) {
    //    mario_set_forward_vel(m, 0.0f);
    //    stopped = 1;
    //}


    return stopped;
}




void slidekick_second_freefall2(float speed, signed short angle, float x, float y, float z, struct importantshit *important, __global const int *cells, __global const int *cellsnumber, __global int *result) {

    //printf("s");
    float x2, y2, z2;
    struct floor floor1;
    int i;

    x2 = x;
    y2 = y;
    z2 = z;

    for (i = 0; i < 4; i++) {

        x2 = x2 + (speed * sine(angle) * 0.25f);
        z2 = z2 + (speed * cosine(angle) * 0.25f);



        floor1 = find_floor_cells(x2, y2, z2, cells, cellsnumber);

        if (floor1.two == -1) {
            break;
        }

        if (floor1.one < y2) {
            continue;
        }

        if (*(Alltrigs + floor1.two + 11) < 0.2923717f) {
            break;
        }

        if (should_slide(*(Alltrigs + floor1.two + 11), *(Alltrigs + floor1.two + 14))) {
            break;
        }


        important->finalx = x2;
        important->finalz = z2;

        //solutions++;
        important->zzzzz--;
        // if (important->zzzzz == 0) {
            //printf("%d\n", i);
            //printf("%d\n", important->slidingyaw);
            //printf("%f\n", m->intendedMag);
            //printimportant(important);
        //}

        //printf("a");

        *result = *result + 1;
        //printf("solutions = %d\n", solutions);
        break;
    }
} 

void slidekick_tenk_stuff3(signed short angle, float speed, float x, float y, float z, int slideyaw, __global const int *cells,  __global const int *cellsnumber, __global int *result, float mag_from_list, signed short yaw_from_list) {
    struct MarioState mario;
    struct MarioState *m = &mario;
    int j, c;
    float newspeed;

    float x2, y2, z2;
    float slidex, slidez, defacto, camx, camz;
    struct floor floor1, first;

    signed short camerayaw, slideangle;

    struct importantshit importantshit;
    struct importantshit* important = &importantshit;

    important->slidingyaw = slideyaw;
    important->zzzzz = 0;

    

    //printf("%f\n", speed);

    floor1 = find_floor_cells(x, y, z, cells, cellsnumber);


    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;

    
    //camx = focusstartx + (important->initialx - focusstartx) * 0.8f;
    //camz = focusstartz + (important->initialz - focusstartz) * 0.8f;



    //camerayaw = atan2s(camz - cameraz, camx - camerax);

    //camerayaw = tenk_camera_angle;

    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);

    



        

    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;



    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);


    m->vel[0] = 0;
    m->vel[1] = 0;
    m->vel[2] = 0;


    m->intendedMag = mag_from_list;
    m->intendedYaw = yaw_from_list + m->slideYaw;
      


    update_sliding(m, 0);

    if (m->forwardVel > 0.0f) {
        return;
    }

    if (m->forwardVel < -1.0f * speed) {
        return;
    }

    if (m->forwardVel > -65536) {
        return;
    }

    x2 = x;
    y2 = y;
    z2 = z;
    defacto = *(Alltrigs + floor1.two + 11);

    slidex = m->vel[0];
    slidez = m->vel[2];


    for (j = 0; j < 4; j++) {

        //spent so long working with only qspeed I forgor how to regular speed :(
        //x2 = x2 + (slidex * defacto);
        //z2 = z2 + (slidez * defacto);
            
        x2 = x2 + (slidex * 0.25f * defacto);
        z2 = z2 + (slidez * 0.25f * defacto);
        first = find_floor_cells(x2, y2, z2, cells, cellsnumber);

        if (first.two == -1) {
            break;
        }
            
        if ((y2 - first.one) < 100) {
            y2 = first.one;
            defacto = *(Alltrigs + first.two + 11);
            continue;
        }



        //newspeed = sqrt(slidex * slidex + slidez * slidez);


        //important->initialx = x2;
        //important->initialz = z2;

        //important->middlex = x2;
        //important->middlez = z2;


            
        //important->magused2 = magTable[second_dimention];
        //important->angleused2 = first_dimention * 16;
        //important->speeddebug = m->forwardVel;
            
        slidekick_second_freefall2(m->forwardVel, m->faceAngle, x2, y2, z2, important, cells, cellsnumber, result);
        break;
    }


}

void slidekick_tenk_stuff2(signed short angle, float speed, float x, float y, float z, int slideyaw, __global const int *cells,  __global const int *cellsnumber, __global int *result, int first_dimention, int second_dimention) {
    struct MarioState mario;
    struct MarioState *m = &mario;
    int j, c;
    float newspeed;

    float x2, y2, z2;
    float slidex, slidez, defacto, camx, camz;
    struct floor floor1, first;

    signed short camerayaw, slideangle;

    struct importantshit importantshit;
    struct importantshit* important = &importantshit;

    important->slidingyaw = slideyaw;
    important->zzzzz = 0;

    

    //printf("%f\n", speed);

    floor1 = find_floor_cells(x, y, z, cells, cellsnumber);


    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;

    
    //camx = focusstartx + (important->initialx - focusstartx) * 0.8f;
    //camz = focusstartz + (important->initialz - focusstartz) * 0.8f;



    //camerayaw = atan2s(camz - cameraz, camx - camerax);

    //camerayaw = tenk_camera_angle;

    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);

    



        

    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;



    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);


    m->vel[0] = 0;
    m->vel[1] = 0;
    m->vel[2] = 0;


    m->intendedMag = magTable[second_dimention];
    m->intendedYaw = first_dimention * 16;
      


    update_sliding(m, 0);

    if (m->forwardVel > 0.0f) {
        return;
    }

    if (m->forwardVel < -1.0f * speed) {
        return;
    }

    if (m->forwardVel > -65536) {
        return;
    }

    x2 = x;
    y2 = y;
    z2 = z;
    defacto = *(Alltrigs + floor1.two + 11);

    slidex = m->vel[0];
    slidez = m->vel[2];


    for (j = 0; j < 4; j++) {

        //spent so long working with only qspeed I forgor how to regular speed :(
        //x2 = x2 + (slidex * defacto);
        //z2 = z2 + (slidez * defacto);
            
        x2 = x2 + (slidex * 0.25f * defacto);
        z2 = z2 + (slidez * 0.25f * defacto);
        first = find_floor_cells(x2, y2, z2, cells, cellsnumber);

        if (first.two == -1) {
            break;
        }
            
        if ((y2 - first.one) < 100) {
            y2 = first.one;
            defacto = *(Alltrigs + first.two + 11);
            continue;
        }



        //newspeed = sqrt(slidex * slidex + slidez * slidez);


        //important->initialx = x2;
        //important->initialz = z2;

        //important->middlex = x2;
        //important->middlez = z2;


            
        //important->magused2 = magTable[second_dimention];
        //important->angleused2 = first_dimention * 16;
        //important->speeddebug = m->forwardVel;
            
        slidekick_second_freefall2(m->forwardVel, m->faceAngle, x2, y2, z2, important, cells, cellsnumber, result);
        break;
    }


}

void slidekick_second_freefall(float speed, signed short angle, float x, float y, float z, struct importantshit *important, __global const int *cells, __global const int *cellsnumber, __global int *result) {

    //printf("s");
    float x2, y2, z2;
    struct floor floor1;
    int i;

    x2 = x;
    y2 = y;
    z2 = z;

    for (i = 0; i < 1; i++) {

        x2 = x2 + (speed * sine(angle) * 0.25f);
        z2 = z2 + (speed * cosine(angle) * 0.25f);



        floor1 = find_floor_cells(x2, y2, z2, cells, cellsnumber);

        if (floor1.two == NULL) {
            break;
        }

        if (floor1.one < y2) {
            continue;
        }

        if (*(Alltrigs + floor1.two + 11) < 0.2923717f) {
            break;
        }

        if (should_slide(*(Alltrigs + floor1.two + 11), *(Alltrigs + floor1.two + 14))) {
            break;
        }


        important->finalx = x2;
        important->finalz = z2;

        //solutions++;
        important->zzzzz--;
        // if (important->zzzzz == 0) {
            //printf("%d\n", i);
            //printf("%d\n", important->slidingyaw);
            //printf("%f\n", m->intendedMag);
            //printimportant(important);
        //}
        *result = *result + 1;
        //printf("solutions = %d\n", solutions);
        break;
    }
} 

void slidekick_tenk_stuff(signed short angle, float speed, float x, float y, float z, int slideyaw, __global const int *cells, __global const int *cellsnumber, __global int *result, int first_dimention, int second_dimention) {
    struct MarioState mario;
    struct MarioState *m = &mario;
    int j, c;
    float newspeed;

    float x2, y2, z2;
    float slidex, slidez, defacto, camx, camz;
    struct floor floor1, first;

    signed short camerayaw, slideangle;

    struct importantshit importantshit;
    struct importantshit* important = &importantshit;

    important->slidingyaw = slideyaw;
    important->zzzzz = 0;

    

    //printf("%f\n", speed);

    floor1 = find_floor_cells(x, y, z, cells, cellsnumber);


    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;

    
    //camx = focusstartx + (important->initialx - focusstartx) * 0.8f;
    //camz = focusstartz + (important->initialz - focusstartz) * 0.8f;



    //camerayaw = atan2s(camz - cameraz, camx - camerax);

    //camerayaw = tenk_camera_angle;

    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);

    



        

    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;



    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);


    m->vel[0] = 0;
    m->vel[1] = 0;
    m->vel[2] = 0;


    m->intendedMag = magTable[second_dimention];
    m->intendedYaw = first_dimention * 16;
      


    update_sliding(m, 0);

    if (m->forwardVel > 0.0f) {
        return;
    }

    if (m->forwardVel < -1.0f * speed) {
        return;
    }

    if (m->forwardVel > -65536) {
        return;
    }

    x2 = x;
    y2 = y;
    z2 = z;
    defacto = *(Alltrigs + floor1.two + 11);

    slidex = m->vel[0];
    slidez = m->vel[2];


    for (j = 0; j < 1; j++) {

        //spent so long working with only qspeed I forgor how to regular speed :(
        //x2 = x2 + (slidex * defacto);
        //z2 = z2 + (slidez * defacto);
            
        x2 = x2 + (slidex * 0.25f * defacto);
        z2 = z2 + (slidez * 0.25f * defacto);
        first = find_floor_cells(x2, y2, z2, cells, cellsnumber);

        if (first.two == NULL) {
            break;
        }
            
        if ((y2 - first.one) < 100) {
            y2 = first.one;
            defacto = *(Alltrigs + first.two + 11);
            continue;
        }



        //newspeed = sqrt(slidex * slidex + slidez * slidez);


        //important->initialx = x2;
        //important->initialz = z2;

        //important->middlex = x2;
        //important->middlez = z2;


            
        //important->magused2 = magTable[second_dimention];
        //important->angleused2 = first_dimention * 16;
        //important->speeddebug = m->forwardVel;
            
        slidekick_second_freefall(m->forwardVel, m->faceAngle, x2, y2, z2, important, cells, cellsnumber, result);
        break;
    }


}



/*void fast_tenk_stuff(signed short angle, float speed, float x, float y, float z, struct importantshit *important, __global const int *cells, __global const int *cellsnumber, __global int *result, int intendedHAngle, float intendedMag) {
    struct MarioState mario;
    struct MarioState *m = &mario;
    int j;
    float newspeed;

    float x2, y2, z2;
    float slidex, slidez, defacto, camx, camz;
    struct floor floor1, first;



    signed short camerayaw, slideangle;

    floor1 = find_floor_cells(x, y, z, cells, cellsnumber);

    m->slideVelX = speed * sine(angle);
    m->slideVelZ = speed * cosine(angle);
    m->forwardVel = speed;
    m->slideYaw = important->slidingyaw;
    m->faceAngle = angle;

    m->floornormalx = *(Alltrigs + floor1.two + 10);
    m->floornormalz = *(Alltrigs + floor1.two + 12);
    m->floorclass = *(Alltrigs + floor1.two + 14);




    
        m->slideVelX = speed * sine(angle);
        m->slideVelZ = speed * cosine(angle);
        m->forwardVel = speed;
        m->slideYaw = important->slidingyaw;
        m->faceAngle = angle;

        m->floornormalx = *(Alltrigs + floor1.two + 10);
        m->floornormalz = *(Alltrigs + floor1.two + 12);
        m->floorclass = *(Alltrigs + floor1.two + 14);

        m->vel[0] = 0;
        m->vel[1] = 0;
        m->vel[2] = 0;

        m->intendedMag = intendedMag;
        m->intendedYaw = intendedHAngle * 16 + m->slideYaw;

        update_sliding(m, 0);

        if (m->forwardVel > 0.0f) {
            return;
        }

        if (m->forwardVel < -1.0f * speed) {
            return;
        }

        if (m->forwardVel > -65536) {
            return;
        }

        x2 = x;
        y2 = y;
        z2 = z;
        defacto = *(Alltrigs + floor1.two + 11);

        slidex = m->vel[0];
        slidez = m->vel[2];


        for (j = 0; j < 1; j++) {

            //spent so long working with only qspeed I forgor how to regular speed :(
            //x2 = x2 + (slidex * defacto);
            //z2 = z2 + (slidez * defacto);
            
            x2 = x2 + (slidex * 0.25f * defacto);
            z2 = z2 + (slidez * 0.25f * defacto);
            first = find_floor_cells(x2, y2, z2, cells, cellsnumber);

            if (first.two == NULL) {
                break;
            }
            
            if ((y2 - first.one) < 100) {
                y2 = first.one;
                defacto = *(Alltrigs + floor1.two + 11);
                continue;
            }

            //important->magused2 = magTable[ma];
            //important->angleused2 = m->intendedYaw;

            slidekick_second_freefall2(m->forwardVel, m->faceAngle, x2, y2, z2, important, cells, cellsnumber, result);
            break;
        }

        m->slideVelX = speed * sine(angle);
        m->slideVelZ = speed * cosine(angle);
        m->forwardVel = speed;
        m->slideYaw = important->slidingyaw;
        m->faceAngle = angle;

        m->floornormalx = *(Alltrigs + floor1.two + 10);
        m->floornormalz = *(Alltrigs + floor1.two + 12);
        m->floorclass = *(Alltrigs + floor1.two + 14);

        m->vel[0] = 0;
        m->vel[1] = 0;
        m->vel[2] = 0;

        m->intendedMag = intendedMag;
        m->intendedYaw = (4096 - intendedHAngle) * 16 + m->slideYaw;

        update_sliding(m, 0);

        if (m->forwardVel > 0.0f) {
            return;
        }

        if (m->forwardVel < -1.0f * speed) {
            return;
        }

        if (m->forwardVel > -65536) {
            return;
        }

        x2 = x;
        y2 = y;
        z2 = z;
        defacto = *(Alltrigs + floor1.two + 11);

        slidex = m->vel[0];
        slidez = m->vel[2];


        for (j = 0; j < 1; j++) {

            //spent so long working with only qspeed I forgor how to regular speed :(
            //x2 = x2 + (slidex * defacto);
            //z2 = z2 + (slidez * defacto);
            
            x2 = x2 + (slidex * 0.25f * defacto);
            z2 = z2 + (slidez * 0.25f * defacto);
            first =  find_floor_cells(x2, y2, z2, cells, cellsnumber);

            if (first.two == NULL) {
                break;
            }
            
            if ((y2 - first.one) < 100) {
                y2 = first.one;
                defacto = *(Alltrigs + floor1.two + 11);
                continue;
            }

            //important->magused2 = magTable[ma];
            //important->angleused2 = m->intendedYaw;

            slidekick_second_freefall2(m->forwardVel, m->faceAngle, x2, y2, z2, important, cells, cellsnumber, result);
            break;
        }
}*/







__kernel void tenk_kernel(__global const int *allFloors, __global const int *allFloorsNumbers, __global const int *Marioints, __global const float *Mariofloats, __global int *result) {
 
    // Get the index of the current element to be processed
    int i = get_global_id(0) + 1024;
    int j = get_global_id(1);


    signed short intendedYaw = (i * 16) - *(Marioints + 1);
    float intendedMag = magTable[j];

    if ((cosine(intendedYaw) * intendedMag) > (-640000 / *(Mariofloats + 3))) {
        slidekick_tenk_stuff2(*(Marioints), *(Mariofloats + 3), *(Mariofloats), *(Mariofloats + 1), *(Mariofloats + 2), *(Marioints + 1), allFloors, allFloorsNumbers, result, i, j);
    }


    //struct floor a = find_floor_cells(68536, 1000, 0, allFloors, allFloorsNumbers);
    //float b = a.one;
    //*result = b;
    //*result = *result + 1;
}

__kernel void tenk_kernel_butfast(__global const int *allFloors, __global const int *allFloorsNumbers, __global const int *Marioints, __global const float *Mariofloats, __global int *result, __global const float *Mag_list, __global const signed short *Yaw_list) {
 
    // Get the index of the current element to be processed
    int i = get_global_id(0);





    slidekick_tenk_stuff3(*(Marioints), *(Mariofloats + 3), *(Mariofloats), *(Mariofloats + 1), *(Mariofloats + 2), *(Marioints + 1), allFloors, allFloorsNumbers, result, *(Mag_list + i), *(Yaw_list + i));
    slidekick_tenk_stuff3(*(Marioints), *(Mariofloats + 3), *(Mariofloats), *(Mariofloats + 1), *(Mariofloats + 2), *(Marioints + 1), allFloors, allFloorsNumbers, result, *(Mag_list + i), (4096 - (*(Yaw_list + i) >> 4)) * 16);


    //struct floor a = find_floor_cells(68536, 1000, 0, allFloors, allFloorsNumbers);
    //float b = a.one;
    //*result = b;
    //*result = *result + 1;
}






